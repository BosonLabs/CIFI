{"ast":null,"code":"class SuggestedParams {\n  constructor(c) {\n    this.c = c;\n  }\n  /**\n   * returns the common needed parameters for a new transaction, in a format the transaction builder expects\n   * @param headers, optional\n   * @returns {Object}\n   */\n\n\n  async do(headers = {}) {\n    let res = await this.c.get(\"/v2/transactions/params\", {}, headers);\n    return {\n      \"flatFee\": false,\n      \"fee\": res.body['fee'],\n      \"firstRound\": res.body['last-round'],\n      \"lastRound\": res.body['last-round'] + 1000,\n      \"genesisID\": res.body['genesis-id'],\n      \"genesisHash\": res.body['genesis-hash']\n    };\n  }\n\n}\n\nmodule.exports = {\n  SuggestedParams\n};","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/react-dispenser-usdc-algo/dispenser-react-app/node_modules/algosdk/src/client/v2/algod/suggestedParams.js"],"names":["SuggestedParams","constructor","c","do","headers","res","get","body","module","exports"],"mappings":"AAAA,MAAMA,eAAN,CAAsB;AACrBC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACd,SAAKA,CAAL,GAASA,CAAT;AACA;AAED;AACD;AACA;AACA;AACA;;;AACC,QAAMC,EAAN,CAASC,OAAO,GAAC,EAAjB,EAAqB;AACpB,QAAIC,GAAG,GAAG,MAAM,KAAKH,CAAL,CAAOI,GAAP,CAAW,yBAAX,EAAsC,EAAtC,EAA0CF,OAA1C,CAAhB;AACA,WAAO;AACN,iBAAW,KADL;AAEN,aAAOC,GAAG,CAACE,IAAJ,CAAS,KAAT,CAFD;AAGN,oBAAcF,GAAG,CAACE,IAAJ,CAAS,YAAT,CAHR;AAIN,mBAAaF,GAAG,CAACE,IAAJ,CAAS,YAAT,IAAyB,IAJhC;AAKN,mBAAaF,GAAG,CAACE,IAAJ,CAAS,YAAT,CALP;AAMN,qBAAeF,GAAG,CAACE,IAAJ,CAAS,cAAT;AANT,KAAP;AAQA;;AApBoB;;AAuBtBC,MAAM,CAACC,OAAP,GAAiB;AAAET,EAAAA;AAAF,CAAjB","sourcesContent":["class SuggestedParams {\n\tconstructor(c) {\n\t\tthis.c = c;\n\t}\n\n\t/**\n\t * returns the common needed parameters for a new transaction, in a format the transaction builder expects\n\t * @param headers, optional\n\t * @returns {Object}\n\t */\n\tasync do(headers={}) {\n\t\tlet res = await this.c.get(\"/v2/transactions/params\", {}, headers);\n\t\treturn {\n\t\t\t\"flatFee\": false,\n\t\t\t\"fee\": res.body['fee'],\n\t\t\t\"firstRound\": res.body['last-round'],\n\t\t\t\"lastRound\": res.body['last-round'] + 1000,\n\t\t\t\"genesisID\": res.body['genesis-id'],\n\t\t\t\"genesisHash\": res.body['genesis-hash'],\n\t\t};\n\t};\n}\n\nmodule.exports = { SuggestedParams };\n"]},"metadata":{},"sourceType":"script"}