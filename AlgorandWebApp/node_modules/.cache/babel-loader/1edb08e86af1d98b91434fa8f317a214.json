{"ast":null,"code":"/**\n * Base class for models\n */\nclass BaseModel {\n  _is_primitive(val) {\n    return val == undefined || val == null || typeof val != \"object\" && typeof val != \"function\";\n  }\n\n  _is_address(val) {\n    return val.publicKey !== undefined && val.checksum !== undefined;\n  }\n\n  _get_obj_for_encoding(val) {\n    let targetPropValue;\n\n    if (typeof val.get_obj_for_encoding === \"function\") {\n      targetPropValue = val.get_obj_for_encoding();\n    } else if (Array.isArray(val)) {\n      targetPropValue = [];\n\n      for (const elem of val) {\n        targetPropValue.push(this._get_obj_for_encoding(elem));\n      }\n    } else if (typeof val === \"object\") {\n      const obj = {};\n\n      for (const prop of Object.keys(val)) {\n        obj[prop] = this._get_obj_for_encoding(val[prop]);\n      }\n\n      targetPropValue = obj;\n    } else if (this._is_primitive(val)) {\n      targetPropValue = val;\n    } else {\n      throw new Error(\"Unsupported value: \" + String(val));\n    }\n\n    return targetPropValue;\n  }\n\n  get_obj_for_encoding() {\n    const obj = {};\n\n    for (const prop of Object.keys(this)) {\n      if (prop == \"attribute_map\") {\n        continue;\n      }\n\n      const val = this[prop];\n\n      if (val === undefined) {\n        continue;\n      }\n\n      const name = this.attribute_map[prop];\n      obj[name] = val === null ? null : this._get_obj_for_encoding(val);\n    }\n\n    return obj;\n  }\n\n}\n\nmodule.exports = {\n  BaseModel\n};","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/react-dispenser-usdc-algo/dispenser-react-app/node_modules/algosdk/src/client/v2/algod/models/base.js"],"names":["BaseModel","_is_primitive","val","undefined","_is_address","publicKey","checksum","_get_obj_for_encoding","targetPropValue","get_obj_for_encoding","Array","isArray","elem","push","obj","prop","Object","keys","Error","String","name","attribute_map","module","exports"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,SAAN,CAAgB;AACZC,EAAAA,aAAa,CAACC,GAAD,EAAM;AACf,WAAOA,GAAG,IAAIC,SAAP,IAAoBD,GAAG,IAAI,IAA3B,IAAoC,OAAOA,GAAP,IAAc,QAAd,IAA0B,OAAOA,GAAP,IAAc,UAAnF;AACH;;AAEDE,EAAAA,WAAW,CAACF,GAAD,EAAM;AACb,WAAOA,GAAG,CAACG,SAAJ,KAAkBF,SAAlB,IAA+BD,GAAG,CAACI,QAAJ,KAAiBH,SAAvD;AACH;;AAEDI,EAAAA,qBAAqB,CAACL,GAAD,EAAM;AACvB,QAAIM,eAAJ;;AACA,QAAI,OAAON,GAAG,CAACO,oBAAX,KAAoC,UAAxC,EAAoD;AAChDD,MAAAA,eAAe,GAAGN,GAAG,CAACO,oBAAJ,EAAlB;AACH,KAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcT,GAAd,CAAJ,EAAwB;AAC3BM,MAAAA,eAAe,GAAG,EAAlB;;AACA,WAAK,MAAMI,IAAX,IAAmBV,GAAnB,EAAwB;AACpBM,QAAAA,eAAe,CAACK,IAAhB,CAAqB,KAAKN,qBAAL,CAA2BK,IAA3B,CAArB;AACH;AACJ,KALM,MAKA,IAAI,OAAOV,GAAP,KAAe,QAAnB,EAA6B;AAChC,YAAMY,GAAG,GAAG,EAAZ;;AACA,WAAK,MAAMC,IAAX,IAAmBC,MAAM,CAACC,IAAP,CAAYf,GAAZ,CAAnB,EAAqC;AACjCY,QAAAA,GAAG,CAACC,IAAD,CAAH,GAAY,KAAKR,qBAAL,CAA2BL,GAAG,CAACa,IAAD,CAA9B,CAAZ;AACH;;AACDP,MAAAA,eAAe,GAAGM,GAAlB;AACH,KANM,MAMA,IAAI,KAAKb,aAAL,CAAmBC,GAAnB,CAAJ,EAA6B;AAChCM,MAAAA,eAAe,GAAGN,GAAlB;AACH,KAFM,MAEA;AACH,YAAM,IAAIgB,KAAJ,CAAU,wBAAwBC,MAAM,CAACjB,GAAD,CAAxC,CAAN;AACH;;AACD,WAAOM,eAAP;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,UAAMK,GAAG,GAAG,EAAZ;;AACA,SAAK,MAAMC,IAAX,IAAmBC,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAnB,EAAsC;AAClC,UAAIF,IAAI,IAAI,eAAZ,EAA6B;AACzB;AACH;;AACD,YAAMb,GAAG,GAAG,KAAKa,IAAL,CAAZ;;AACA,UAAIb,GAAG,KAAKC,SAAZ,EAAuB;AACnB;AACH;;AACD,YAAMiB,IAAI,GAAG,KAAKC,aAAL,CAAmBN,IAAnB,CAAb;AACAD,MAAAA,GAAG,CAACM,IAAD,CAAH,GAAalB,GAAG,KAAK,IAAT,GAAiB,IAAjB,GAAwB,KAAKK,qBAAL,CAA2BL,GAA3B,CAApC;AACH;;AACD,WAAOY,GAAP;AACH;;AA9CW;;AAiDhBQ,MAAM,CAACC,OAAP,GAAiB;AAACvB,EAAAA;AAAD,CAAjB","sourcesContent":["/**\n * Base class for models\n */\nclass BaseModel {\n    _is_primitive(val) {\n        return val == undefined || val == null || (typeof val != \"object\" && typeof val != \"function\");\n    }\n\n    _is_address(val) {\n        return val.publicKey !== undefined && val.checksum !== undefined;\n    }\n\n    _get_obj_for_encoding(val) {\n        let targetPropValue;\n        if (typeof val.get_obj_for_encoding === \"function\") {\n            targetPropValue = val.get_obj_for_encoding();\n        } else if (Array.isArray(val)) {\n            targetPropValue = [];\n            for (const elem of val) {\n                targetPropValue.push(this._get_obj_for_encoding(elem))\n            }\n        } else if (typeof val === \"object\") {\n            const obj = {};\n            for (const prop of Object.keys(val)) {\n                obj[prop] = this._get_obj_for_encoding(val[prop])\n            }\n            targetPropValue = obj;\n        } else if (this._is_primitive(val)) {\n            targetPropValue = val;\n        } else {\n            throw new Error(\"Unsupported value: \" + String(val))\n        }\n        return targetPropValue;\n    }\n\n    get_obj_for_encoding() {\n        const obj = {};\n        for (const prop of Object.keys(this)) {\n            if (prop == \"attribute_map\") {\n                continue;\n            }\n            const val = this[prop];\n            if (val === undefined) {\n                continue;\n            }\n            const name = this.attribute_map[prop];\n            obj[name] = (val === null) ? null : this._get_obj_for_encoding(val);\n        }\n        return obj;\n    }\n}\n\nmodule.exports = {BaseModel};"]},"metadata":{},"sourceType":"script"}