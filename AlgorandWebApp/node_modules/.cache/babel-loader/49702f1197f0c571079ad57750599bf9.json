{"ast":null,"code":"class SearchForAssets {\n  constructor(c) {\n    this.c = c;\n    this.query = {};\n  }\n  /**\n   * returns information about indexed assets\n   * @param headers, optional\n   * @returns Promise<*>\n   */\n\n\n  async do(headers = {}) {\n    let res = await this.c.get(\"/v2/assets\", this.query, headers);\n    return res.body;\n  }\n\n  // limit for filter, as int\n  limit(limit) {\n    this.query[\"limit\"] = limit;\n    return this;\n  } // asset creator address for filter, as string\n\n\n  creator(creator) {\n    this.query[\"creator\"] = creator;\n    return this;\n  } // asset name for filter, as string\n\n\n  name(name) {\n    this.query[\"name\"] = name;\n    return this;\n  } // asset unit name for filter, as string\n\n\n  unit(unit) {\n    this.query[\"unit\"] = unit;\n    return this;\n  } // asset ID for filter, as int\n\n\n  index(index) {\n    this.query[\"asset-id\"] = index;\n    return this;\n  } // used for pagination\n\n\n  nextToken(nextToken) {\n    this.query['next'] = nextToken;\n    return this;\n  }\n\n}\n\nmodule.exports = {\n  SearchForAssets\n};","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/react-dispenser-usdc-algo/dispenser-react-app/node_modules/algosdk/src/client/v2/indexer/searchForAssets.js"],"names":["SearchForAssets","constructor","c","query","do","headers","res","get","body","limit","creator","name","unit","index","nextToken","module","exports"],"mappings":"AAAA,MAAMA,eAAN,CAAqB;AACpBC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACd,SAAKA,CAAL,GAASA,CAAT;AACA,SAAKC,KAAL,GAAa,EAAb;AACA;AAED;AACD;AACA;AACA;AACA;;;AACC,QAAMC,EAAN,CAASC,OAAO,GAAG,EAAnB,EAAuB;AACtB,QAAIC,GAAG,GAAG,MAAM,KAAKJ,CAAL,CAAOK,GAAP,CAAW,YAAX,EAAyB,KAAKJ,KAA9B,EAAqCE,OAArC,CAAhB;AACA,WAAOC,GAAG,CAACE,IAAX;AACA;;AAED;AACAC,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACZ,SAAKN,KAAL,CAAW,OAAX,IAAsBM,KAAtB;AACA,WAAO,IAAP;AACA,GApBmB,CAsBpB;;;AACAC,EAAAA,OAAO,CAACA,OAAD,EAAU;AAChB,SAAKP,KAAL,CAAW,SAAX,IAAwBO,OAAxB;AACA,WAAO,IAAP;AACA,GA1BmB,CA4BpB;;;AACAC,EAAAA,IAAI,CAACA,IAAD,EAAO;AACV,SAAKR,KAAL,CAAW,MAAX,IAAqBQ,IAArB;AACA,WAAO,IAAP;AACA,GAhCmB,CAkCpB;;;AACAC,EAAAA,IAAI,CAACA,IAAD,EAAO;AACV,SAAKT,KAAL,CAAW,MAAX,IAAqBS,IAArB;AACA,WAAO,IAAP;AACA,GAtCmB,CAwCpB;;;AACAC,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACZ,SAAKV,KAAL,CAAW,UAAX,IAAyBU,KAAzB;AACA,WAAO,IAAP;AACA,GA5CmB,CA8CpB;;;AACAC,EAAAA,SAAS,CAACA,SAAD,EAAY;AACpB,SAAKX,KAAL,CAAW,MAAX,IAAqBW,SAArB;AACA,WAAO,IAAP;AACA;;AAlDmB;;AAqDrBC,MAAM,CAACC,OAAP,GAAiB;AAAChB,EAAAA;AAAD,CAAjB","sourcesContent":["class SearchForAssets{\n\tconstructor(c) {\n\t\tthis.c = c;\n\t\tthis.query = {}\n\t}\n\n\t/**\n\t * returns information about indexed assets\n\t * @param headers, optional\n\t * @returns Promise<*>\n\t */\n\tasync do(headers = {}) {\n\t\tlet res = await this.c.get(\"/v2/assets\", this.query, headers);\n\t\treturn res.body;\n\t};\n\n\t// limit for filter, as int\n\tlimit(limit) {\n\t\tthis.query[\"limit\"] = limit;\n\t\treturn this;\n\t}\n\n\t// asset creator address for filter, as string\n\tcreator(creator) {\n\t\tthis.query[\"creator\"] = creator;\n\t\treturn this;\n\t}\n\n\t// asset name for filter, as string\n\tname(name) {\n\t\tthis.query[\"name\"] = name;\n\t\treturn this;\n\t}\n\n\t// asset unit name for filter, as string\n\tunit(unit) {\n\t\tthis.query[\"unit\"] = unit;\n\t\treturn this;\n\t}\n\n\t// asset ID for filter, as int\n\tindex(index) {\n\t\tthis.query[\"asset-id\"] = index;\n\t\treturn this;\n\t}\n\n\t// used for pagination\n\tnextToken(nextToken) {\n\t\tthis.query['next'] = nextToken;\n\t\treturn this;\n\t}\n}\n\nmodule.exports = {SearchForAssets};\n"]},"metadata":{},"sourceType":"script"}