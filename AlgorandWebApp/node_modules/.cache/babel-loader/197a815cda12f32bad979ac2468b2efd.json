{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\demoAlgo\\\\smart-contracts\\\\devrel\\\\algosigner-react\\\\src\\\\Extracheck.js\",\n    _s2 = $RefreshSig$();\n\n/* global AlgoSigner */\nimport './App.css';\nimport { Button, Container, Header, Message, Table } from \"semantic-ui-react\";\nimport { useState, useCallback } from \"react\";\n\nconst Extracheck = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [result, setResult] = useState(\"\");\n  const onClick = useCallback(async () => {\n    const r = await buttonAction();\n    setResult(r);\n  }, [buttonAction]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello Extracheck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GetAppGlobalState, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n\n  const GetAppLocalState = ({\n    who\n  }) => {\n    _s();\n\n    const action = useCallback(async () => {\n      try {\n        const accts = await AlgoSigner.accounts({\n          ledger: 'TestNet'\n        });\n        const r = await AlgoSigner.indexer({\n          ledger: 'TestNet',\n          path: `/v2/accounts/${accts[who]['address']}`\n        });\n        return JSON.stringify(r['account']['apps-local-state'][0]['key-value'][0]['value']['uint'], null, 2);\n      } catch (e) {\n        console.error(e);\n        return JSON.stringify(e, null, 2);\n      }\n    }, [who]);\n    return /*#__PURE__*/_jsxDEV(Extracheck, {\n      title: \"Get Local State\",\n      buttonText: \"Get Local State\",\n      buttonAction: action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  };\n\n  _s(GetAppLocalState, \"LA7q0Q0w2vXW3GtYTqUEdUZvEBo=\");\n};\n\n_s2(Extracheck, \"glImgLaU2WkF8kj4KKA+v9eKfvY=\");\n\n_c = Extracheck;\nexport default Extracheck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Extracheck\");","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/src/Extracheck.js"],"names":["Button","Container","Header","Message","Table","useState","useCallback","Extracheck","result","setResult","onClick","r","buttonAction","GetAppLocalState","who","action","accts","AlgoSigner","accounts","ledger","indexer","path","JSON","stringify","e","console","error"],"mappings":";;;;;AAAA;AACA,OAAO,WAAP;AACA,SAAQA,MAAR,EAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4CC,KAA5C,QAAwD,mBAAxD;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;;AAKA,MAAMC,UAAU,GAAC,MAAI;AAAA;;AAAA;;AAGf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMK,OAAO,GAAGJ,WAAW,CAAC,YAAY;AACtC,UAAMK,CAAC,GAAG,MAAMC,YAAY,EAA5B;AACAH,IAAAA,SAAS,CAACE,CAAD,CAAT;AACD,GAH0B,EAGxB,CAACC,YAAD,CAHwB,CAA3B;AASF,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AASA,QAAMC,gBAAgB,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAW;AAAA;;AAChC,UAAMC,MAAM,GAAGT,WAAW,CAAC,YAAY;AACrC,UAAI;AACF,cAAMU,KAAK,GAAG,MAAMC,UAAU,CAACC,QAAX,CAAoB;AACtCC,UAAAA,MAAM,EAAE;AAD8B,SAApB,CAApB;AAGA,cAAMR,CAAC,GAAG,MAAMM,UAAU,CAACG,OAAX,CAAmB;AACjCD,UAAAA,MAAM,EAAE,SADyB;AAEjCE,UAAAA,IAAI,EAAG,gBAAeL,KAAK,CAACF,GAAD,CAAL,CAAW,SAAX,CAAsB;AAFX,SAAnB,CAAhB;AAIA,eAAOQ,IAAI,CAACC,SAAL,CAAeZ,CAAC,CAAC,SAAD,CAAD,CAAa,kBAAb,EAAiC,CAAjC,EAAoC,WAApC,EAAiD,CAAjD,EAAoD,OAApD,EAA6D,MAA7D,CAAf,EAAqF,IAArF,EAA2F,CAA3F,CAAP;AACD,OATD,CASE,OAAOa,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,eAAOF,IAAI,CAACC,SAAL,CAAeC,CAAf,EAAkB,IAAlB,EAAwB,CAAxB,CAAP;AACD;AACF,KAdyB,EAcvB,CAACV,GAAD,CAduB,CAA1B;AAgBA,wBAAO,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,iBAAlB;AAAoC,MAAA,UAAU,EAAC,iBAA/C;AAAiE,MAAA,YAAY,EAAEC;AAA/E;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAlBH;;AAvBiB,KAuBXF,gBAvBW;AA2CpB,CA3CD;;IAAMN,U;;KAAAA,U;AAiDN,eAAeA,UAAf","sourcesContent":["/* global AlgoSigner */\r\nimport './App.css';\r\nimport {Button, Container, Header, Message, Table} from \"semantic-ui-react\";\r\nimport {useState, useCallback} from \"react\";\r\n\r\n\r\n\r\n\r\nconst Extracheck=()=>{\r\n\r\n\r\n      const [result, setResult] = useState(\"\");\r\n\r\n      const onClick = useCallback(async () => {\r\n        const r = await buttonAction();\r\n        setResult(r);\r\n      }, [buttonAction]);\r\n    \r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div>\r\n        <h1>hello Extracheck</h1>\r\n        <GetAppGlobalState/>\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n    const GetAppLocalState = ({who}) => {\r\n        const action = useCallback(async () => {\r\n          try {\r\n            const accts = await AlgoSigner.accounts({\r\n              ledger: 'TestNet'\r\n            });\r\n            const r = await AlgoSigner.indexer({\r\n              ledger: 'TestNet',\r\n              path: `/v2/accounts/${accts[who]['address']}`\r\n            });\r\n            return JSON.stringify(r['account']['apps-local-state'][0]['key-value'][0]['value']['uint'], null, 2);\r\n          } catch (e) {\r\n            console.error(e);\r\n            return JSON.stringify(e, null, 2);\r\n          }\r\n        }, [who]);\r\n      \r\n        return <Extracheck title=\"Get Local State\" buttonText=\"Get Local State\" buttonAction={action}/>\r\n      };\r\n\r\n}\r\n\r\n\r\n  \r\n\r\n\r\nexport default Extracheck;"]},"metadata":{},"sourceType":"module"}