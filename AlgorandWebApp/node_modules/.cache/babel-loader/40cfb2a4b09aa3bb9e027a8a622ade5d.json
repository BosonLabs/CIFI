{"ast":null,"code":"class SearchForApplications {\n  constructor(c) {\n    this.c = c;\n    this.query = {};\n  }\n  /**\n   * returns information about indexed applications\n   * @param headers, optional\n   * @returns Promise<*>\n   */\n\n\n  async do(headers = {}) {\n    let res = await this.c.get(\"/v2/applications\", this.query, headers);\n    return res.body;\n  }\n\n  // application ID for filter, as int\n  index(index) {\n    this.query[\"application-id\"] = index;\n    return this;\n  } // specific round to search\n\n\n  round(round) {\n    this.query['round'] = round;\n    return this;\n  } // token for pagination\n\n\n  nextToken(next) {\n    this.query['next'] = next;\n    return this;\n  } // limit results for pagination\n\n\n  limit(limit) {\n    this.query['limit'] = limit;\n    return this;\n  }\n\n}\n\nmodule.exports = {\n  SearchForApplications\n};","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/react-dispenser-usdc-algo/dispenser-react-app/node_modules/algosdk/src/client/v2/indexer/searchForApplications.js"],"names":["SearchForApplications","constructor","c","query","do","headers","res","get","body","index","round","nextToken","next","limit","module","exports"],"mappings":"AAAA,MAAMA,qBAAN,CAA2B;AACvBC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,SAAKA,CAAL,GAASA,CAAT;AACA,SAAKC,KAAL,GAAa,EAAb;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACI,QAAMC,EAAN,CAASC,OAAO,GAAG,EAAnB,EAAuB;AACnB,QAAIC,GAAG,GAAG,MAAM,KAAKJ,CAAL,CAAOK,GAAP,CAAW,kBAAX,EAA+B,KAAKJ,KAApC,EAA2CE,OAA3C,CAAhB;AACA,WAAOC,GAAG,CAACE,IAAX;AACH;;AAED;AACAC,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACT,SAAKN,KAAL,CAAW,gBAAX,IAA+BM,KAA/B;AACA,WAAO,IAAP;AACH,GApBsB,CAsBvB;;;AACAC,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACT,SAAKP,KAAL,CAAW,OAAX,IAAsBO,KAAtB;AACA,WAAO,IAAP;AACH,GA1BsB,CA4BvB;;;AACAC,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZ,SAAKT,KAAL,CAAW,MAAX,IAAqBS,IAArB;AACA,WAAO,IAAP;AACH,GAhCsB,CAkCvB;;;AACAC,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACT,SAAKV,KAAL,CAAW,OAAX,IAAsBU,KAAtB;AACA,WAAO,IAAP;AACH;;AAtCsB;;AAyC3BC,MAAM,CAACC,OAAP,GAAiB;AAACf,EAAAA;AAAD,CAAjB","sourcesContent":["class SearchForApplications{\n    constructor(c) {\n        this.c = c;\n        this.query = {}\n    }\n\n    /**\n     * returns information about indexed applications\n     * @param headers, optional\n     * @returns Promise<*>\n     */\n    async do(headers = {}) {\n        let res = await this.c.get(\"/v2/applications\", this.query, headers);\n        return res.body;\n    };\n\n    // application ID for filter, as int\n    index(index) {\n        this.query[\"application-id\"] = index;\n        return this;\n    }\n\n    // specific round to search\n    round(round) {\n        this.query['round'] = round;\n        return this;\n    }\n\n    // token for pagination\n    nextToken(next) {\n        this.query['next'] = next\n        return this;\n    }\n\n    // limit results for pagination\n    limit(limit) {\n        this.query['limit'] = limit;\n        return this;\n    }\n}\n\nmodule.exports = {SearchForApplications};\n"]},"metadata":{},"sourceType":"script"}