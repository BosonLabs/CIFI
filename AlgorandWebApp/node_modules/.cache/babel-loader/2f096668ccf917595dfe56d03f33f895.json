{"ast":null,"code":"class StatusAfterBlock {\n  constructor(c, round) {\n    this.c = c;\n    if (!Number.isInteger(round)) throw Error(\"round should be an integer\");\n    this.round = round;\n  }\n  /**\n   * waits for round roundNumber to occur then returns the StatusResponse for this round.\n   * This call blocks\n   * @param headers, optional\n   * @returns {Promise<*>}\n   */\n\n\n  async do(headers = {}) {\n    let res = await this.c.get(\"/v2/status/wait-for-block-after/\" + this.round, {}, headers);\n    return res.body;\n  }\n\n}\n\nmodule.exports = {\n  StatusAfterBlock\n};","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/react-dispenser-usdc-algo/dispenser-react-app/node_modules/algosdk/src/client/v2/algod/statusAfterBlock.js"],"names":["StatusAfterBlock","constructor","c","round","Number","isInteger","Error","do","headers","res","get","body","module","exports"],"mappings":"AAAA,MAAMA,gBAAN,CAAuB;AACtBC,EAAAA,WAAW,CAACC,CAAD,EAAIC,KAAJ,EAAW;AACrB,SAAKD,CAAL,GAASA,CAAT;AACA,QAAI,CAACE,MAAM,CAACC,SAAP,CAAiBF,KAAjB,CAAL,EAA8B,MAAMG,KAAK,CAAC,4BAAD,CAAX;AAC9B,SAAKH,KAAL,GAAaA,KAAb;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACC,QAAMI,EAAN,CAASC,OAAO,GAAC,EAAjB,EAAoB;AACnB,QAAIC,GAAG,GAAG,MAAM,KAAKP,CAAL,CAAOQ,GAAP,CAAW,qCAAqC,KAAKP,KAArD,EAA4D,EAA5D,EAAgEK,OAAhE,CAAhB;AACA,WAAOC,GAAG,CAACE,IAAX;AACA;;AAhBqB;;AAmBvBC,MAAM,CAACC,OAAP,GAAiB;AAAEb,EAAAA;AAAF,CAAjB","sourcesContent":["class StatusAfterBlock {\n\tconstructor(c, round) {\n\t\tthis.c = c;\n\t\tif (!Number.isInteger(round)) throw Error(\"round should be an integer\");\n\t\tthis.round = round;\n\t}\n\n\t/**\n\t * waits for round roundNumber to occur then returns the StatusResponse for this round.\n\t * This call blocks\n\t * @param headers, optional\n\t * @returns {Promise<*>}\n\t */\n\tasync do(headers={}){\n\t\tlet res = await this.c.get(\"/v2/status/wait-for-block-after/\" + this.round, {}, headers);\n\t\treturn res.body;\n\t};\n}\n\nmodule.exports = { StatusAfterBlock };\n"]},"metadata":{},"sourceType":"script"}