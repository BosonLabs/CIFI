[{"C:\\demoAlgo\\smart-contracts\\devrel\\algosigner-react\\CIFI\\AlgorandWebApp\\src\\index.js":"1","C:\\demoAlgo\\smart-contracts\\devrel\\algosigner-react\\CIFI\\AlgorandWebApp\\src\\Routes.js":"2","C:\\demoAlgo\\smart-contracts\\devrel\\algosigner-react\\CIFI\\AlgorandWebApp\\src\\App.js":"3","C:\\demoAlgo\\smart-contracts\\devrel\\algosigner-react\\CIFI\\AlgorandWebApp\\src\\Extracheck.js":"4"},{"size":457,"mtime":1620971134617,"results":"5","hashOfConfig":"6"},{"size":577,"mtime":1620971445079,"results":"7","hashOfConfig":"6"},{"size":21374,"mtime":1621454958837,"results":"8","hashOfConfig":"6"},{"size":2913,"mtime":1620974058161,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"u41gpa",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"13"},"C:\\demoAlgo\\smart-contracts\\devrel\\algosigner-react\\CIFI\\AlgorandWebApp\\src\\index.js",["21"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport Routes from \"./Routes\";\r\n\r\n//ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\r\n\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );",["22","23"],"C:\\demoAlgo\\smart-contracts\\devrel\\algosigner-react\\CIFI\\AlgorandWebApp\\src\\Routes.js",[],"C:\\demoAlgo\\smart-contracts\\devrel\\algosigner-react\\CIFI\\AlgorandWebApp\\src\\App.js",["24","25","26","27","28","29","30","31","32","33","34","35","36","37","38"],"C:\\demoAlgo\\smart-contracts\\devrel\\algosigner-react\\CIFI\\AlgorandWebApp\\src\\Extracheck.js",["39","40","41","42","43","44","45","46"],"/* global AlgoSigner */\r\nimport './App.css';\r\nimport {Button, Container, Header, Message, Table} from \"semantic-ui-react\";\r\nimport {useState, useCallback} from \"react\";\r\n\r\n\r\n\r\nconst appId = 13793863;\r\n\r\nconst Extracheck=()=>{\r\n\r\n\r\n      const [result, setResult] = useState(\"\");\r\n\r\n\r\n      console.log(\"result\",result);\r\n\r\n    //   const onClick = useCallback(async () => {\r\n    //     const r = await buttonAction();\r\n    //     setResult(r);\r\n    //   }, [buttonAction]);\r\n\r\n\r\n    // const action = useCallback(async () => {    \r\n    //     await AlgoSigner.connect({\r\n    //       ledger: 'TestNet'\r\n    //     });\r\n    //     const accts = await AlgoSigner.accounts({\r\n    //       ledger: 'TestNet'\r\n    //     });\r\n    //     //const accts = await AlgoSigner.accounts({})\r\n    //     alert(\"acc\"+accts);\r\n    //     return JSON.stringify(accts[0], null, 2);\r\n    //   }, []);\r\n    \r\n\r\n    const conb= async () =>{\r\n\r\n        let sendCodeElem = document.getElementById('send-code');\r\n\r\n\r\n\r\n        console.log(\"send\",sendCodeElem)\r\n\r\n        // AlgoSigner.sign({\r\n        //     from: document.getElementById('from').value,\r\n        //     assetName: document.getElementById('name').value,\r\n        //     assetUnitName: document.getElementById('unit-name').value,\r\n        //     assetTotal: +document.getElementById('total').value,\r\n        //     assetDecimals: +document.getElementById('decimals').value,\r\n        //     note: document.getElementById('note').value,\r\n        //     type: 'acfg',\r\n        //     fee: txParams['min-fee'],\r\n        //     firstRound: txParams['last-round'],\r\n        //     lastRound: txParams['last-round'] + 1000,\r\n        //     genesisID: txParams['genesis-id'],\r\n        //     genesisHash: txParams['genesis-hash'],\r\n        //     flatFee: true\r\n        //   })\r\n        //   .then((d) => {\r\n        //     signedTx = d;\r\n        //   })\r\n        //   .catch((e) => {\r\n        //     console.error(e);\r\n        //   });\r\n\r\n        \r\n      }\r\n\r\n\r\n\r\n    \r\n\r\n    \r\n    \r\n\r\n\r\n    return(\r\n        <div>\r\n        <h1>hello Extracheck</h1>\r\n\r\n        <button type=\"button\" onClick={conb}>connect</button>\r\n    \r\n        </div>\r\n\r\n    );\r\n\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n\r\nconst GetAppLocalState = ({who}) => {\r\n    const action = useCallback(async () => {\r\n      try {\r\n        const accts = await AlgoSigner.accounts({\r\n          ledger: 'TestNet'\r\n        });\r\n        const r = await AlgoSigner.indexer({\r\n          ledger: 'TestNet',\r\n          path: `/v2/accounts/${accts[who]['address']}`\r\n        });\r\n        return JSON.stringify(r['account']['apps-local-state'][0]['key-value'][0]['value']['uint'], null, 2);\r\n      } catch (e) {\r\n        console.error(e);\r\n        return JSON.stringify(e, null, 2);\r\n      }\r\n    }, [who]);\r\n  \r\n    return <Extracheck title=\"Get Local State\" buttonText=\"Get Local State\" buttonAction={action}/>\r\n  };\r\n\r\n  \r\n\r\n\r\nexport default Extracheck;",{"ruleId":"47","severity":1,"message":"48","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":11},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"47","severity":1,"message":"55","line":7,"column":7,"nodeType":"49","messageId":"50","endLine":7,"endColumn":12},{"ruleId":"47","severity":1,"message":"56","line":18,"column":10,"nodeType":"49","messageId":"50","endLine":18,"endColumn":13},{"ruleId":"47","severity":1,"message":"57","line":18,"column":15,"nodeType":"49","messageId":"50","endLine":18,"endColumn":21},{"ruleId":"47","severity":1,"message":"58","line":128,"column":7,"nodeType":"49","messageId":"50","endLine":128,"endColumn":10},{"ruleId":"47","severity":1,"message":"59","line":290,"column":9,"nodeType":"49","messageId":"50","endLine":290,"endColumn":18},{"ruleId":"47","severity":1,"message":"60","line":353,"column":9,"nodeType":"49","messageId":"50","endLine":353,"endColumn":18},{"ruleId":"47","severity":1,"message":"61","line":376,"column":5,"nodeType":"49","messageId":"50","endLine":376,"endColumn":16},{"ruleId":"47","severity":1,"message":"62","line":379,"column":7,"nodeType":"49","messageId":"50","endLine":379,"endColumn":26},{"ruleId":"47","severity":1,"message":"63","line":397,"column":7,"nodeType":"49","messageId":"50","endLine":397,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":406,"column":39,"nodeType":"66","messageId":"67","endLine":406,"endColumn":41},{"ruleId":"47","severity":1,"message":"68","line":418,"column":9,"nodeType":"49","messageId":"50","endLine":418,"endColumn":18},{"ruleId":"47","severity":1,"message":"69","line":477,"column":9,"nodeType":"49","messageId":"50","endLine":477,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":543,"column":7,"nodeType":"49","messageId":"72","endLine":543,"endColumn":26},{"ruleId":"47","severity":1,"message":"73","line":546,"column":1,"nodeType":"49","messageId":"50","endLine":546,"endColumn":8},{"ruleId":"47","severity":1,"message":"74","line":550,"column":9,"nodeType":"49","messageId":"50","endLine":550,"endColumn":16},{"ruleId":"47","severity":1,"message":"75","line":3,"column":9,"nodeType":"49","messageId":"50","endLine":3,"endColumn":15},{"ruleId":"47","severity":1,"message":"76","line":3,"column":17,"nodeType":"49","messageId":"50","endLine":3,"endColumn":26},{"ruleId":"47","severity":1,"message":"77","line":3,"column":28,"nodeType":"49","messageId":"50","endLine":3,"endColumn":34},{"ruleId":"47","severity":1,"message":"78","line":3,"column":36,"nodeType":"49","messageId":"50","endLine":3,"endColumn":43},{"ruleId":"47","severity":1,"message":"79","line":3,"column":45,"nodeType":"49","messageId":"50","endLine":3,"endColumn":50},{"ruleId":"47","severity":1,"message":"55","line":8,"column":7,"nodeType":"49","messageId":"50","endLine":8,"endColumn":12},{"ruleId":"47","severity":1,"message":"80","line":13,"column":22,"nodeType":"49","messageId":"50","endLine":13,"endColumn":31},{"ruleId":"47","severity":1,"message":"81","line":95,"column":7,"nodeType":"49","messageId":"50","endLine":95,"endColumn":23},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"'appId' is assigned a value but never used.","'res' is assigned a value but never used.","'setRes' is assigned a value but never used.","'con' is assigned a value but never used.","'AnoCreate' is assigned a value but never used.","'AssCreate' is assigned a value but never used.","'algodclient' is assigned a value but never used.","'waitForConfirmation' is assigned a value but never used.","'printCreatedAsset' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AccCreate' is assigned a value but never used.","'create' is assigned a value but never used.","no-undef","'waitForConfirmation' is not defined.","undef","'assetID' is assigned a value but never used.","'balance' is assigned a value but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Header' is defined but never used.","'Message' is defined but never used.","'Table' is defined but never used.","'setResult' is assigned a value but never used.","'GetAppLocalState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]