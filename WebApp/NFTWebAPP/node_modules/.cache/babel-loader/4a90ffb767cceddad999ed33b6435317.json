{"ast":null,"code":"var _jsxFileName = \"C:\\\\demoAlgo\\\\smart-contracts\\\\devrel\\\\algosigner-react\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\NewfileMar.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css'; //import vabi from \"./vault.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport web3 from './web3'; //import token from './token.js';\n//import vault from './vault.js';\n\nimport axios from 'axios';\n\nfunction NewfileMar() {\n  _s();\n\n  const [tid, setId] = useState(\"\");\n  const [tid1, setId1] = useState(\"\");\n  const [toaddress, setId2] = useState([]);\n  const [fromaddress, setId3] = useState([]);\n  const [value, setId4] = useState([]);\n  const [len, setId5] = useState([]);\n  const [req2, setId6] = useState([]);\n  const [datas, setId7] = useState(\"\");\n  const [bookss, setBookss] = useState(null);\n\n  const bal = async () => {\n    //let account = await web3.eth.getAccounts();\n    //Returns the Balance of account\n    // const a = await token.methods.balanceOf(account[0]).call();\n    //   setId(a/1000000000);\n    //Returns the seconds left for Locking account;\n    // const b = await vault.methods.secondsLeft(account[0]).call();\n    //   setId1(b);\n    //timing concept\n\n    /*\r\n           var d= new Date(0);\r\n           d.setUTCSeconds(tid1);\r\n           alert(d);//d has the date and time\r\n           \r\n           */\n    //const response = await fetch(\"https://api-testnet.bscscan.com/api?module=account&action=tokentx&address=0xdfa17787b21a674df054faa9a62d1f4a1b411902&startblock=0&endblock=99999999&sort=asc&apikey=YourApiKeyToken\");\n    const response = await fetch(\"https://api-testnet.bscscan.com/api?module=account&action=tokentx&contractaddress=0x85986F018314E42A2a0881f54868AB00f7b6f386&address=\" + \"0xdfa17787b21a674df054faa9a62d1f4a1b411902\" + \"&page=1&offset=100&sort=asc&apikey=YourApiKeyToken\");\n    const data = await response.json();\n    setId7(data.result); //console.log(\"data\",data);\n    //console.log(\"req2\",req2);\n\n    var coun = 0;\n    console.log(\"length\", data);\n    let myadd = \"0xdfa17787b21a674df054faa9a62d1f4a1b411902\";\n\n    for (var i = 0; i < data.length; i++) {\n      let ad = datas[i].from;\n      console.log(\"myadd\", myadd);\n      console.log(\"fromad\", ad);\n\n      if (myadd === ad) {\n        coun = coun + 1;\n        console.log(\"equal\", coun);\n      }\n    }\n\n    setId5(coun);\n  };\n\n  useEffect(() => {\n    bal();\n  }, []);\n  console.log(\"datas\", datas);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }\n  }, \"BURN VAULT\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }\n  }), datas.length === 0 ? null : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 24\n    }\n  }, \"ToAddress\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }\n  }, \"FromAddress\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 24\n    }\n  }, \"Value\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")))), datas.map(a => {\n    //console.log(`a`, a)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, a.to)), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, a.from)), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, a.value)), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"))));\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 6\n    }\n  }))));\n}\n\n_s(NewfileMar, \"YF9/qAratE452Tdo9JIXAS5uRT4=\");\n\n_c = NewfileMar;\nexport default NewfileMar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewfileMar\");","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/src/NewfileMar.js"],"names":["React","useState","useEffect","web3","axios","NewfileMar","tid","setId","tid1","setId1","toaddress","setId2","fromaddress","setId3","value","setId4","len","setId5","req2","setId6","datas","setId7","bookss","setBookss","bal","response","fetch","data","json","result","coun","console","log","myadd","i","length","ad","from","backgroundColor","map","a","to"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\n//import vabi from \"./vault.js\";\r\nimport React, { useState,useEffect } from \"react\";\r\nimport web3 from './web3';\r\n//import token from './token.js';\r\n//import vault from './vault.js';\r\nimport axios from 'axios';\r\n\r\nfunction NewfileMar() {\r\n  const [tid,setId] = useState(\"\");\r\n  const [tid1,setId1] = useState(\"\");\r\n  const [toaddress,setId2] = useState([]);\r\n  const [fromaddress,setId3] = useState([]);\r\n  const [value,setId4] = useState([]);\r\n  const [len,setId5] = useState([]);\r\nconst [req2,setId6] = useState([]);\r\nconst[datas,setId7] = useState(\"\");\r\nconst [bookss, setBookss] = useState(null);\r\n\r\n\r\n\r\n  const bal = async() => {\r\n    //let account = await web3.eth.getAccounts();\r\n\r\n//Returns the Balance of account\r\n// const a = await token.methods.balanceOf(account[0]).call();\r\n//   setId(a/1000000000);\r\n\r\n//Returns the seconds left for Locking account;\r\n    // const b = await vault.methods.secondsLeft(account[0]).call();\r\n    //   setId1(b);\r\n\r\n//timing concept\r\n/*\r\n       var d= new Date(0);\r\n       d.setUTCSeconds(tid1);\r\n       alert(d);//d has the date and time\r\n       \r\n       */ \r\n\r\n\r\n//const response = await fetch(\"https://api-testnet.bscscan.com/api?module=account&action=tokentx&address=0xdfa17787b21a674df054faa9a62d1f4a1b411902&startblock=0&endblock=99999999&sort=asc&apikey=YourApiKeyToken\");\r\n\r\nconst response = await fetch(\"https://api-testnet.bscscan.com/api?module=account&action=tokentx&contractaddress=0x85986F018314E42A2a0881f54868AB00f7b6f386&address=\"+\"0xdfa17787b21a674df054faa9a62d1f4a1b411902\"+\"&page=1&offset=100&sort=asc&apikey=YourApiKeyToken\");\r\nconst data = await response.json();\r\nsetId7(data.result);\r\n//console.log(\"data\",data);\r\n\r\n//console.log(\"req2\",req2);\r\n\r\n\r\nvar coun  = 0;\r\nconsole.log(\"length\",data);\r\nlet myadd = \"0xdfa17787b21a674df054faa9a62d1f4a1b411902\";\r\n\r\nfor(var i = 0;i < data.length;i++){ \r\nlet ad = datas[i].from;\r\nconsole.log(\"myadd\",myadd);\r\nconsole.log(\"fromad\",ad);\r\n if(myadd === ad){\r\n  coun = coun + 1 ;\r\n  console.log(\"equal\",coun);\r\n }\r\n \r\n}\r\n setId5(coun);\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nuseEffect(()=>{bal()},[])\r\nconsole.log(\"datas\",datas);\r\n\r\n  return (\r\n    \r\n    <div style={{backgroundColor:\"white\"}}> \r\n\r\n     <body  >\r\n        \r\n\r\n      <div style={{backgroundColor:\"white\"}}>\r\n        <br />\r\n        <br />\r\n       <h1>BURN VAULT</h1>\r\n       <br /><br />\r\n   \r\n   {datas.length === 0 ? null : (\r\n       <div>\r\n           <div>\r\n           <table>\r\n               <tbody>\r\n                   <tr>\r\n                       <td>ToAddress</td>\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       <td>FromAddress</td>\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       <td>Value</td>\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                   </tr>\r\n                   </tbody>\r\n               </table>\r\n               </div>\r\n{datas.map((a)=>{\r\n     \r\n          \r\n        //console.log(`a`, a)\r\n        return (\r\n          <div>\r\n              <table>\r\n      <tbody>\r\n          \r\n        <tr>\r\n            \r\n          <td>\r\n            <h5>{a.to}</h5>\r\n            \r\n          </td>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <td>\r\n            <h5>{a.from}</h5>\r\n            \r\n          </td>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <td>\r\n            <h4>{a.value}</h4>\r\n            \r\n          </td>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n            </div>\r\n            \r\n           )   \r\n            \r\n        \r\n      })}\r\n\r\n      </div>\r\n\r\n)}\r\n\r\n\r\n      \r\n     <br/>\r\n      </div>\r\n      </body>\r\n      </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default NewfileMar;\r\n"]},"metadata":{},"sourceType":"module"}