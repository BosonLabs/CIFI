{"ast":null,"code":"var _jsxFileName = \"C:\\\\demoAlgo\\\\smart-contracts\\\\devrel\\\\algosigner-react\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\NewfileMar.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport vabi from \"./vault.js\";\nimport React, { useState, useEffect } from \"react\";\nimport web3 from './web3'; //import token from './token.js';\n//import vault from './vault.js';\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewfileMar() {\n  _s();\n\n  const [tid, setId] = useState(\"\");\n  const [tid1, setId1] = useState(\"\");\n  const [toaddress, setId2] = useState([]);\n  const [fromaddress, setId3] = useState([]);\n  const [value, setId4] = useState([]);\n  const [len, setId5] = useState([]);\n  const [req2, setId6] = useState([]);\n  const [datas, setId7] = useState(\"\");\n  const [bookss, setBookss] = useState(null);\n\n  const bal = async () => {\n    let account = await web3.eth.getAccounts(); //Returns the Balance of account\n\n    const a = await token.methods.balanceOf(account[0]).call();\n    setId(a / 1000000000); //Returns the seconds left for Locking account;\n\n    const b = await vault.methods.secondsLeft(account[0]).call();\n    setId1(b); //timing concept\n\n    /*\r\n           var d= new Date(0);\r\n           d.setUTCSeconds(tid1);\r\n           alert(d);//d has the date and time\r\n           \r\n           */\n\n    const response = await fetch(\"https://api-testnet.bscscan.com/api?module=account&action=tokentx&address=0xDE949e5CC31062c71aD5180f050eE3b7C9f79037&startblock=0&endblock=99999999&sort=asc&apikey=YourApiKeyToken\");\n    const data = await response.json();\n    setId7(response.result);\n    console.log(\"data\", data); //console.log(\"req2\",req2);\n  };\n\n  useEffect(() => {\n    bal();\n  }, [datas]);\n  console.log(\"datas\", datas);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"BURN VAULT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this), datas.map(a => {\n        //console.log(`a`, a)\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [\"Toadress\", /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", a]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"  fromaddrress :\", a.from]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 14\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" value :\", a.value, \"  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 6\n  }, this);\n}\n\n_s(NewfileMar, \"YF9/qAratE452Tdo9JIXAS5uRT4=\");\n\n_c = NewfileMar;\nexport default NewfileMar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewfileMar\");","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/src/NewfileMar.js"],"names":["vabi","React","useState","useEffect","web3","axios","NewfileMar","tid","setId","tid1","setId1","toaddress","setId2","fromaddress","setId3","value","setId4","len","setId5","req2","setId6","datas","setId7","bookss","setBookss","bal","account","eth","getAccounts","a","token","methods","balanceOf","call","b","vault","secondsLeft","response","fetch","data","json","result","console","log","map","from"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport vabi from \"./vault.js\";\r\nimport React, { useState,useEffect } from \"react\";\r\nimport web3 from './web3';\r\n//import token from './token.js';\r\n//import vault from './vault.js';\r\nimport axios from 'axios';\r\n\r\nfunction NewfileMar() {\r\n  const [tid,setId] = useState(\"\");\r\n  const [tid1,setId1] = useState(\"\");\r\n  const [toaddress,setId2] = useState([]);\r\n  const [fromaddress,setId3] = useState([]);\r\n  const [value,setId4] = useState([]);\r\n  const [len,setId5] = useState([]);\r\nconst [req2,setId6] = useState([]);\r\nconst[datas,setId7] = useState(\"\");\r\nconst [bookss, setBookss] = useState(null);\r\n\r\n\r\n\r\n  const bal = async() => {\r\n    let account = await web3.eth.getAccounts();\r\n\r\n//Returns the Balance of account\r\nconst a = await token.methods.balanceOf(account[0]).call();\r\n  setId(a/1000000000);\r\n\r\n//Returns the seconds left for Locking account;\r\nconst b = await vault.methods.secondsLeft(account[0]).call();\r\n  setId1(b);\r\n\r\n//timing concept\r\n/*\r\n       var d= new Date(0);\r\n       d.setUTCSeconds(tid1);\r\n       alert(d);//d has the date and time\r\n       \r\n       */ \r\n\r\n\r\nconst response = await fetch(\"https://api-testnet.bscscan.com/api?module=account&action=tokentx&address=0xDE949e5CC31062c71aD5180f050eE3b7C9f79037&startblock=0&endblock=99999999&sort=asc&apikey=YourApiKeyToken\");\r\nconst data = await response.json();\r\nsetId7(response.result);\r\nconsole.log(\"data\",data);\r\n\r\n//console.log(\"req2\",req2);\r\n\r\n\r\n}\r\nuseEffect(()=>{bal()},[datas])\r\nconsole.log(\"datas\",datas);\r\n\r\n  return (\r\n    \r\n     \r\n     <body >\r\n        \r\n\r\n      <center>\r\n        <br />\r\n        <br />\r\n       <h1>BURN VAULT</h1>\r\n       <br /><br />\r\n   \r\n{datas.map((a)=>{\r\n     \r\n          \r\n        //console.log(`a`, a)\r\n        return (\r\n          <div>\r\n              <table><tbody><tr>Toadress\r\n           <td> {a}</td></tr>\r\n        <tr> <td>  fromaddrress :{a.from}</td></tr>\r\n      <tr> <td> value :{a.value}  </td></tr>\r\n</tbody>\r\n</table>\r\n            </div>\r\n            \r\n           )   \r\n            \r\n        \r\n      })}\r\n\r\n\r\n      \r\n     <br/>\r\n      </center>\r\n      </body>\r\n      \r\n  );\r\n}\r\n\r\nexport default NewfileMar;\r\n"]},"metadata":{},"sourceType":"module"}