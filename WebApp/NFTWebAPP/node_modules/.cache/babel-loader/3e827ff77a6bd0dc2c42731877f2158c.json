{"ast":null,"code":"'use strict';\n\nconst bs58 = require('bs58');\n\nconst CID = require('cids');\n\nmodule.exports = function (cid) {\n  if (Buffer.isBuffer(cid)) {\n    cid = bs58.encode(cid);\n  }\n\n  if (CID.isCID(cid)) {\n    cid = cid.toBaseEncodedString();\n  }\n\n  if (typeof cid !== 'string') {\n    throw new Error('unexpected cid type: ' + typeof cid);\n  }\n\n  CID.validateCID(new CID(cid.split('/')[0]));\n  return cid;\n};","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/node_modules/ipfs-api/src/utils/clean-cid.js"],"names":["bs58","require","CID","module","exports","cid","Buffer","isBuffer","encode","isCID","toBaseEncodedString","Error","validateCID","split"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAC9B,MAAIC,MAAM,CAACC,QAAP,CAAgBF,GAAhB,CAAJ,EAA0B;AACxBA,IAAAA,GAAG,GAAGL,IAAI,CAACQ,MAAL,CAAYH,GAAZ,CAAN;AACD;;AACD,MAAIH,GAAG,CAACO,KAAJ,CAAUJ,GAAV,CAAJ,EAAoB;AAClBA,IAAAA,GAAG,GAAGA,GAAG,CAACK,mBAAJ,EAAN;AACD;;AACD,MAAI,OAAOL,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIM,KAAJ,CAAU,0BAA0B,OAAON,GAA3C,CAAN;AACD;;AACDH,EAAAA,GAAG,CAACU,WAAJ,CAAgB,IAAIV,GAAJ,CAAQG,GAAG,CAACQ,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAR,CAAhB;AACA,SAAOR,GAAP;AACD,CAZD","sourcesContent":["'use strict'\r\n\r\nconst bs58 = require('bs58')\r\nconst CID = require('cids')\r\n\r\nmodule.exports = function (cid) {\r\n  if (Buffer.isBuffer(cid)) {\r\n    cid = bs58.encode(cid)\r\n  }\r\n  if (CID.isCID(cid)) {\r\n    cid = cid.toBaseEncodedString()\r\n  }\r\n  if (typeof cid !== 'string') {\r\n    throw new Error('unexpected cid type: ' + typeof cid)\r\n  }\r\n  CID.validateCID(new CID(cid.split('/')[0]))\r\n  return cid\r\n}\r\n"]},"metadata":{},"sourceType":"script"}