{"ast":null,"code":"var _jsxFileName = \"C:\\\\demoAlgo\\\\smart-contracts\\\\devrel\\\\algosigner-react\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\Nft.js\",\n    _s = $RefreshSig$();\n\n/* global AlgoSigner */\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport web3 from './web3';\nimport lottery from './nftcontract'; //this line import lottery folder\n\nimport lottery2 from './helloworldcontract'; //this line import lottery folder\n\nimport ipfs from './ipfs';\nimport { Router, Route, Switch, Link } from \"react-router-dom\";\nimport fireDb from './firebase';\nimport Compress from \"react-image-file-resizer\";\nimport Popup from './Popup';\nimport nextId from \"react-id-generator\";\nimport { Button, Container, Header, Message } from \"semantic-ui-react\"; //import { NFTStorage, File } from 'nft.storage'\n\nimport fill from './he.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Nft() {\n  _s();\n\n  const [pina, setPina] = useState([]);\n  console.log(\"pinaa\", pina); //const uploadIpfs=()=>{\n  //alert(\"uploadipfs\")\n\n  const axios = require('axios');\n\n  let pinataApiKey = '88348e7ce84879e143e1';\n  let pinataSecretApiKey = 'e4e8071ff66386726f9fe1aebf2d3235a9f88ceb4468d4be069591eb78d4bf6f';\n\n  const pinataSDK = require('@pinata/sdk');\n\n  const pinata = pinataSDK(pinataApiKey, pinataSecretApiKey);\n\n  const pinFileToIPFS = () => {\n    alert(\"new\");\n    pinata.testAuthentication().then(result => {\n      //handle successful authentication here\n      console.log(result);\n      let ge = 'https://ipfs.io/ipfs/' + ipf;\n      console.log(\"ipfsHash\", ipfsHash);\n      const body = {\n        message: ge\n      };\n      const options = {\n        pinataMetadata: {\n          name: tname,\n          keyvalues: {\n            customKey: 'customValue',\n            customKey2: 'customValue2'\n          }\n        },\n        pinataOptions: {\n          cidVersion: 0\n        }\n      };\n      pinata.pinJSONToIPFS(body, options).then(result => {\n        //handle results here\n        console.log(result);\n        console.log(\"jsonresult\");\n      }).catch(err => {\n        //handle error here\n        console.log(err);\n      });\n    }).catch(err => {\n      //handle error here\n      console.log(err);\n    });\n  };\n\n  const getpinata = () => {\n    const filters = {\n      status: 'pinned',\n      pageLimit: 10,\n      pageOffset: 0 //metadata: metadataFilter\n\n    };\n    pinata.pinList(filters).then(result => {\n      //handle results here\n      console.log(result.rows[0].metadata.name);\n      console.log(result.rows[0].ipfs_pin_hash);\n      setPina(result.rows); // result.forEach((d)=>{\n      //   console.log(\"keycheck\",d.key)\n      //   //req.push(d.val())\n      // })\n\n      console.log(\"gitresult\", result);\n      pinata.userPinnedDataTotal().then(result => {\n        //handle results here\n        console.log(\"result\");\n        console.log(result);\n      }).catch(err => {\n        //handle error here\n        console.log(err);\n      });\n    }).catch(err => {\n      //handle error here\n      console.log(err);\n    });\n  }; //const axios = require('axios');\n\n\n  const [adds, setadds] = useState([]);\n  const [isWork, setisWork] = useState(false);\n  window.name = \"1\";\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [isLoading, setLoading] = useState(false);\n  const [symbolget, setsymbolget] = useState();\n  const [currentSymbol, setCurrentSymbol] = useState('ETH');\n\n  const changeFruit = newFruit => {\n    setCurrentSymbol(newFruit);\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(false);\n    window.location.reload(false);\n  };\n\n  const [tTransferAlgo, setTransferAlgo] = useState();\n  let btn;\n  var accounts;\n\n  const connectalgo = async () => {\n    let getchange = '';\n    AlgoSigner.connect().then(d => {\n      AlgoSigner.accounts({\n        ledger: 'TestNet'\n      }).then(d => {\n        accounts = d;\n        getchange = accounts[0].address;\n        localStorage.setItem(\"algoaddress\", getchange);\n        console.log(\"algo address\", getchange);\n\n        if (getchange != '') {\n          btn = document.getElementById(\"bualgo\"); //btn.value = accounts[0]; // will just add a hidden value\n          //btn.innerHTML = accounts[0];\n\n          btn.innerHTML = getchange;\n          localStorage.setItem('myaddressalgo', getchange);\n        } else {\n          var btns = document.getElementById(\"bualgo\"); //btns.value = accounts[0]; // will just add a hidden value\n\n          btns.innerHTML = \"NOT CONNECTED\";\n          localStorage.setItem('myaddressalgo', \"\");\n        }\n      }).catch(e => {\n        console.error(e);\n      });\n    }).catch(e => {\n      console.error(e);\n    }); // let localalgo=localStorage.getItem(\"algoaddress\");\n    // if(localalgo !== \"\"){\n    //   //accounts[0\n    //   //document.getElementById(\"bu\").\n    //   //document.getElementById(\"bu\").append(\"CONNECTED\")\n    //   btn= document.getElementById(\"bualgo\");\n    //   //btn.value = accounts[0]; // will just add a hidden value\n    //   //btn.innerHTML = accounts[0];\n    //   btn.innerHTML = localalgo;\n    //   localStorage.setItem('myaddressalgo', localalgo);\n    // }\n    // else{\n    //   //document.getElementById(\"bu\").remove(\"\");\n    //   //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\n    //   var btns = document.getElementById(\"bualgo\");\n    //   //btns.value = accounts[0]; // will just add a hidden value\n    //   btns.innerHTML = \"NOT CONNECTED\";\n    //   localStorage.setItem('myaddressalgo', \"\");\n    // }\n  }; //useEffect(()=>{connectalgo()},[])\n\n\n  const connectmm = async () => {\n    accounts = await web3.eth.getAccounts(); //.send({from:accounts[0]})\n\n    if (accounts[0] !== \"\") {\n      //accounts[0\n      //document.getElementById(\"bu\").\n      //document.getElementById(\"bu\").append(\"CONNECTED\")\n      btn = document.getElementById(\"bu\"); //btn.value = accounts[0]; // will just add a hidden value\n      //btn.innerHTML = accounts[0];\n\n      btn.innerHTML = accounts[0];\n      localStorage.setItem('myaddress', accounts[0]);\n    } else {\n      //document.getElementById(\"bu\").remove(\"\");\n      //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\n      var btns = document.getElementById(\"bu\"); //btns.value = accounts[0]; // will just add a hidden value\n\n      btns.innerHTML = \"NOT CONNECTED\";\n      localStorage.setItem('myaddress', \"\");\n    }\n  };\n\n  useEffect(() => {\n    connectmm();\n  }, []);\n  var studentlist = [];\n  var stuset = [];\n  const [currentid, setCurrentid] = useState(\"\");\n  const [toaddress, setToaddress] = useState(\"\");\n  const [tid, setId] = useState(\"\");\n  const [tname, setName] = useState(\"\");\n  const [tsymbol, settSymbol] = useState(\"\");\n  const [ipfsHash, setIpfsHash] = useState(null);\n  const [ipf, setIpf] = useState(null);\n  const [tdes, setDes] = useState(\"\");\n  var [buffer, setBuffer] = useState(\"\");\n  let tf;\n  let [Img, setImg] = useState(\"\");\n  let address = \"\"; //start\n\n  const captureFile = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    const file = event.target.files[0];\n    let reader = new window.FileReader();\n    Compress.imageFileResizer(file, 300, 300, 'JPEG', 10, 0, uri => {\n      console.log(\"iuri\", uri);\n      setImg(uri);\n    }, 'base64');\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => convertToBuffer(reader);\n\n    console.log(reader);\n  }; //cons\n  // const reader=new window.FileReader();\n  // reader.readAsArrayBuffer(file)\n\n\n  const convertToBuffer = async reader => {\n    //file is converted to a buffer for upload to IPFS\n    const buffer = await Buffer.from(reader.result); //set this buffer -using es6 syntax\n\n    setBuffer(buffer); //onSubmitImage();\n  };\n\n  const onSubmitImage = async event => {\n    console.log(\"onsubmitimage called\"); // const buffer = Buffer.from(reader.result);\n    //set this buffer -using es6 syntax\n    //setBuffer(buffer);\n    //alert(\"capture\")\n    //event.preventDefault();\n    //bring in user's metamask account address\n    //const accounts = await web3.eth.getAccounts();\n    //console.log('Sending from Metamask account: ' + accounts[0]);\n    // await ipfs.add(buffer, (err, ipfsHash) => {\n    //   console.log(err,ipfsHash);\n    //   console.log(\"buff\",buffer);\n    //   setIpfsHash(ipfsHash[0].hash);\n    //   console.log(ipfsHash[0].hash)\n    //   const CID = require('cids')\n    //   var cid = new CID(ipfsHash)\n    //   console.log( cid.toV1().toBaseEncodedString('base32'));\n    // }) \n\n    await ipfs.add(buffer, (err, ipfsHash) => {\n      console.log(err, ipfsHash);\n      console.log(\"buff\", buffer);\n      setIpfsHash(ipfsHash[0].hash);\n      console.log(ipfsHash[0].hash);\n\n      const CID = require('cids');\n\n      var cid = new CID(ipfsHash[0].hash); //let ccp=cid.toV1().toBaseEncodedString('base32');\n\n      console.log(cid.toV1().toBaseEncodedString('base32'));\n      setIpf(cid.toV1().toBaseEncodedString('base32'));\n    });\n  }; //end\n\n\n  const onSubmitNFT = async event => {\n    //captureFile();\n    //convertToBuffer();\n    //onSubmitImage();\n    setLoading(true);\n    event.preventDefault(); //new write below\n\n    const accounts = await web3.eth.getAccounts();\n    var ta = tname; //var tb=tsymbol;\n\n    var tb = currentSymbol;\n    var tc = 'https://ipfs.io/ipfs/' + ipfsHash;\n    var td = toaddress; //var te=tid;\n\n    tf = 'https://ipfs.io/ipfs/' + ipfsHash;\n    let tdescription = tdes; //console.log('https://ipfs.io/ipfs/'+ccp)\n\n    let ref23 = fireDb.database().ref(`tokenkey`);\n    let getfire = \"\";\n    let setfire = \"\";\n    fireDb.database().ref(`tokenkey`).on(\"value\", data => {\n      if (data) {\n        data.forEach(d => {\n          getfire = d.val();\n        });\n      }\n    }); //alert(\"\")\n\n    setfire = parseInt(getfire) + parseInt(1); //alert(\"your token\"+setfire+\"getfire\"+getfire);\n\n    ref23.update({\n      id: setfire.toString()\n    });\n    var te = parseInt(getfire);\n\n    if (Img === '') {\n      alert(\"Please upload images...\");\n    } else {\n      var getaddress = localStorage.getItem('myaddress'); //alert(\"getdata from SYMBOL  \"+tb);\n\n      if (tb === \"BNB\") {\n        await lottery.deploy({\n          data: '',\n          arguments: [ta, tb, Img, accounts[0], '0xD264b074c4a772E56536005Ae629518ee1bCc83a']\n        }).send({\n          from: accounts[0] //gas: 6241620,//9088550,\n          //gasPrice:'10' //'1000000000'\n\n        }).then(function (newContractInstance) {\n          console.log(newContractInstance.options.address); // instance with the new contract address\n\n          localStorage.setItem('myData', newContractInstance.options.address);\n        });\n        const abi = [{\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"interfaceId\",\n            \"type\": \"bytes4\"\n          }],\n          \"name\": \"supportsInterface\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"name\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"getApproved\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"approve\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"_tokenURIs\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"giver\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"recipients\",\n            \"type\": \"address[]\"\n          }, {\n            \"name\": \"values\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"batchTransfer\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"totalSupply\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"transferFrom\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"index\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"tokenOfOwnerByIndex\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"safeTransferFrom\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"burn\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"_receiver\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"sendss\",\n          \"outputs\": [],\n          \"payable\": true,\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"destroyAndSend\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"index\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"tokenByIndex\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"maker\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"tokenURI\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"mintWithTokenURI\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"ownerOf\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"balanceOf\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"renounceOwnership\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"_tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"buyThing\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": true,\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"tokensOfOwner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256[]\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"owner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"isOwner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"symbol\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"addMinter\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"amountToMint\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"setPrice\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"isForSale\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"batchMint\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"renounceMinter\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"baseUri\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"approved\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"setApprovalForAll\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"isMinter\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"auri\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"id\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"Owner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"getAllURI\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"_data\",\n            \"type\": \"bytes\"\n          }],\n          \"name\": \"safeTransferFrom\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"items\",\n          \"outputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"price\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"state\",\n            \"type\": \"uint8\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"_tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"tokenURI\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }, {\n            \"name\": \"isEnabled\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"setTokenState\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"printitems\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256[]\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"printitem\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"tokenIds\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"batchBurn\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }, {\n            \"name\": \"setPrice\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"setTokenPrice\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"operator\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"isApprovedForAll\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"newOwner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"transferOwnership\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"ispushed\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"name\": \"name\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"symbol\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"uri\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"fee\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"creator\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"constructor\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"error\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"ErrorOut\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"recipients\",\n            \"type\": \"address[]\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"BatchTransfered\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"id\",\n            \"type\": \"uint256\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"Minted\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"BatchBurned\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"BatchForSale\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"value\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"Bought\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [],\n          \"name\": \"Destroy\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"previousOwner\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"newOwner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"OwnershipTransferred\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"MinterAdded\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"MinterRemoved\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"Transfer\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"approved\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"Approval\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"operator\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"approved\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"ApprovalForAll\",\n          \"type\": \"event\"\n        }];\n        address = localStorage.getItem('myData');\n        var geta = new web3.eth.Contract(abi, address);\n        localStorage.setItem('mynetwork', tb); //alert(\"check maticmum\"+address);\n        //let a=this.state.toaddress;\n        //let b=this.state.tokenid;\n        //let c=this.state.tokenuri;\n        //alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\n\n        event.preventDefault(); //const accounts = await web3.eth.getAccounts();\n\n        await geta.methods.mintWithTokenURI(accounts[0], te, Img).send({\n          from: accounts[0] //gas: 21000\n\n        }).on('transactionHash', function (hash) {\n          console.log(\"hashget\", hash); //start\n          //this line firebase code added below\n          //const accounts = await web3.eth.getAccounts();\n\n          let getaddress = localStorage.getItem('myaddress');\n          let getData = localStorage.getItem('myData');\n          fireDb.database().ref(\"contractaddress\").child(accounts[0]).push(getData, err => {\n            //   console.log(obj, \"obj\");\n            if (err) console.log(err);else setCurrentid(\"\");\n          });\n          let nftname = fireDb.database().ref(`nftname`);\n          const nftdb = nftname.push().key;\n          nftname.child(nftdb).set({\n            name: tname\n          });\n          let ref2 = fireDb.database().ref(`imageref/${accounts[0]}`);\n          let dateset = new Date().toDateString();\n          console.log(\"dateget\", dateset);\n          const db = ref2.push().key;\n          console.log(\"dbcheck\", db);\n          ref2.child(db).set({\n            id: te,\n            imageUrl: Img,\n            priceSet: \"\",\n            cAddress: getData,\n            keyId: db,\n            userName: ta,\n            userSymbol: tb,\n            ipfsUrl: tf,\n            ownerAddress: accounts[0],\n            soldd: \"\",\n            extra1: \"\",\n            previousoaddress: \"\",\n            datesets: dateset,\n            whois: ''\n          });\n          let ref23 = fireDb.database().ref(`imagepurcre/${accounts[0]}`);\n          ref23.child(db).set({\n            id: te,\n            imageUrl: Img,\n            priceSet: \"\",\n            cAddress: getData,\n            keyId: db,\n            userName: ta,\n            userSymbol: tb,\n            ipfsUrl: tf,\n            ownerAddress: accounts[0],\n            soldd: \"\",\n            extra1: \"\",\n            datesets: dateset,\n            whois: ''\n          }); //end          \n        });\n      } else if (tb === \"ETH\") {\n        await lottery.deploy({\n          data: '',\n          arguments: [ta, tb, Img, accounts[0], '0xD264b074c4a772E56536005Ae629518ee1bCc83a']\n        }).send({\n          from: accounts[0],\n          gas: 9088550,\n          gasPrice: 1000000000\n        }).then(function (newContractInstance) {\n          console.log(newContractInstance.options.address); // instance with the new contract address\n\n          localStorage.setItem('myData', newContractInstance.options.address);\n        });\n        const abi = [{\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"interfaceId\",\n            \"type\": \"bytes4\"\n          }],\n          \"name\": \"supportsInterface\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"name\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"getApproved\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"approve\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"_tokenURIs\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"giver\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"recipients\",\n            \"type\": \"address[]\"\n          }, {\n            \"name\": \"values\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"batchTransfer\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"totalSupply\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"transferFrom\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"index\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"tokenOfOwnerByIndex\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"safeTransferFrom\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"burn\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"_receiver\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"sendss\",\n          \"outputs\": [],\n          \"payable\": true,\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"destroyAndSend\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"index\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"tokenByIndex\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"maker\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"tokenURI\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"mintWithTokenURI\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"ownerOf\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"balanceOf\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"renounceOwnership\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"_tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"buyThing\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": true,\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"tokensOfOwner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256[]\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"owner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"isOwner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"symbol\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"addMinter\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"amountToMint\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"setPrice\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"isForSale\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"batchMint\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"renounceMinter\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"baseUri\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"approved\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"setApprovalForAll\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"isMinter\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"auri\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"id\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"Owner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"getAllURI\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"_data\",\n            \"type\": \"bytes\"\n          }],\n          \"name\": \"safeTransferFrom\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"items\",\n          \"outputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"price\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"state\",\n            \"type\": \"uint8\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"_tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"tokenURI\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }, {\n            \"name\": \"isEnabled\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"setTokenState\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"printitems\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256[]\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"printitem\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"tokenIds\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"batchBurn\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }, {\n            \"name\": \"setPrice\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"setTokenPrice\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"operator\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"isApprovedForAll\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"newOwner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"transferOwnership\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"ispushed\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"name\": \"name\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"symbol\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"uri\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"fee\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"creator\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"constructor\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"error\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"ErrorOut\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"recipients\",\n            \"type\": \"address[]\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"BatchTransfered\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"id\",\n            \"type\": \"uint256\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"Minted\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"BatchBurned\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"BatchForSale\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"value\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"Bought\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [],\n          \"name\": \"Destroy\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"previousOwner\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"newOwner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"OwnershipTransferred\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"MinterAdded\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"MinterRemoved\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"Transfer\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"approved\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"Approval\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"operator\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"approved\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"ApprovalForAll\",\n          \"type\": \"event\"\n        }];\n        address = localStorage.getItem('myData');\n        var geta = new web3.eth.Contract(abi, address);\n        localStorage.setItem('mynetwork', tb); //alert(\"check maticmum\"+address);\n        //let a=this.state.toaddress;\n        //let b=this.state.tokenid;\n        //let c=this.state.tokenuri;\n        //alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\n\n        event.preventDefault(); //const accounts = await web3.eth.getAccounts();\n\n        await geta.methods.mintWithTokenURI(accounts[0], te, Img).send({\n          from: accounts[0] //gas: 21000\n\n        }).on('transactionHash', function (hash) {\n          console.log(\"hashget\", hash); //start\n          //this line firebase code added below\n          //const accounts = await web3.eth.getAccounts();\n\n          let getaddress = localStorage.getItem('myaddress');\n          let getData = localStorage.getItem('myData');\n          fireDb.database().ref(\"contractaddress\").child(accounts[0]).push(getData, err => {\n            //   console.log(obj, \"obj\");\n            if (err) console.log(err);else setCurrentid(\"\");\n          });\n          let nftname = fireDb.database().ref(`nftname`);\n          const nftdb = nftname.push().key;\n          nftname.child(nftdb).set({\n            name: tname\n          });\n          let ref2 = fireDb.database().ref(`imageref/${accounts[0]}`);\n          let dateset = new Date().toDateString();\n          console.log(\"dateget\", dateset);\n          const db = ref2.push().key;\n          console.log(\"dbcheck\", db);\n          ref2.child(db).set({\n            id: te,\n            imageUrl: Img,\n            priceSet: \"\",\n            cAddress: getData,\n            keyId: db,\n            userName: ta,\n            userSymbol: tb,\n            ipfsUrl: tf,\n            ownerAddress: accounts[0],\n            soldd: \"\",\n            extra1: \"\",\n            previousoaddress: \"\",\n            datesets: dateset,\n            whois: ''\n          });\n          let ref23 = fireDb.database().ref(`imagepurcre/${accounts[0]}`);\n          ref23.child(db).set({\n            id: te,\n            imageUrl: Img,\n            priceSet: \"\",\n            cAddress: getData,\n            keyId: db,\n            userName: ta,\n            userSymbol: tb,\n            ipfsUrl: tf,\n            ownerAddress: accounts[0],\n            soldd: \"\",\n            extra1: \"\",\n            datesets: dateset,\n            whois: ''\n          }); //fireDb.database().ref(`imageref/${accounts[0]}`).child(db).push({\n          //id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:\"\"\n          //});\n          //end          \n        });\n      } else if (tb === \"Maticmum\") {\n        alert(\"Maticmum\");\n        alert(\"acc\" + accounts[0]);\n        await lottery.deploy({\n          data: '',\n          arguments: [ta, tb, Img, accounts[0], '0xD264b074c4a772E56536005Ae629518ee1bCc83a']\n        }).send({\n          from: accounts[0] //gas: 6241620,//9088550,\n          //gasPrice:'20000000000' //'1000000000'\n\n        }).then(function (newContractInstance) {\n          console.log(newContractInstance.options.address); // instance with the new contract address\n\n          localStorage.setItem('myData', newContractInstance.options.address);\n        });\n        const abi = [{\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"interfaceId\",\n            \"type\": \"bytes4\"\n          }],\n          \"name\": \"supportsInterface\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"name\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"getApproved\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"approve\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"_tokenURIs\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"giver\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"recipients\",\n            \"type\": \"address[]\"\n          }, {\n            \"name\": \"values\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"batchTransfer\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"totalSupply\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"transferFrom\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"index\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"tokenOfOwnerByIndex\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"safeTransferFrom\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"burn\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"_receiver\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"sendss\",\n          \"outputs\": [],\n          \"payable\": true,\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"destroyAndSend\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"index\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"tokenByIndex\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"maker\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"tokenURI\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"mintWithTokenURI\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"ownerOf\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"balanceOf\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"renounceOwnership\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"_tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"buyThing\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": true,\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"tokensOfOwner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256[]\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"owner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"isOwner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"symbol\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"addMinter\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"amountToMint\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"setPrice\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"isForSale\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"batchMint\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"renounceMinter\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"baseUri\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"approved\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"setApprovalForAll\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"isMinter\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"auri\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"id\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"Owner\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [],\n          \"name\": \"getAllURI\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"_data\",\n            \"type\": \"bytes\"\n          }],\n          \"name\": \"safeTransferFrom\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"items\",\n          \"outputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"price\",\n            \"type\": \"uint256\"\n          }, {\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"state\",\n            \"type\": \"uint8\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"_tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"tokenURI\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }, {\n            \"name\": \"isEnabled\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"setTokenState\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [],\n          \"name\": \"printitems\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256[]\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"printitem\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"tokenIds\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"batchBurn\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }, {\n            \"name\": \"setPrice\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"setTokenPrice\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"operator\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"isApprovedForAll\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": false,\n          \"inputs\": [{\n            \"name\": \"newOwner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"transferOwnership\",\n          \"outputs\": [],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"ispushed\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"name\": \"name\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"symbol\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"uri\",\n            \"type\": \"string\"\n          }, {\n            \"name\": \"fee\",\n            \"type\": \"address\"\n          }, {\n            \"name\": \"creator\",\n            \"type\": \"address\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"constructor\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"error\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"ErrorOut\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"recipients\",\n            \"type\": \"address[]\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"BatchTransfered\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"id\",\n            \"type\": \"uint256\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"Minted\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }],\n          \"name\": \"BatchBurned\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"ids\",\n            \"type\": \"uint256[]\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"BatchForSale\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": false,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"metaId\",\n            \"type\": \"string\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"value\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"Bought\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [],\n          \"name\": \"Destroy\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"previousOwner\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"newOwner\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"OwnershipTransferred\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"MinterAdded\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"account\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"MinterRemoved\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"from\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"to\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"Transfer\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"approved\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"Approval\",\n          \"type\": \"event\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"name\": \"owner\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": true,\n            \"name\": \"operator\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": false,\n            \"name\": \"approved\",\n            \"type\": \"bool\"\n          }],\n          \"name\": \"ApprovalForAll\",\n          \"type\": \"event\"\n        }];\n        address = localStorage.getItem('myData');\n        var geta = new web3.eth.Contract(abi, address);\n        localStorage.setItem('mynetwork', tb); //alert(\"check maticmum\"+address);\n        //let a=this.state.toaddress;\n        //let b=this.state.tokenid;\n        //let c=this.state.tokenuri;\n        //alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\n\n        event.preventDefault(); //const accounts = await web3.eth.getAccounts();\n\n        await geta.methods.mintWithTokenURI(accounts[0], te, Img).send({\n          from: accounts[0] //gas: 21000\n\n        }).on('transactionHash', function (hash) {\n          console.log(\"hashget\", hash); //start\n          //this line firebase code added below\n          //const accounts = await web3.eth.getAccounts();\n\n          let getaddress = localStorage.getItem('myaddress');\n          let getData = localStorage.getItem('myData');\n          fireDb.database().ref(\"contractaddress\").child(accounts[0]).push(getData, err => {\n            //   console.log(obj, \"obj\");\n            if (err) console.log(err);else setCurrentid(\"\");\n          });\n          let nftname = fireDb.database().ref(`nftname`);\n          const nftdb = nftname.push().key;\n          nftname.child(nftdb).set({\n            name: tname\n          });\n          let ref2 = fireDb.database().ref(`imageref/${accounts[0]}`);\n          let dateset = new Date().toDateString();\n          console.log(\"dateget\", dateset);\n          const db = ref2.push().key;\n          console.log(\"dbcheck\", db);\n          ref2.child(db).set({\n            id: te,\n            imageUrl: Img,\n            priceSet: \"\",\n            cAddress: getData,\n            keyId: db,\n            userName: ta,\n            userSymbol: tb,\n            ipfsUrl: tf,\n            ownerAddress: accounts[0],\n            soldd: \"\",\n            extra1: \"\",\n            previousoaddress: \"\",\n            datesets: dateset,\n            whois: ''\n          });\n          let ref23 = fireDb.database().ref(`imagepurcre/${accounts[0]}`);\n          ref23.child(db).set({\n            id: te,\n            imageUrl: Img,\n            priceSet: \"\",\n            cAddress: getData,\n            keyId: db,\n            userName: ta,\n            userSymbol: tb,\n            ipfsUrl: tf,\n            ownerAddress: accounts[0],\n            soldd: \"\",\n            extra1: \"\",\n            datesets: dateset,\n            whois: ''\n          }); //end          \n        });\n      } else if (tb === \"Algos\") {\n        //start\n        const algosdk = require('algosdk');\n\n        var account1_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\";\n        var account2_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\"; //var account3_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\";\n        // var account3_mnemonic = \"runway genuine lazy assist ticket junior pilot flush rocket swallow ripple risk alien mobile chat recall run quiz cause weekend range april vicious about spoon\";\n\n        var recoveredAccount1 = algosdk.mnemonicToSecretKey(account1_mnemonic);\n        var recoveredAccount2 = algosdk.mnemonicToSecretKey(account2_mnemonic); //var recoveredAccount3 = algosdk.mnemonicToSecretKey(account3_mnemonic);\n        //alert(arr[0]);\n        // var recoveredAccount1 = arr[0];\n        // var recoveredAccount2 = arr[0];\n        // var recoveredAccount3 = arr[0];\n        //console.log(recoveredAccount3.addr);\n\n        const baseServer = \"https://testnet-algorand.api.purestake.io/ps2\";\n        const port = \"\"; //B3SU4KcVKi94Jap2VXkK83xx38bsv95K5UZm2lab\n\n        const token = {\n          'X-API-key': 'SVsJKi8vBM1RwK1HEuwhU20hYmwFJelk8bagKPin'\n        };\n        let algodclient = new algosdk.Algodv2(token, baseServer, port);\n        let response;\n        let lastround; // Function used to wait for a tx confirmation\n\n        const waitForConfirmation = async function (algodclient, txId) {\n          console.log(\"working return 133\", txId);\n          console.log(\"workingalgo\" + algodclient);\n          response = await algodclient.status().do();\n          lastround = response[\"last-round\"];\n\n          while (true) {\n            const pendingInfo = await algodclient.pendingTransactionInformation(txId).do();\n\n            if (pendingInfo[\"confirmed-round\"] !== null && pendingInfo[\"confirmed-round\"] > 0) {\n              //Got the completed Transaction\n              console.log(\"Transaction \" + txId + \" confirmed in round \" + pendingInfo[\"confirmed-round\"]);\n              break;\n            }\n\n            lastround++;\n            await algodclient.statusAfterBlock(lastround).do();\n          }\n        };\n\n        let accountInfo; // Function used to print created asset for account and assetid\n\n        const printCreatedAsset = async function (algodclient, account, assetid) {\n          // note: if you have an indexer instance available it is easier to just use this\n          //     let accountInfo = await indexerClient.searchAccounts()\n          //    .assetID(assetIndex).do();\n          // and in the loop below use this to extract the asset for a particular account\n          // accountInfo['accounts'][idx][account]);\n          accountInfo = await algodclient.accountInformation(account).do();\n\n          for (let idx = 0; idx < accountInfo['created-assets'].length; idx++) {\n            let scrutinizedAsset = accountInfo['created-assets'][idx];\n\n            if (scrutinizedAsset['index'] === assetid) {\n              console.log(\"AssetID = \" + scrutinizedAsset['index']);\n              let myparms = JSON.stringify(scrutinizedAsset['params'], undefined, 2);\n              console.log(\"parms = \" + myparms);\n              break;\n            }\n          }\n        }; // Function used to print asset holding for account and assetid\n\n\n        const printAssetHolding = async function (algodclient, account, assetid) {\n          // note: if you have an indexer instance available it is easier to just use this\n          //     let accountInfo = await indexerClient.searchAccounts()\n          //    .assetID(assetIndex).do();\n          // and in the loop below use this to extract the asset for a particular account\n          // accountInfo['accounts'][idx][account]);\n          let accountInfo = await algodclient.accountInformation(account).do();\n\n          for (let idx = 0; idx < accountInfo['assets'].length; idx++) {\n            let scrutinizedAsset = accountInfo['assets'][idx];\n\n            if (scrutinizedAsset['asset-id'] === assetid) {\n              let myassetholding = JSON.stringify(scrutinizedAsset, undefined, 2);\n              console.log(\"assetholdinginfo = \" + myassetholding);\n              break;\n            }\n          }\n        };\n\n        (async () => {\n          // Asset Creation:\n          // The first transaciton is to create a new asset\n          // Get last round and suggested tx fee\n          // We use these to get the latest round and tx fees\n          // These parameters will be required before every \n          // Transaction\n          // We will account for changing transaction parameters\n          // before every transaction in this example\n          let params = await algodclient.getTransactionParams().do(); //comment out the next two lines to use suggested fee\n\n          params.fee = 1000;\n          params.flatFee = true;\n          console.log(params);\n          let note = undefined; // arbitrary data to be stored in the transaction; here, none is stored\n          // Asset creation specific parameters\n          // The following parameters are asset specific\n          // Throughout the example these will be re-used. \n          // We will also change the manager later in the example\n\n          let addr = recoveredAccount1.addr; // Whether user accounts will need to be unfrozen before transacting    \n\n          let defaultFrozen = false; // integer number of decimals for asset unit calculation\n\n          let decimals = 0; // total number of this asset available for circulation   \n\n          let totalIssuance = 1; // Used to display asset units to user    \n\n          let unitName = currentSymbol; // Friendly name of the asset    \n\n          let assetName = tname; // Optional string pointing to a URL relating to the asset\n\n          let assetURL = \"http://someurl\"; // Optional hash commitment of some sort relating to the asset. 32 character length.\n\n          let assetMetadataHash = \"16efaa3924a6fd9d3a4824799a4ac65d\"; // The following parameters are the only ones\n          // that can be changed, and they have to be changed\n          // by the current manager\n          // Specified address can change reserve, freeze, clawback, and manager\n\n          let manager = recoveredAccount2.addr; // Specified address is considered the asset reserve\n          // (it has no special privileges, this is only informational)\n\n          let reserve = recoveredAccount2.addr; // Specified address can freeze or unfreeze user asset holdings \n\n          let freeze = recoveredAccount2.addr; // Specified address can revoke user asset holdings and send \n          // them to other addresses    \n\n          let clawback = recoveredAccount2.addr; // signing and sending \"txn\" allows \"addr\" to create an asset\n\n          let txn = algosdk.makeAssetCreateTxnWithSuggestedParams(addr, note, totalIssuance, decimals, defaultFrozen, manager, reserve, freeze, clawback, unitName, assetName, assetURL, assetMetadataHash, params);\n          console.log(\"txnget\", txn);\n          let rawSignedTxn = txn.signTxn(recoveredAccount1.sk);\n          console.log(\"rawget\", rawSignedTxn);\n          let tx = await algodclient.sendRawTransaction(rawSignedTxn).do();\n          console.log(\"Transactionset\" + tx.txId);\n          let assetID = null; // wait for transaction to be confirmed\n\n          await waitForConfirmation(algodclient, tx.txId); // Get the new asset's information from the creator account\n\n          let ptx = await algodclient.pendingTransactionInformation(tx.txId).do();\n          assetID = ptx[\"asset-index\"];\n          console.log(\"ptx\" + ptx);\n          console.log(\"AssetID = \" + assetID);\n          await printCreatedAsset(algodclient, recoveredAccount1.addr, assetID);\n          await printAssetHolding(algodclient, recoveredAccount1.addr, assetID);\n          params = await algodclient.getTransactionParams().do(); //comment out the next two lines to use suggested fee\n\n          params.fee = 1000;\n          params.flatFee = true; // Asset configuration specific parameters\n          // all other values are the same so we leave \n          // Them set.\n          // specified address can change reserve, freeze, clawback, and manager\n\n          manager = recoveredAccount1.addr; // Note that the change has to come from the existing manager\n\n          let ctxn = algosdk.makeAssetConfigTxnWithSuggestedParams(recoveredAccount2.addr, note, assetID, manager, reserve, freeze, clawback, params); // This transaction must be signed by the current manager\n\n          rawSignedTxn = ctxn.signTxn(recoveredAccount2.sk);\n          let ctx = await algodclient.sendRawTransaction(rawSignedTxn).do();\n          console.log(\"Transaction : \" + ctx.txId); // wait for transaction to be confirmed\n\n          await waitForConfirmation(algodclient, ctx.txId); // Get the asset information for the newly changed asset\n          // use indexer or utiltiy function for Account info\n          // The manager should now be the same as the creator\n\n          await printCreatedAsset(algodclient, recoveredAccount1.addr, assetID);\n          let refalgo = fireDb.database().ref(`algorandData/${recoveredAccount1.addr}`);\n          let dateset = new Date().toDateString();\n          console.log(\"dateget\", dateset);\n          const db = refalgo.push().key;\n          console.log(\"dbcheck\", db);\n          refalgo.child(db).set({\n            imageurl: Img,\n            createmnemonic: account1_mnemonic,\n            algocreator: recoveredAccount1.addr,\n            algotrasnfer: \"\",\n            algoid: assetID,\n            algoname: tname,\n            algosymbol: currentSymbol,\n            txnId: tx.txId,\n            AssetIdset: assetID,\n            transfer: \"\",\n            status: \"\",\n            price: \"\",\n            keyId: db,\n            algodclients: algodclient,\n            responses: response,\n            lastrounds: lastround,\n            accountInfos: accountInfo\n          });\n          setLoading(false);\n          setIsOpen(true);\n        })().then(d => {\n          setLoading(false);\n          setIsOpen(true);\n        }).catch(e => {\n          console.log(e);\n          console.trace();\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        height: '70px',\n        width: '1500px',\n        marginBlock: '5px',\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          height: '43px',\n          width: '1050px',\n          marginLeft: '150px',\n          marginBlock: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              outline: 'none'\n            },\n            class: \"btn btn-info btn-block\",\n            type: \"button\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4105,\n            columnNumber: 15\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4101,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/explore\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              outline: 'none'\n            },\n            class: \"btn btn-info btn-block\",\n            type: \"button\",\n            children: \"Explore\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4120,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/salepagecopy\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\" // onClick={() => {\n            //   history.push(\"/Salepagecopy\");\n            // }}\n            ,\n            children: \"Myitem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4139,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/followingpage\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\" // onClick={() => {\n            //   history.push(\"/Followingpage\");\n            // }}\n            ,\n            children: \"Following\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4156,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/activitypage\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\" // onClick={() => {\n            //   history.push(\"/Activitypage\");\n            // }}\n            ,\n            children: \"Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4171,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/howitworkpage\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\",\n            children: \"How it works\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4186,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/communitypage\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\",\n            children: \"Community\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4201,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4199,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/nft\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\" // onClick={() => {\n            //   history.push(\"/Nft\");\n            // }}\n            ,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4211,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"bu\",\n          class: \"btn btn-info btn-block\",\n          type: \"button\",\n          onClick: connectmm,\n          children: \"Connect wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4226,\n          columnNumber: 15\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"bualgo\",\n          class: \"btn btn-info btn-block\",\n          type: \"button\",\n          onClick: connectalgo,\n          children: \"Connect wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4236,\n          columnNumber: 15\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4251,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/demoex\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\",\n            children: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4254,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4252,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4262,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4265,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4100,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4098,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          height: '600px',\n          width: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4283,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CREATE NFT-TOKEN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4284,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4286,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmitNFT,\n          id: \"create-course-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"NFT  Name    \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4290,\n            columnNumber: 1\n          }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"nameid\",\n            type: \"text\",\n            name: \"tname\",\n            required: true,\n            onChange: event => setName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4292,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4300,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4301,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"symbol\",\n            children: \"NFT  Symbol    \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4303,\n            columnNumber: 4\n          }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              backgroundColor: 'white',\n              height: '20px',\n              width: '160px'\n            },\n            onChange: event => changeFruit(event.target.value),\n            value: currentSymbol,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ETH\",\n              children: \"ETH     \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4311,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"BNB\",\n              children: \"BNB     \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4312,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Maticmum\",\n              children: \"MATICMUM \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4313,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Algos\",\n              children: \"ALGOS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4314,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4307,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4325,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4326,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"NFT  Description    \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4328,\n            columnNumber: 1\n          }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"descriid\",\n            type: \"text\",\n            name: \"tdescri\",\n            required: true,\n            onChange: event => setDes(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4330,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4338,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4339,\n            columnNumber: 7\n          }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"images\",\n            children: \"Choose Your Image     \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4361,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              backgroundColor: 'white',\n              height: '22px',\n              width: '230px'\n            },\n            name: \"tfile\",\n            id: \"fileid\",\n            type: \"file\",\n            onChange: captureFile,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSubmitImage,\n            type: \"submit\",\n            children: \"Upload Image NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4367,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4375,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4376,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4377,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4381,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4381,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4383,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4383,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4385,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4288,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4412,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4413,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4426,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4427,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4429,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4430,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: pinFileToIPFS,\n          children: \" Test Ipfs Algorand \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4432,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4434,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4435,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: getpinata,\n          children: \" Get Ipfs Algorand \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4437,\n          columnNumber: 1\n        }, this), isOpen && /*#__PURE__*/_jsxDEV(Popup, {\n          content: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4443,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your token has been deployed and mint successfully......\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4444,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: togglePopup,\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4445,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true) // handleClose={togglePopup}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4442,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4278,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4275,\n      columnNumber: 1\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Fetching........\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4452,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"200px\",\n          height: \"200px\"\n        },\n        src: \"/4V0b.gif\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4453,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4452,\n      columnNumber: 14\n    }, this) : ' ']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4097,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nft, \"gmNKjE/+3IB4PQiInBrIoQYci4Y=\");\n\n_c = Nft;\nexport default Nft;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nft\");","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/src/Nft.js"],"names":["React","useState","useEffect","useCallback","web3","lottery","lottery2","ipfs","Router","Route","Switch","Link","fireDb","Compress","Popup","nextId","Button","Container","Header","Message","fill","Nft","pina","setPina","console","log","axios","require","pinataApiKey","pinataSecretApiKey","pinataSDK","pinata","pinFileToIPFS","alert","testAuthentication","then","result","ge","ipf","ipfsHash","body","message","options","pinataMetadata","name","tname","keyvalues","customKey","customKey2","pinataOptions","cidVersion","pinJSONToIPFS","catch","err","getpinata","filters","status","pageLimit","pageOffset","pinList","rows","metadata","ipfs_pin_hash","userPinnedDataTotal","adds","setadds","isWork","setisWork","window","show","setShow","handleClose","handleShow","isLoading","setLoading","symbolget","setsymbolget","currentSymbol","setCurrentSymbol","changeFruit","newFruit","isOpen","setIsOpen","togglePopup","location","reload","tTransferAlgo","setTransferAlgo","btn","accounts","connectalgo","getchange","AlgoSigner","connect","d","ledger","address","localStorage","setItem","document","getElementById","innerHTML","btns","e","error","connectmm","eth","getAccounts","studentlist","stuset","currentid","setCurrentid","toaddress","setToaddress","tid","setId","setName","tsymbol","settSymbol","setIpfsHash","setIpf","tdes","setDes","buffer","setBuffer","tf","Img","setImg","captureFile","event","stopPropagation","preventDefault","file","target","files","reader","FileReader","imageFileResizer","uri","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","onSubmitImage","add","hash","CID","cid","toV1","toBaseEncodedString","onSubmitNFT","ta","tb","tc","td","tdescription","ref23","database","ref","getfire","setfire","on","data","forEach","val","parseInt","update","id","toString","te","getaddress","getItem","deploy","arguments","send","newContractInstance","abi","geta","Contract","methods","mintWithTokenURI","getData","child","push","nftname","nftdb","key","set","ref2","dateset","Date","toDateString","db","imageUrl","priceSet","cAddress","keyId","userName","userSymbol","ipfsUrl","ownerAddress","soldd","extra1","previousoaddress","datesets","whois","gas","gasPrice","algosdk","account1_mnemonic","account2_mnemonic","recoveredAccount1","mnemonicToSecretKey","recoveredAccount2","baseServer","port","token","algodclient","Algodv2","response","lastround","waitForConfirmation","txId","do","pendingInfo","pendingTransactionInformation","statusAfterBlock","accountInfo","printCreatedAsset","account","assetid","accountInformation","idx","length","scrutinizedAsset","myparms","JSON","stringify","undefined","printAssetHolding","myassetholding","params","getTransactionParams","fee","flatFee","note","addr","defaultFrozen","decimals","totalIssuance","unitName","assetName","assetURL","assetMetadataHash","manager","reserve","freeze","clawback","txn","makeAssetCreateTxnWithSuggestedParams","rawSignedTxn","signTxn","sk","tx","sendRawTransaction","assetID","ptx","ctxn","makeAssetConfigTxnWithSuggestedParams","ctx","refalgo","imageurl","createmnemonic","algocreator","algotrasnfer","algoid","algoname","algosymbol","txnId","AssetIdset","transfer","price","algodclients","responses","lastrounds","accountInfos","trace","backgroundColor","height","width","marginBlock","display","marginLeft","outline","value"],"mappings":"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","sourcesContent":["/* global AlgoSigner */\r\nimport './App.css';\r\nimport React, { useState,useEffect,useCallback } from \"react\";\r\nimport web3 from './web3';\r\nimport lottery from './nftcontract';//this line import lottery folder\r\nimport lottery2 from './helloworldcontract';//this line import lottery folder\r\nimport ipfs from './ipfs';\r\nimport { Router, Route, Switch,Link } from \"react-router-dom\";\r\nimport fireDb from './firebase';\r\nimport Compress from \"react-image-file-resizer\";\r\nimport Popup from './Popup';\r\nimport nextId from \"react-id-generator\";\r\nimport {Button, Container, Header, Message} from \"semantic-ui-react\";\r\n//import { NFTStorage, File } from 'nft.storage'\r\nimport fill from './he.txt';\r\n\r\nfunction Nft() {\r\n\r\n  const [pina,setPina] = useState([]);  \r\n\r\n  console.log(\"pinaa\",pina)\r\n\r\n//const uploadIpfs=()=>{\r\n  //alert(\"uploadipfs\")\r\n    const axios = require('axios');\r\n\r\n\r\n    let pinataApiKey='88348e7ce84879e143e1';\r\n    let pinataSecretApiKey='e4e8071ff66386726f9fe1aebf2d3235a9f88ceb4468d4be069591eb78d4bf6f';\r\n\r\n  const pinataSDK = require('@pinata/sdk');\r\n  const pinata = pinataSDK(pinataApiKey, pinataSecretApiKey);\r\n\r\n    const pinFileToIPFS=()=>{\r\n\r\n\r\n      alert(\"new\");\r\n\r\n      pinata.testAuthentication().then((result) => {\r\n        //handle successful authentication here\r\n        console.log(result);\r\n\r\n        let ge='https://ipfs.io/ipfs/'+ipf;\r\n        console.log(\"ipfsHash\",ipfsHash);\r\n                const body = {\r\n                    message: ge\r\n                };\r\n                const options = {\r\n                    pinataMetadata: {\r\n                        name: tname,\r\n                        keyvalues: {\r\n                            customKey: 'customValue',\r\n                            customKey2: 'customValue2'\r\n                        }\r\n                    },\r\n                    pinataOptions: {\r\n                        cidVersion: 0\r\n                    }\r\n                };\r\n                pinata.pinJSONToIPFS(body, options).then((result) => {\r\n                    //handle results here\r\n                    console.log(result);\r\n                    console.log(\"jsonresult\")\r\n\r\n                    \r\n                  }).catch((err) => {\r\n                      //handle error here\r\n                      console.log(err);\r\n                  });\r\n\r\n\r\n                }).catch((err) => {\r\n                    //handle error here\r\n                    console.log(err);\r\n                });\r\n                                          \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n        \r\n\r\n    const getpinata=()=>{\r\n      const filters = {\r\n        status : 'pinned',\r\n        pageLimit: 10,\r\n        pageOffset: 0\r\n        //metadata: metadataFilter\r\n    };\r\n    pinata.pinList(filters).then((result) => {\r\n        //handle results here\r\n        console.log(result.rows[0].metadata.name);\r\n        console.log(result.rows[0].ipfs_pin_hash);\r\n\r\n        \r\n        setPina(result.rows)\r\n\r\n        // result.forEach((d)=>{\r\n        //   console.log(\"keycheck\",d.key)\r\n        //   //req.push(d.val())\r\n        // })\r\n\r\n\r\n\r\n\r\n        \r\n        console.log(\"gitresult\",result)\r\n\r\n        pinata.userPinnedDataTotal().then((result) => {\r\n          //handle results here\r\n          console.log(\"result\");\r\n          console.log(result);\r\n\r\n        }).catch((err) => {\r\n          //handle error here\r\n          console.log(err);\r\n      });\r\n\r\n\r\n    }).catch((err) => {\r\n        //handle error here\r\n        console.log(err);\r\n    });\r\n              \r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n    \r\n\r\n  //const axios = require('axios');\r\n\r\n  const [adds,setadds]=useState([]);\r\n  const [isWork, setisWork] = useState(false)\r\n  window.name = \"1\";\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [symbolget,setsymbolget] = useState()\r\n  const [currentSymbol, setCurrentSymbol] = useState('ETH')\r\n  const changeFruit = (newFruit) => {\r\n    setCurrentSymbol(newFruit)\r\n  }\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const togglePopup = () => {\r\n    setIsOpen(false);\r\n    window.location.reload(false)\r\n    \r\n  }\r\n\r\n  const [tTransferAlgo,setTransferAlgo]=useState();\r\n\r\n  let btn;\r\n  var accounts;\r\n  \r\n\r\n  const connectalgo = async () => {\r\n\r\n    let getchange='';\r\n    AlgoSigner.connect()\r\n    .then((d) => {\r\n\r\n      AlgoSigner.accounts({\r\n        ledger: 'TestNet'\r\n      })\r\n      .then((d) => {\r\n        \r\n      accounts = d;\r\n      getchange=accounts[0].address;\r\n\r\n      localStorage.setItem(\"algoaddress\",getchange);\r\n      console.log(\"algo address\",getchange)\r\n\r\n      if(getchange!=''){\r\n        btn= document.getElementById(\"bualgo\");\r\n      //btn.value = accounts[0]; // will just add a hidden value\r\n      //btn.innerHTML = accounts[0];\r\n      btn.innerHTML = getchange;\r\n      localStorage.setItem('myaddressalgo', getchange);\r\n      }\r\n      else{\r\n\r\n        var btns = document.getElementById(\"bualgo\");\r\n      //btns.value = accounts[0]; // will just add a hidden value\r\n      btns.innerHTML = \"NOT CONNECTED\";\r\n      localStorage.setItem('myaddressalgo', \"\");\r\n\r\n      }\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n      });\r\n\r\n      \r\n    })\r\n    .catch((e) => {\r\n      console.error(e);\r\n    });\r\n  \r\n    \r\n    \r\n    // let localalgo=localStorage.getItem(\"algoaddress\");\r\n\r\n    // if(localalgo !== \"\"){\r\n\r\n    //   //accounts[0\r\n    //   //document.getElementById(\"bu\").\r\n    //   //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n    //   btn= document.getElementById(\"bualgo\");\r\n    //   //btn.value = accounts[0]; // will just add a hidden value\r\n    //   //btn.innerHTML = accounts[0];\r\n    //   btn.innerHTML = localalgo;\r\n    //   localStorage.setItem('myaddressalgo', localalgo);\r\n    // }\r\n    // else{\r\n    //   //document.getElementById(\"bu\").remove(\"\");\r\n    //   //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n    //   var btns = document.getElementById(\"bualgo\");\r\n    //   //btns.value = accounts[0]; // will just add a hidden value\r\n    //   btns.innerHTML = \"NOT CONNECTED\";\r\n    //   localStorage.setItem('myaddressalgo', \"\");\r\n    // }\r\n\r\n};    \r\n//useEffect(()=>{connectalgo()},[])\r\n\r\n\r\nconst connectmm = async () => {\r\n    \r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n      if(accounts[0] !== \"\"){\r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        btn.innerHTML = accounts[0];\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n  var studentlist = [];\r\n  var stuset=[];\r\n  const [currentid, setCurrentid] = useState(\"\");\r\n  const [toaddress,setToaddress] = useState(\"\");\r\n  const [tid,setId] = useState(\"\");\r\n  const [tname,setName] = useState(\"\");\r\n  const [tsymbol,settSymbol] = useState(\"\");\r\n  const [ipfsHash,setIpfsHash] = useState(null);\r\n  const [ipf,setIpf] = useState(null);\r\n  const [tdes,setDes] = useState(\"\");\r\n  \r\n  var [buffer,setBuffer] = useState(\"\");\r\n  let tf;\r\n  let [Img,setImg] = useState(\"\")\r\n  let address=\"\";\r\n  //start\r\n\r\n\r\n  \r\n  const captureFile =(event) => {\r\n    event.stopPropagation()\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    let reader = new window.FileReader()\r\n    Compress.imageFileResizer(file, 300, 300, 'JPEG', 10, 0,\r\n    uri => {\r\n      console.log(\"iuri\",uri)\r\n      setImg(uri)\r\n    },\r\n    'base64'\r\n    );\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => convertToBuffer(reader);    \r\n    console.log(reader)\r\n    \r\n  };\r\n  //cons\r\n  // const reader=new window.FileReader();\r\n  // reader.readAsArrayBuffer(file)\r\nconst convertToBuffer = async(reader) => {\r\n  //file is converted to a buffer for upload to IPFS\r\n    const buffer = await Buffer.from(reader.result);\r\n  //set this buffer -using es6 syntax\r\n    setBuffer(buffer);\r\n\r\n    //onSubmitImage();\r\n};\r\nconst onSubmitImage = async (event) => {\r\n\r\n  console.log(\"onsubmitimage called\")\r\n // const buffer = Buffer.from(reader.result);\r\n  //set this buffer -using es6 syntax\r\n    //setBuffer(buffer);\r\n  //alert(\"capture\")\r\n  //event.preventDefault();\r\n //bring in user's metamask account address\r\n  //const accounts = await web3.eth.getAccounts();\r\n  //console.log('Sending from Metamask account: ' + accounts[0]);\r\n  // await ipfs.add(buffer, (err, ipfsHash) => {\r\n  //   console.log(err,ipfsHash);\r\n  //   console.log(\"buff\",buffer);\r\n  //   setIpfsHash(ipfsHash[0].hash);\r\n  //   console.log(ipfsHash[0].hash)\r\n  //   const CID = require('cids')\r\n  //   var cid = new CID(ipfsHash)\r\n  //   console.log( cid.toV1().toBaseEncodedString('base32'));\r\n  // }) \r\n\r\n  \r\n    await ipfs.add(buffer, (err, ipfsHash) => {\r\n      console.log(err,ipfsHash);\r\n      console.log(\"buff\",buffer);\r\n      setIpfsHash(ipfsHash[0].hash);\r\n      console.log(ipfsHash[0].hash)\r\n      const CID = require('cids')\r\n      var cid = new CID(ipfsHash[0].hash)\r\n      //let ccp=cid.toV1().toBaseEncodedString('base32');\r\n      console.log( cid.toV1().toBaseEncodedString('base32'));\r\n      setIpf(cid.toV1().toBaseEncodedString('base32'));      \r\n    });\r\n\r\n\r\n\r\n}; \r\n//end\r\n\r\n  \r\n\r\n   const onSubmitNFT = async (event) => {\r\n\r\n    //captureFile();\r\n\r\n    //convertToBuffer();\r\n\r\n    //onSubmitImage();\r\n\r\n    \r\n    setLoading(true);\r\n  \r\n    event.preventDefault();\r\n    \r\n      //new write below\r\n\r\n      const accounts = await web3.eth.getAccounts();\r\n    \r\n      var ta=tname;\r\n      //var tb=tsymbol;\r\n      var tb=currentSymbol;\r\n      var tc='https://ipfs.io/ipfs/'+ipfsHash;\r\n      var td=toaddress;\r\n      //var te=tid;\r\n      tf='https://ipfs.io/ipfs/'+ipfsHash;\r\n      let tdescription=tdes;\r\n\r\n    \r\n      //console.log('https://ipfs.io/ipfs/'+ccp)\r\n\r\n      \r\n      let ref23=fireDb.database().ref(`tokenkey`);      \r\n      let getfire=\"\";\r\n      let setfire=\"\";\r\n      fireDb.database().ref(`tokenkey`).on(\"value\", (data) => {\r\n        if (data) {\r\n           data.forEach((d) => {\r\n            getfire=d.val();\r\n          });        \r\n        }\r\n      });\r\n      //alert(\"\")\r\n      setfire= (parseInt(getfire)+parseInt(1));\r\n      //alert(\"your token\"+setfire+\"getfire\"+getfire);\r\n      ref23.update({id:setfire.toString()});\r\n      var te= parseInt(getfire);\r\n\r\n      if(Img === '')\r\n      {\r\n\r\n        alert(\"Please upload images...\")\r\n\r\n      }\r\n      else{\r\n        var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //alert(\"getdata from SYMBOL  \"+tb);\r\n    \r\n    if(tb===\"BNB\")\r\n    {\r\n\r\n      await lottery.deploy({\r\n    \r\n        data:'',\r\n        arguments: [ta,tb,Img,accounts[0],'0xD264b074c4a772E56536005Ae629518ee1bCc83a']        \r\n        })\r\n      .send({\r\n      from: accounts[0],\r\n      //gas: 6241620,//9088550,\r\n      //gasPrice:'10' //'1000000000'\r\n    })\r\n    .then(function(newContractInstance){\r\n      console.log(newContractInstance.options.address) // instance with the new contract address\r\n      localStorage.setItem('myData', newContractInstance.options.address);\r\n    })\r\n\r\n    const abi = [\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_receiver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"sendss\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      }\r\n    ];\r\n\r\n\r\n    address =  localStorage.getItem('myData');\r\n    \r\n    var geta=new web3.eth.Contract(abi,address);\r\n\r\n    localStorage.setItem('mynetwork',tb);\r\n    \r\n\r\n    //alert(\"check maticmum\"+address);\r\n    \r\n    \r\n    //let a=this.state.toaddress;\r\n    //let b=this.state.tokenid;\r\n    //let c=this.state.tokenuri;\r\n    \r\n    \r\n    \r\n    //alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\r\n    \r\n    event.preventDefault();\r\n    \r\n    //const accounts = await web3.eth.getAccounts();\r\n    \r\n    await geta.methods.mintWithTokenURI(accounts[0],te,Img).send({\r\n      from: accounts[0],\r\n\r\n      //gas: 21000\r\n      \r\n     }).on('transactionHash',function(hash){\r\n\r\n      console.log(\"hashget\",hash)\r\n                //start\r\n\r\n\r\n                    //this line firebase code added below\r\n                    //const accounts = await web3.eth.getAccounts();\r\n\r\n                    let getaddress=localStorage.getItem('myaddress')\r\n                    \r\n                    let getData=localStorage.getItem('myData')\r\n                    \r\n                        fireDb.database().ref(\"contractaddress\").child(accounts[0]).push(getData, (err) => {\r\n                          //   console.log(obj, \"obj\");\r\n                          if (err)\r\n                              console.log(err);\r\n                          else \r\n                        setCurrentid(\"\");\r\n                        });\r\n                      \r\n                    \r\n                        let nftname=fireDb.database().ref(`nftname`);\r\n                        const nftdb = nftname.push().key;\r\n                        nftname.child(nftdb).set({name:tname});\r\n\r\n                      \r\n\r\n                        let ref2=fireDb.database().ref(`imageref/${accounts[0]}`);\r\n\r\n                        let dateset=new Date().toDateString();\r\n\r\n                        console.log(\"dateget\",dateset)\r\n\r\n                        const db = ref2.push().key;\r\n\r\n                         \r\n                        console.log(\"dbcheck\",db)\r\n\r\n                        ref2.child(db).set({id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:db,userName:ta,userSymbol:tb,ipfsUrl:tf,ownerAddress:accounts[0],soldd:\"\",extra1:\"\",previousoaddress:\"\",datesets:dateset,whois:''})\r\n\r\n\r\n                        let ref23=fireDb.database().ref(`imagepurcre/${accounts[0]}`);\r\n                \r\n\r\n                        ref23.child(db).set({id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:db,userName:ta,userSymbol:tb,ipfsUrl:tf,ownerAddress:accounts[0],soldd:\"\",extra1:\"\",datesets:dateset,whois:''})\r\n\r\n\r\n                    \r\n          //end          \r\n     \r\n      })    \r\n\r\n    \r\n    \r\n    }else if(tb===\"ETH\"){\r\n\r\n\r\n      await lottery.deploy({\r\n    \r\n        data:'',\r\n        arguments: [ta,tb,Img,accounts[0],'0xD264b074c4a772E56536005Ae629518ee1bCc83a']        \r\n        })\r\n      .send({\r\n      from: accounts[0],\r\n      gas: 9088550,\r\n      gasPrice:1000000000\r\n    })\r\n    .then(function(newContractInstance){\r\n      console.log(newContractInstance.options.address) // instance with the new contract address\r\n      localStorage.setItem('myData', newContractInstance.options.address);\r\n    })\r\n     \r\n    const abi = [\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_receiver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"sendss\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      }\r\n    ];\r\n\r\n\r\n    address =  localStorage.getItem('myData');\r\n    \r\n    var geta=new web3.eth.Contract(abi,address);\r\n\r\n    localStorage.setItem('mynetwork',tb);\r\n    \r\n\r\n    //alert(\"check maticmum\"+address);\r\n    \r\n    \r\n    //let a=this.state.toaddress;\r\n    //let b=this.state.tokenid;\r\n    //let c=this.state.tokenuri;\r\n    \r\n    \r\n    \r\n    //alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\r\n    \r\n    event.preventDefault();\r\n    \r\n    //const accounts = await web3.eth.getAccounts();\r\n    \r\n    await geta.methods.mintWithTokenURI(accounts[0],te,Img).send({\r\n      from: accounts[0],\r\n\r\n      //gas: 21000\r\n      \r\n     }).on('transactionHash',function(hash){\r\n\r\n      console.log(\"hashget\",hash)\r\n                //start\r\n\r\n\r\n                    //this line firebase code added below\r\n                    //const accounts = await web3.eth.getAccounts();\r\n\r\n                    let getaddress=localStorage.getItem('myaddress')\r\n                    \r\n                    let getData=localStorage.getItem('myData')\r\n                    \r\n                        fireDb.database().ref(\"contractaddress\").child(accounts[0]).push(getData, (err) => {\r\n                          //   console.log(obj, \"obj\");\r\n                          if (err)\r\n                              console.log(err);\r\n                          else \r\n                        setCurrentid(\"\");\r\n                        });\r\n                      \r\n                    \r\n                        let nftname=fireDb.database().ref(`nftname`);\r\n                        const nftdb = nftname.push().key;\r\n                        nftname.child(nftdb).set({name:tname});\r\n\r\n                      \r\n\r\n                        let ref2=fireDb.database().ref(`imageref/${accounts[0]}`);\r\n\r\n                        let dateset=new Date().toDateString();\r\n\r\n                        console.log(\"dateget\",dateset)\r\n\r\n                        const db = ref2.push().key;\r\n\r\n                         \r\n                        console.log(\"dbcheck\",db)\r\n\r\n                        ref2.child(db).set({id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:db,userName:ta,userSymbol:tb,ipfsUrl:tf,ownerAddress:accounts[0],soldd:\"\",extra1:\"\",previousoaddress:\"\",datesets:dateset,whois:''})\r\n\r\n\r\n                        let ref23=fireDb.database().ref(`imagepurcre/${accounts[0]}`);\r\n                \r\n\r\n                        ref23.child(db).set({id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:db,userName:ta,userSymbol:tb,ipfsUrl:tf,ownerAddress:accounts[0],soldd:\"\",extra1:\"\",datesets:dateset,whois:''})\r\n\r\n\r\n                      \r\n                    \r\n                        //fireDb.database().ref(`imageref/${accounts[0]}`).child(db).push({\r\n                          //id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:\"\"\r\n                        //});\r\n                    \r\n          //end          \r\n\r\n                      })\r\n\r\n    }\r\n    else if(tb === \"Maticmum\"){\r\n\r\n      alert(\"Maticmum\");\r\n\r\n        alert(\"acc\"+accounts[0]);\r\n\r\n      await lottery.deploy({\r\n    \r\n        data:'',\r\n        arguments: [ta,tb,Img,accounts[0],'0xD264b074c4a772E56536005Ae629518ee1bCc83a']        \r\n        })\r\n      .send({\r\n      from: accounts[0],\r\n      //gas: 6241620,//9088550,\r\n      //gasPrice:'20000000000' //'1000000000'\r\n    })\r\n    .then(function(newContractInstance){\r\n      console.log(newContractInstance.options.address) // instance with the new contract address\r\n      localStorage.setItem('myData', newContractInstance.options.address);\r\n    })\r\n\r\n\r\n    const abi = [\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_receiver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"sendss\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      }\r\n    ];\r\n\r\n\r\n    address =  localStorage.getItem('myData');\r\n    \r\n    var geta=new web3.eth.Contract(abi,address);\r\n\r\n    localStorage.setItem('mynetwork',tb);\r\n    \r\n\r\n    //alert(\"check maticmum\"+address);\r\n    \r\n    \r\n    //let a=this.state.toaddress;\r\n    //let b=this.state.tokenid;\r\n    //let c=this.state.tokenuri;\r\n    \r\n    \r\n    \r\n    //alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\r\n    \r\n    event.preventDefault();\r\n    \r\n    //const accounts = await web3.eth.getAccounts();\r\n    \r\n    await geta.methods.mintWithTokenURI(accounts[0],te,Img).send({\r\n      from: accounts[0],\r\n\r\n      //gas: 21000\r\n      \r\n     }).on('transactionHash',function(hash){\r\n\r\n      console.log(\"hashget\",hash)\r\n                //start\r\n\r\n\r\n                    //this line firebase code added below\r\n                    //const accounts = await web3.eth.getAccounts();\r\n\r\n                    let getaddress=localStorage.getItem('myaddress')\r\n                    \r\n                    let getData=localStorage.getItem('myData')\r\n                    \r\n                        fireDb.database().ref(\"contractaddress\").child(accounts[0]).push(getData, (err) => {\r\n                          //   console.log(obj, \"obj\");\r\n                          if (err)\r\n                              console.log(err);\r\n                          else \r\n                        setCurrentid(\"\");\r\n                        });\r\n                      \r\n                    \r\n                        let nftname=fireDb.database().ref(`nftname`);\r\n                        const nftdb = nftname.push().key;\r\n                        nftname.child(nftdb).set({name:tname});\r\n\r\n                      \r\n\r\n                        let ref2=fireDb.database().ref(`imageref/${accounts[0]}`);\r\n\r\n                        let dateset=new Date().toDateString();\r\n\r\n                        console.log(\"dateget\",dateset)\r\n\r\n                        const db = ref2.push().key;\r\n\r\n                         \r\n                        console.log(\"dbcheck\",db)\r\n\r\n                        ref2.child(db).set({id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:db,userName:ta,userSymbol:tb,ipfsUrl:tf,ownerAddress:accounts[0],soldd:\"\",extra1:\"\",previousoaddress:\"\",datesets:dateset,whois:''})\r\n\r\n\r\n                        let ref23=fireDb.database().ref(`imagepurcre/${accounts[0]}`);\r\n                \r\n\r\n                        ref23.child(db).set({id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:db,userName:ta,userSymbol:tb,ipfsUrl:tf,ownerAddress:accounts[0],soldd:\"\",extra1:\"\",datesets:dateset,whois:''})\r\n\r\n\r\n          //end          \r\n\r\n                      })\r\n\r\n    }\r\n    else if(tb === \"Algos\"){\r\n      //start\r\n\r\n  const algosdk = require('algosdk');\r\n  var account1_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\";\r\n  var account2_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\";\r\n  //var account3_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\";\r\n  // var account3_mnemonic = \"runway genuine lazy assist ticket junior pilot flush rocket swallow ripple risk alien mobile chat recall run quiz cause weekend range april vicious about spoon\";\r\n  var recoveredAccount1 = algosdk.mnemonicToSecretKey(account1_mnemonic);\r\n  var recoveredAccount2 = algosdk.mnemonicToSecretKey(account2_mnemonic);\r\n  //var recoveredAccount3 = algosdk.mnemonicToSecretKey(account3_mnemonic);\r\n  //alert(arr[0]);\r\n  // var recoveredAccount1 = arr[0];\r\n  // var recoveredAccount2 = arr[0];\r\n  // var recoveredAccount3 = arr[0];\r\n  //console.log(recoveredAccount3.addr);\r\n  const baseServer = \"https://testnet-algorand.api.purestake.io/ps2\";\r\n  const port = \"\";\r\n  //B3SU4KcVKi94Jap2VXkK83xx38bsv95K5UZm2lab\r\n  const token = {\r\n  \r\n      'X-API-key' : 'SVsJKi8vBM1RwK1HEuwhU20hYmwFJelk8bagKPin',\r\n  }\r\n  let algodclient = new algosdk.Algodv2(token, baseServer, port);  \r\n  let response;\r\n  let lastround;\r\n// Function used to wait for a tx confirmation\r\nconst waitForConfirmation = async function (algodclient, txId) {\r\n  console.log(\"working return 133\",txId)\r\n        console.log(\"workingalgo\"+algodclient);\r\n    response = await algodclient.status().do();\r\n    lastround = response[\"last-round\"];\r\n    while (true) {\r\n        const pendingInfo = await algodclient.pendingTransactionInformation(txId).do();\r\n        if (pendingInfo[\"confirmed-round\"] !== null && pendingInfo[\"confirmed-round\"] > 0) {\r\n            //Got the completed Transaction\r\n            console.log(\"Transaction \" + txId + \" confirmed in round \" + pendingInfo[\"confirmed-round\"]);\r\n            break;\r\n        }\r\n        lastround++;\r\n        await algodclient.statusAfterBlock(lastround).do();\r\n    }\r\n};\r\n\r\nlet accountInfo;\r\n// Function used to print created asset for account and assetid\r\nconst printCreatedAsset = async function (algodclient, account, assetid) {\r\n    // note: if you have an indexer instance available it is easier to just use this\r\n    //     let accountInfo = await indexerClient.searchAccounts()\r\n    //    .assetID(assetIndex).do();\r\n    // and in the loop below use this to extract the asset for a particular account\r\n    // accountInfo['accounts'][idx][account]);\r\n    accountInfo = await algodclient.accountInformation(account).do();\r\n    for (let idx = 0; idx < accountInfo['created-assets'].length; idx++) {\r\n        let scrutinizedAsset = accountInfo['created-assets'][idx];\r\n        if (scrutinizedAsset['index'] === assetid) {\r\n            console.log(\"AssetID = \" + scrutinizedAsset['index']);\r\n            let myparms = JSON.stringify(scrutinizedAsset['params'], undefined, 2);\r\n            console.log(\"parms = \" + myparms);\r\n            break;\r\n        }\r\n    }\r\n};\r\n// Function used to print asset holding for account and assetid\r\nconst printAssetHolding = async function (algodclient, account, assetid) {\r\n    // note: if you have an indexer instance available it is easier to just use this\r\n    //     let accountInfo = await indexerClient.searchAccounts()\r\n    //    .assetID(assetIndex).do();\r\n    // and in the loop below use this to extract the asset for a particular account\r\n    // accountInfo['accounts'][idx][account]);\r\n    let accountInfo = await algodclient.accountInformation(account).do();\r\n    for (let idx = 0; idx < accountInfo['assets'].length; idx++) {\r\n        let scrutinizedAsset = accountInfo['assets'][idx];\r\n        if (scrutinizedAsset['asset-id'] === assetid) {\r\n            let myassetholding = JSON.stringify(scrutinizedAsset, undefined, 2);\r\n            console.log(\"assetholdinginfo = \" + myassetholding);\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\n(async () => {\r\n    // Asset Creation:\r\n    // The first transaciton is to create a new asset\r\n    // Get last round and suggested tx fee\r\n    // We use these to get the latest round and tx fees\r\n    // These parameters will be required before every \r\n    // Transaction\r\n    // We will account for changing transaction parameters\r\n    // before every transaction in this example\r\n    let params = await algodclient.getTransactionParams().do();\r\n    //comment out the next two lines to use suggested fee\r\n    params.fee = 1000;\r\n    params.flatFee = true;\r\n    console.log(params);\r\n    let note = undefined; // arbitrary data to be stored in the transaction; here, none is stored\r\n    // Asset creation specific parameters\r\n    // The following parameters are asset specific\r\n    // Throughout the example these will be re-used. \r\n    // We will also change the manager later in the example\r\n    let addr = recoveredAccount1.addr;\r\n    // Whether user accounts will need to be unfrozen before transacting    \r\n    let defaultFrozen = false;\r\n    // integer number of decimals for asset unit calculation\r\n    let decimals = 0;\r\n    // total number of this asset available for circulation   \r\n    let totalIssuance = 1;\r\n    // Used to display asset units to user    \r\n    let unitName = currentSymbol;\r\n    // Friendly name of the asset    \r\n    let assetName = tname;\r\n    // Optional string pointing to a URL relating to the asset\r\n    let assetURL = \"http://someurl\";\r\n    // Optional hash commitment of some sort relating to the asset. 32 character length.\r\n    let assetMetadataHash = \"16efaa3924a6fd9d3a4824799a4ac65d\";\r\n    // The following parameters are the only ones\r\n    // that can be changed, and they have to be changed\r\n    // by the current manager\r\n    // Specified address can change reserve, freeze, clawback, and manager\r\n    let manager = recoveredAccount2.addr;\r\n    // Specified address is considered the asset reserve\r\n    // (it has no special privileges, this is only informational)\r\n    let reserve = recoveredAccount2.addr;\r\n    // Specified address can freeze or unfreeze user asset holdings \r\n    let freeze = recoveredAccount2.addr;\r\n    // Specified address can revoke user asset holdings and send \r\n    // them to other addresses    \r\n    let clawback = recoveredAccount2.addr;\r\n\r\n    // signing and sending \"txn\" allows \"addr\" to create an asset\r\n    let txn = algosdk.makeAssetCreateTxnWithSuggestedParams(addr, note,\r\n         totalIssuance, decimals, defaultFrozen, manager, reserve, freeze,\r\n        clawback, unitName, assetName, assetURL, assetMetadataHash, params);\r\n\r\n        console.log(\"txnget\",txn);\r\n\r\n    let rawSignedTxn = txn.signTxn(recoveredAccount1.sk)\r\n    console.log(\"rawget\",rawSignedTxn);\r\n    let tx = (await algodclient.sendRawTransaction(rawSignedTxn).do());\r\n    console.log(\"Transactionset\" + tx.txId);\r\n    let assetID = null;\r\n    // wait for transaction to be confirmed\r\n    await waitForConfirmation(algodclient, tx.txId);\r\n    // Get the new asset's information from the creator account\r\n    \r\n        \r\n    let ptx = await algodclient.pendingTransactionInformation(tx.txId).do();\r\n    assetID = ptx[\"asset-index\"];\r\n    console.log(\"ptx\" + ptx);\r\n    console.log(\"AssetID = \" + assetID);\r\n    \r\n    await printCreatedAsset(algodclient, recoveredAccount1.addr, assetID);\r\n    await printAssetHolding(algodclient, recoveredAccount1.addr, assetID);\r\n    \r\n    \r\n    params = await algodclient.getTransactionParams().do();\r\n    //comment out the next two lines to use suggested fee\r\n    params.fee = 1000;\r\n    params.flatFee = true;\r\n    // Asset configuration specific parameters\r\n    // all other values are the same so we leave \r\n    // Them set.\r\n    // specified address can change reserve, freeze, clawback, and manager\r\n    manager = recoveredAccount1.addr;\r\n\r\n    // Note that the change has to come from the existing manager\r\n    let ctxn = algosdk.makeAssetConfigTxnWithSuggestedParams(recoveredAccount2.addr, note, \r\n        assetID, manager, reserve, freeze, clawback, params);\r\n\r\n    // This transaction must be signed by the current manager\r\n    rawSignedTxn = ctxn.signTxn(recoveredAccount2.sk)\r\n    let ctx = (await algodclient.sendRawTransaction(rawSignedTxn).do());\r\n    console.log(\"Transaction : \" + ctx.txId);\r\n    // wait for transaction to be confirmed\r\n    await waitForConfirmation(algodclient, ctx.txId);\r\n\r\n    // Get the asset information for the newly changed asset\r\n    // use indexer or utiltiy function for Account info\r\n    // The manager should now be the same as the creator\r\n    await printCreatedAsset(algodclient, recoveredAccount1.addr, assetID);\r\n  \r\n    let refalgo=fireDb.database().ref(`algorandData/${recoveredAccount1.addr}`);\r\n    let dateset=new Date().toDateString();\r\n    console.log(\"dateget\",dateset)\r\n    const db = refalgo.push().key;\r\n    console.log(\"dbcheck\",db)\r\n    refalgo.child(db).set({imageurl:Img,createmnemonic:account1_mnemonic,algocreator:recoveredAccount1.addr,algotrasnfer:\"\",algoid:assetID,algoname:tname,algosymbol:currentSymbol,txnId:tx.txId,AssetIdset:assetID,transfer:\"\",status:\"\",price:\"\",keyId:db,algodclients:algodclient,responses:response,lastrounds:lastround,accountInfos:accountInfo});\r\nsetLoading(false);\r\nsetIsOpen(true);\r\n})().then(d=>{\r\n  setLoading(false);\r\n  setIsOpen(true);\r\n}).catch(e => {\r\n    console.log(e);\r\n    console.trace();\r\n});\r\n\r\n    }  \r\n}    \r\n}\r\n\r\n\r\n    \r\n  return (\r\n    <div className=\"App\"  >\r\n<div style={{backgroundColor:'white',height:'70px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n{/* <div style={{backgroundColor:'white',height:'43px',width:'1017px',marginLeft:'20px',marginBlock:'15px', display:'-webkit-inline-flex'}}> */}\r\n<div style={{backgroundColor:'white',height:'43px',width:'1050px',marginLeft:'150px',marginBlock:'15px'}}>\r\n<Link\r\n              to=\"/\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Home\r\n              </button>\r\n              {' '}\r\n</Link>\r\n\r\n              \r\n\r\n\r\n            <Link\r\n              to=\"/explore\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Explore\r\n              </button>\r\n\r\n\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/followingpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               How it works\r\n              </button>\r\n\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Nft\");\r\n                // }}\r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {' '}\r\n              \r\n              <button\r\n              id=\"bualgo\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectalgo}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {' '}\r\n\r\n              {/* <button onClick={testax}>LTest</button> */}\r\n\r\n\r\n\r\n\r\n              <br></br>\r\n              <Link\r\nto=\"/demoex\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n            \r\n              >\r\n               test\r\n              </button>\r\n              </Link>\r\n<br></br>\r\n      \r\n\r\n<br></br>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n<center>\r\n\r\n\r\n<div style={{backgroundColor:'white',height:'600px',width:'500px'}}>\r\n\r\n  \r\n\r\n\r\n  <br></br>\r\n  <h1>CREATE NFT-TOKEN</h1>\r\n\r\n  <br></br>\r\n\r\n<form onSubmit={onSubmitNFT} id=\"create-course-form\" >\r\n\r\n<label for=\"name\">NFT  Name    </label>\r\n\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n<input\r\nid=\"nameid\"\r\n  type='text'\r\n  name=\"tname\"\r\n  required\r\n  onChange={event => setName(event.target.value)}\r\n  \r\n/>\r\n<br></br>\r\n      <br></br>\r\n\r\n\t  <label for=\"symbol\">NFT  Symbol    </label>\r\n\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n\r\n    <select style={{backgroundColor:'white',height:'20px',width:'160px'}}\r\n        onChange={(event) => changeFruit(event.target.value)}\r\n        value={currentSymbol}>\r\n\r\n        <option value=\"ETH\">ETH     </option> \r\n        <option value=\"BNB\">BNB     </option>\r\n        <option value=\"Maticmum\">MATICMUM </option>\r\n        <option value=\"Algos\">ALGOS</option>\r\n      </select>\r\n{/* <input\r\n  id=\"symbolid\"\r\n  type='text'\r\n  name=\"tsymbol\"\r\n  required\r\n  onChange={event => settSymbol( event.target.value)}\r\n  \r\n/> */}\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n<label for=\"name\">NFT  Description    </label>\r\n\t  &nbsp;&nbsp;\r\n<input\r\nid=\"descriid\"\r\n  type='text'\r\n  name=\"tdescri\"\r\n  required\r\n  onChange={event => setDes(event.target.value)}\r\n  \r\n/>\r\n<br></br>\r\n      <br></br>\r\n\r\n\r\n\r\n{/* <label for=\"id\">NFT Token-Id   {' '}   </label> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n<input\r\nid=\"idid\"\r\n  type='text'\r\n  name=\"tid\"\r\n  required\r\n  onChange={event => setId( event.target.value)}\r\n  \r\n/>\r\n\r\n<br></br>\r\n<br></br> */}\r\n\r\n\r\n{/* <form onSubmit={onSubmitImage}> */}\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label for=\"images\">Choose Your Image     </label>\r\n            \r\n            <input style={{backgroundColor:'white',height:'22px',width:'230px'}}\r\n             name=\"tfile\" id=\"fileid\" type = \"file\" onChange = {captureFile} required />\r\n\r\n\r\n<button \r\n             onClick={onSubmitImage}\r\n             type=\"submit\"> \r\n             Upload Image NFT\r\n             </button>\r\n\r\n\t\t\t\r\n             \r\n\t\t\t <br></br>\r\n\t\t\t <br></br>\r\n\t\t\t <br></br>\r\n\r\n              \r\n  \r\n  <br></br><br></br>\r\n     \r\n  <br></br><br></br>\r\n\r\n  <button\r\n                type=\"submit\"> \r\n                Create NFT\r\n                </button>\r\n\r\n\r\n</form>\r\n\r\n\r\n\r\n\r\n{/* <button \r\n             onClick={convertToBuffer}\r\n             type=\"submit\"> \r\n             Buffer NFTs\r\n             </button> */}\r\n\r\n\r\n\r\n{/* <button \r\n             onClick={captureFile2}\r\n             type=\"submit\"> \r\n             Capture 2\r\n             </button> */}\r\n\r\n{/* <button type=\"submit\" onClick={CheckAlgoSigner}> Check NFT Algorand </button> */}\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n\r\n{/* <input\r\n  type='text'\r\n  name=\"tTransferAlgo\"\r\n  required\r\n  onChange={event => setTransferAlgo( event.target.value)}\r\n  \r\n/> */} \r\n\r\n<br></br>\r\n<br></br>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n<button type=\"submit\" onClick={pinFileToIPFS}> Test Ipfs Algorand </button>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n<button type=\"submit\" onClick={getpinata}> Get Ipfs Algorand </button>\r\n\r\n\r\n{/* <div style={{backgroundColor:'red',height:'100px',width:'500px'}}> */}\r\n\r\n{isOpen && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your token has been deployed and mint successfully......</p>\r\n        <button type=\"button\" onClick={togglePopup}>close</button>\r\n      </>}\r\n      // handleClose={togglePopup}\r\n    />}\r\n</div>\r\n</center>\r\n\r\n{isLoading ? <div><h4>Fetching........</h4>\r\n              <img style={{width:\"200px\",height:\"200px\"}} src=\"/4V0b.gif\" alt=\"\"/></div>:' '}\r\n    \r\n</div>      \r\n    \r\n  );\r\n}\r\nexport default Nft;\r\n"]},"metadata":{},"sourceType":"module"}