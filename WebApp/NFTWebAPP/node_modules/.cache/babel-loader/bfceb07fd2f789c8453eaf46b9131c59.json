{"ast":null,"code":"const IpfsExam = () => {\n  const express = require('express');\n\n  const app = express();\n\n  const fs = require('fs');\n\n  var multer = require('multer');\n\n  var upload = multer({\n    dest: 'uploads/'\n  });\n\n  var ipfsAPI = require('ipfs-api');\n\n  var ipfs = ipfsAPI('ipfs.infura.io', '5001', {\n    protocol: 'https'\n  });\n  app.get('/', function (req, res) {\n    //   res.send('Hello World')\n    res.sendFile(__dirname + '/public/index.html');\n  });\n  app.post('/profile', upload.single('avatar'), function (req, res, next) {\n    // req.file is the `avatar` file\n    // req.body will hold the text fields, if there were any\n    console.log(req.file);\n    var data = new Buffer(fs.readFileSync(req.file.path));\n    ipfs.add(data, function (err, file) {\n      if (err) {\n        console.log(err);\n      }\n\n      console.log(file);\n      res.send(file[0].hash);\n    });\n  });\n  app.get('/download/:ID', function (req, res) {\n    console.log(req.params.ID);\n    res.redirect('https://ipfs.io/ipfs/' + req.params.ID);\n  });\n};\n\n_c = IpfsExam;\nexport default IpfsExam; //app.listen(3000)\n\nvar _c;\n\n$RefreshReg$(_c, \"IpfsExam\");","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/src/IpfsExam.js"],"names":["IpfsExam","express","require","app","fs","multer","upload","dest","ipfsAPI","ipfs","protocol","get","req","res","sendFile","__dirname","post","single","next","console","log","file","data","Buffer","readFileSync","path","add","err","send","hash","params","ID","redirect"],"mappings":"AAAA,MAAMA,QAAQ,GAAC,MAAI;AAGnB,QAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,QAAMC,GAAG,GAAGF,OAAO,EAAnB;;AAEA,QAAMG,EAAE,GAAEF,OAAO,CAAC,IAAD,CAAjB;;AAEA,MAAIG,MAAM,GAAIH,OAAO,CAAC,QAAD,CAArB;;AACA,MAAII,MAAM,GAAGD,MAAM,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAnB;;AAEA,MAAIC,OAAO,GAAGN,OAAO,CAAC,UAAD,CAArB;;AACA,MAAIO,IAAI,GAAGD,OAAO,CAAC,gBAAD,EAAmB,MAAnB,EAA2B;AAACE,IAAAA,QAAQ,EAAE;AAAX,GAA3B,CAAlB;AAEAP,EAAAA,GAAG,CAACQ,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACjC;AACIA,IAAAA,GAAG,CAACC,QAAJ,CAAaC,SAAS,GAAC,oBAAvB;AACH,GAHD;AAKAZ,EAAAA,GAAG,CAACa,IAAJ,CAAS,UAAT,EAAqBV,MAAM,CAACW,MAAP,CAAc,QAAd,CAArB,EAA8C,UAAUL,GAAV,EAAeC,GAAf,EAAoBK,IAApB,EAA0B;AACpE;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACS,IAAhB;AACA,QAAIC,IAAI,GAAG,IAAIC,MAAJ,CAAWnB,EAAE,CAACoB,YAAH,CAAgBZ,GAAG,CAACS,IAAJ,CAASI,IAAzB,CAAX,CAAX;AACAhB,IAAAA,IAAI,CAACiB,GAAL,CAASJ,IAAT,EAAe,UAAUK,GAAV,EAAcN,IAAd,EAAmB;AAC9B,UAAGM,GAAH,EAAO;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH;;AACDR,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACAR,MAAAA,GAAG,CAACe,IAAJ,CAASP,IAAI,CAAC,CAAD,CAAJ,CAAQQ,IAAjB;AACH,KAND;AAQD,GAbH;AAeE1B,EAAAA,GAAG,CAACQ,GAAJ,CAAQ,eAAR,EAAwB,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACrCM,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACkB,MAAJ,CAAWC,EAAvB;AACAlB,IAAAA,GAAG,CAACmB,QAAJ,CAAa,0BAAwBpB,GAAG,CAACkB,MAAJ,CAAWC,EAAhD;AACH,GAHD;AAKD,CAvCD;;KAAM/B,Q;AAwCN,eAAeA,QAAf,C,CACA","sourcesContent":["const IpfsExam=()=>{\r\n\r\n\r\nconst express = require('express')\r\nconst app = express()\r\n\r\nconst fs =require('fs');\r\n\r\nvar multer  = require('multer')\r\nvar upload = multer({ dest: 'uploads/' })\r\n\r\nvar ipfsAPI = require('ipfs-api')\r\nvar ipfs = ipfsAPI('ipfs.infura.io', '5001', {protocol: 'https'})\r\n \r\napp.get('/', function (req, res) {\r\n//   res.send('Hello World')\r\n    res.sendFile(__dirname+'/public/index.html');\r\n})\r\n\r\napp.post('/profile', upload.single('avatar'), function (req, res, next) {\r\n    // req.file is the `avatar` file\r\n    // req.body will hold the text fields, if there were any\r\n    console.log(req.file);\r\n    var data = new Buffer(fs.readFileSync(req.file.path));\r\n    ipfs.add(data, function (err,file){\r\n        if(err){\r\n            console.log(err);\r\n        }\r\n        console.log(file);\r\n        res.send(file[0].hash);\r\n    })\r\n\r\n  })\r\n\r\n  app.get('/download/:ID',function(req,res){\r\n      console.log(req.params.ID);\r\n      res.redirect('https://ipfs.io/ipfs/'+req.params.ID);\r\n  })\r\n \r\n}\r\nexport default IpfsExam;\r\n//app.listen(3000)"]},"metadata":{},"sourceType":"module"}