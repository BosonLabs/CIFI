{"ast":null,"code":"var _jsxFileName = \"C:\\\\demoAlgo\\\\smart-contracts\\\\devrel\\\\algosigner-react\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\NewIpfs.js\";\n// /* global AlgoSigner */\n// import firebase from \"firebase\";\n// import fireDb from \"./firebase\";\n// import Popup from './Popup';\n// import axios from 'axios';\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewIpfs = () => {\n  const pinataSDK = require('@pinata/sdk');\n\n  const pinata = pinataSDK('yourPinataApiKey', 'yourPinataSecretApiKey');\n\n  const loadDoc = () => {\n    alert(\"new\");\n    pinata.testAuthentication().then(result => {\n      //handle successful authentication here\n      console.log(result);\n    }).catch(err => {\n      //handle error here\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white'\n      },\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: loadDoc,\n        children: \"Algorand \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NewIpfs;\nexport default NewIpfs;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewIpfs\");","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/src/NewIpfs.js"],"names":["React","useState","useEffect","useCallback","NewIpfs","pinataSDK","require","pinata","loadDoc","alert","testAuthentication","then","result","console","log","catch","err","color"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAmCC,WAAnC,QAAsD,OAAtD;;;AACA,MAAMC,OAAO,GAAC,MAAI;AAElB,QAAMC,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,QAAMC,MAAM,GAAGF,SAAS,CAAC,kBAAD,EAAqB,wBAArB,CAAxB;;AACA,QAAMG,OAAO,GAAC,MAAI;AAEdC,IAAAA,KAAK,CAAC,KAAD,CAAL;AAEAF,IAAAA,MAAM,CAACG,kBAAP,GAA4BC,IAA5B,CAAkCC,MAAD,IAAY;AACzC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KAHD,EAGGG,KAHH,CAGUC,GAAD,IAAS;AACd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAND;AASH,GAbD;;AAiBE,sBACE;AAAA,4BAEI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAK,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAC;AAAP,OAAZ;AAAA,6BAEF;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAET,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFE;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjCD;;KAAMJ,O;AAkCN,eAAeA,OAAf","sourcesContent":["// /* global AlgoSigner */\r\n// import firebase from \"firebase\";\r\n// import fireDb from \"./firebase\";\r\n// import Popup from './Popup';\r\n// import axios from 'axios';\r\nimport React, { useState,useEffect,useCallback } from \"react\";\r\nconst NewIpfs=()=>{\r\n\r\nconst pinataSDK = require('@pinata/sdk');\r\nconst pinata = pinataSDK('yourPinataApiKey', 'yourPinataSecretApiKey');\r\nconst loadDoc=()=>{\r\n\r\n    alert(\"new\");\r\n\r\n    pinata.testAuthentication().then((result) => {\r\n        //handle successful authentication here\r\n        console.log(result);\r\n    }).catch((err) => {\r\n        //handle error here\r\n        console.log(err);\r\n    });\r\n\r\n\r\n}\r\n\r\n\r\n  \r\n  return (\r\n    <div >\r\n\r\n        <h1 style={{color:'white'}}>hello</h1>\r\n\r\n        <div style={{color:'white'}}>\r\n\r\n      <button type=\"submit\" onClick={loadDoc}>Algorand </button>\r\n      </div>\r\n      \r\n  </div>\r\n  );\r\n}\r\nexport default NewIpfs;"]},"metadata":{},"sourceType":"module"}