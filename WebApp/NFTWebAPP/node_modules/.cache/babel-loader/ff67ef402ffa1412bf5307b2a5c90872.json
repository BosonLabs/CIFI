{"ast":null,"code":"var _jsxFileName = \"D:\\\\BosonLabsNFTPROJECT\\\\nftsecondprabha\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\Explore.js\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport React, { useState, useEffect, useCallback } from \"react\"; //import history from \"./utils/history\";\n\nimport web3 from './web3'; // Router, Route, Switch,\n\nimport { Link } from \"react-router-dom\"; //import Myitem from \"./Myitem\";\n//import Nft from \"./Nft\";\n//import firebase from \"./firebase\";\n\nimport fireDb from \"./firebase\"; //import Followingpage from \"./Followingpage\";\n//import Activitypage from \"./Activitypage\";\n//import Howitworkpage from \"./Howitworkpage\";\n//import Communitypage from \"./Communitypage\";\n\nimport firebase from \"firebase\";\nimport { abi } from './datas'; //import Mypurchasepage from './Mypurchasepage'\n\nimport { tra } from './trans'; //import Createandpurchasepage from './Createandpurchasepage'\n//import Receivedpage from './Receivedpage';\n\nimport Popup from './Popup';\nimport { Offline, Online } from \"react-detect-offline\";\nimport Footer from './footer';\nimport Logo from \"./logo.svg\"; //import JSONDATA from './MOCK_DATA.json';\n// import SearchBar from './SearchBar';\n//import CountryList from './CountryList';\n\nimport \"./App.css\";\nimport DarkMode from \"./DarkMode\"; //import * as reach from '@reach-sh/stdlib/ALGO';\n\nimport Algorand from \"algosdk\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Explore = ({\n  handleLogout\n}) => {\n  _s();\n\n  // const [initialData,setinitialDate]=useState('Sellers');\n  //\n  const [searchTerm, setSearchTerm] = useState('');\n  console.log('returnsearch', searchTerm); // const [input, setInput] = useState('');\n  // const [countryListDefault, setCountryListDefault] = useState();\n  // const [countryList, setCountryList] = useState();\n  // const fetchData = async () => {\n  //   return await fetch('https://restcountries.eu/rest/v2/all')\n  //     .then(response => response.json())\n  //     .then(data => {\n  //        setCountryList(data) \n  //        setCountryListDefault(data)\n  //      });}\n  // const updateInput = async (input) => {\n  //    const filtered = countryListDefault.filter(country => {\n  //     return country.name.toLowerCase().includes(input.toLowerCase())\n  //    })\n  //    setInput(input);\n  //    setCountryList(filtered);\n  // }\n  // useEffect( () => {fetchData()},[]);\n  //\n\n  const [selected, setSelected] = React.useState(\"Sellers\");\n  const [selecteds, setSelecteds] = React.useState(\"1\");\n\n  const changeSelectOptionHandler = event => {\n    setSelected(event.target.value);\n  };\n\n  const changeSelectOptionHandlers = event => {\n    setSelecteds(event.target.value);\n  }; // const [currentSymbol, setCurrentSymbol] = useState('Sellers')\n  // const changeFruit = (newFruit) => {\n  //   setCurrentSymbol(newFruit)\n  // }\n  // const [currentSymbols, setCurrentSymbols] = useState('1 day')\n  // const changeFruits = (newFruit) => {\n  //   setCurrentSymbols(newFruit)\n  // }\n\n\n  const [isOpenFeed, setIsOpenFeed] = useState(false);\n\n  const togglePopupFeed = () => {\n    setIsOpenFeed(false); //window.location.reload(false)    \n  };\n\n  const [Feedbackc, setFeedbackc] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(false); // window.location.reload(false)    \n  }; //fb   \n  //const [currentid, setCurrentid] = useState(\"\");\n  //const [afternames,setAfternames] = useState([]);\n  //const [name,setnames] = useState([]);\n  //const [tid,setId] = useState(\"\"); \n  //const [getAddressDb,setGetAddressDb]=useState([]);\n  //const [getAddressDbs,setGetAddressDbs]=useState([]);\n  //console.log(\"initialgetaddresss\",getAddressDbs)\n  //console.log(\"initialgetaddress\",getAddressDb)\n  //console.log(\"ipname\",name)\n\n\n  const [getImgbuyers, setgetImgbuyers] = useState([]);\n  const [getImbuyers, setgetImbuyers] = useState([]); //\n\n  console.log(\"firb1\", getImgbuyers);\n  console.log(\"firb2\", getImbuyers);\n  const [getImgsellers, setgetImgsellers] = useState([]);\n  const [getImsellers, setgetImsellers] = useState([]); //\n\n  console.log(\"firs1\", getImgsellers);\n  console.log(\"firs2\", getImsellers);\n  const [getImgreff, setgetImgreff] = useState([]);\n  const [getIm, setgetIm] = useState([]);\n  console.log(\"fir1\", getImgreff);\n  console.log(\"fir2\", getIm); //temp start\n\n  const [Loader, setLoader] = useState(false);\n  let btn;\n  var accounts; //buyers start\n\n  const getbuyers = async () => {\n    setLoader(true);\n    setLoading(true); //window.location.reload(false)\n\n    let req = [];\n    let req2 = []; //imagerefexplore\n\n    firebase.database().ref(\"buyerssavedb\").on(\"value\", data => {\n      if (data) {\n        data.forEach(d => {\n          req.push(d.val());\n        });\n      }\n    });\n    setgetImgbuyers(req);\n    getImgbuyers.map(a => {\n      console.log(`abb`, a);\n      Object.keys(a).map(b => {\n        //  console.log(`bb`, b)\n        req2.push({\n          //addAcc:\n          addKeyI: a[b].keyId,\n          addPrices: a[b].priceSet,\n          addcAdd: a[b].cAddress,\n          addIds: a[b].id,\n          addImgs: a[b].imageUrl,\n          addUname: a[b].userName,\n          addUsymbol: a[b].userSymbol,\n          addIpfs: a[b].ipfsUrl,\n          addOwnerAddress: a[b].ownerAddress,\n          addsold: a[b].soldd,\n          addextra1: a[b].extra1,\n          adddate: a[b].datesets\n        });\n      });\n    });\n    setgetImbuyers(req2);\n    console.log(\"cfbb\", req);\n    setLoader(false);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getbuyers();\n  }, [getImbuyers]); //end buyers\n  //sellers start\n\n  const getSellers = async () => {\n    setLoader(true);\n    setLoading(true); //window.location.reload(false)\n\n    let req = [];\n    let req2 = []; //imagerefexplore\n\n    firebase.database().ref(\"sellerssavedb\").on(\"value\", data => {\n      if (data) {\n        data.forEach(d => {\n          req.push(d.val());\n        });\n      }\n    });\n    setgetImgsellers(req);\n    getImgsellers.map(a => {\n      console.log(`abs`, a);\n      Object.keys(a).map(b => {\n        //  console.log(`bb`, b)\n        req2.push({\n          //addAcc:\n          addKeyI: a[b].keyId,\n          addPrices: a[b].priceSet,\n          addcAdd: a[b].cAddress,\n          addIds: a[b].id,\n          addImgs: a[b].imageUrl,\n          addUname: a[b].userName,\n          addUsymbol: a[b].userSymbol,\n          addIpfs: a[b].ipfsUrl,\n          addOwnerAddress: a[b].ownerAddress,\n          addsold: a[b].soldd,\n          addextra1: a[b].extra1,\n          adddate: a[b].datesets\n        });\n      });\n    });\n    setgetImsellers(req2);\n    console.log(\"cfbs\", req);\n    setLoader(false);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getSellers();\n  }, [getImsellers]); //sellers stop\n\n  const connectmm = async () => {\n    //var getaddress=localStorage.getItem('myaddress')\n    //if(getaddress !== \"\"){\n    //var btn = document.getElementById(\"bu\");\n    //btn.value = accounts[0]; // will just add a hidden value\n    //btn.innerHTML = accounts[0];\n    //btn.innerHTML = \"CONNECTED\"\n    //}\n    //else{\n    //window.alert(\"Do you want to connect with metamask\");\n    //event.preventDefault();\n    //bring in user's metamask account address\n    //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\n    //alert(\"acc\"+accounts[0])\n    accounts = await web3.eth.getAccounts(); //.send({from:accounts[0]})\n\n    if (accounts[0] !== \"\") {\n      //accounts[0\n      //document.getElementById(\"bu\").\n      //document.getElementById(\"bu\").append(\"CONNECTED\")\n      btn = document.getElementById(\"bu\"); //btn.value = accounts[0]; // will just add a hidden value\n      //btn.innerHTML = accounts[0];\n\n      btn.innerHTML = accounts[0];\n      localStorage.setItem('myaddress', accounts[0]);\n    } else {\n      //document.getElementById(\"bu\").remove(\"\");\n      //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\n      var btns = document.getElementById(\"bu\"); //btns.value = accounts[0]; // will just add a hidden value\n\n      btns.innerHTML = \"NOT CONNECTED\";\n      localStorage.setItem('myaddress', \"\");\n    }\n  };\n\n  useEffect(() => {\n    connectmm();\n  }, []);\n\n  const getImgpa = async () => {\n    setLoader(true);\n    setLoading(true); //window.location.reload(false)\n\n    let req = [];\n    let req2 = []; //imagerefexplore\n\n    firebase.database().ref(\"imagerefexplore\").on(\"value\", data => {\n      if (data) {\n        data.forEach(d => {\n          req.push(d.val());\n        });\n      }\n    });\n    setgetImgreff(req);\n    getImgreff.map(a => {\n      console.log(`a`, a);\n      Object.keys(a).map(b => {\n        //  console.log(`bb`, b)\n        //   console.log(`bbnext`, a[b].imageUrl)\n        //   console.log(`bbaddess`,a[b].cAddress)\n        //   console.log(`bbprice`,a[b].priceSet)\n        //   console.log(`bbname`,a[b].userName)\n        //   console.log(`bbsymbol`,a[b].userSymbol)\n        //   console.log(`bbipfs`,a[b].ipfsUrl)\n        //   console.log(`bboaddress`,a[b].ownerAddress)      \n        //change here\n        req2.push({\n          //addAcc:\n          addKeyI: a[b].keyId,\n          addPrices: a[b].priceSet,\n          addcAdd: a[b].cAddress,\n          addIds: a[b].id,\n          addImgs: a[b].imageUrl,\n          addUname: a[b].userName,\n          addUsymbol: a[b].userSymbol,\n          addIpfs: a[b].ipfsUrl,\n          addOwnerAddress: a[b].ownerAddress,\n          addsold: a[b].soldd,\n          addextra1: a[b].extra1\n        });\n      });\n    });\n    setgetIm(req2);\n    console.log(\"cfb\", req);\n    setLoader(false);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getImgpa();\n  }, [getIm]);\n\n  const buynow = async a => {\n    //eth 0xED3c6A02F152CaeA0f6F86EFADF55e638543DED3\n    //bnb 0x2cA1655cceB43D27027e6676E880D1Ce4e7d7d18\n    let gettrans = new web3.eth.Contract(tra, '0x2cA1655cceB43D27027e6676E880D1Ce4e7d7d18'); //let gettrans=new web3.eth.Contract(tra,a.addOwnerAddress);\n\n    let getaaa = new web3.eth.Contract(abi, a.addcAdd);\n    console.log(\"insidebutton\", a.addcAdd);\n    console.log(\"insidebuttonid\", a.addPrices);\n    console.log(\"insidebuttonids\", a.addOwnerAddress);\n    const accounts = await web3.eth.getAccounts(); //tra start\n    //  await gettrans.methods.sendss(a.addOwnerAddress).send({\n    //    from:accounts[0], \n    //    value: web3.utils.toWei(a.addPrices, 'ether')\n    //  });\n\n    if (a.addOwnerAddress === accounts[0]) {\n      alert(\"you are owner so you does not purchase this token\");\n    } else {\n      await gettrans.methods.sendss(a.addOwnerAddress).send({\n        from: accounts[0],\n        //value:web3.utils.toWei(a.addPrices,'BNB')\n        value: web3.utils.toWei(a.addPrices, 'ether') //ether\n\n      }); //alert(\"amount has been sent\")\n      //end trans\n      //let thing = a.addIds;\n\n      console.log(\"thingget\", a.addIds);\n      console.log(\"ownerget\", a.addOwnerAddress);\n      console.log(\"keyget\", a.addKeyI); //let s = await getaaa.methods.items(thing).call();\n      //console.log(\"sget\",s)\n      //let state = a.addPrices;\n\n      console.log(\"stateget\", a.addPrices);\n      await getaaa.methods.transferFrom(a.addOwnerAddress, accounts[0], a.addIds).send({\n        from: accounts[0]\n      }); //  let refbuyers=fireDb.database().ref(`buyersdb/${accounts[0]}`).child(a.addKeyI);//ref1\n      //const keybuyers = refbuyers.push().key;\n\n      let ref1 = fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI); //ref1\n\n      let ref12 = fireDb.database().ref(`imagerefexplore/${a.addOwnerAddress}`).child(a.addKeyI); //ref12\n      //let ref12new=fireDb.database().ref(`imagerefexplore/${accounts[0]}`).child(a.addKeyI);//ref12new\n\n      let ref2 = fireDb.database().ref(`imagerefbuy/${accounts[0]}`).child(a.addKeyI);\n      let ref23 = fireDb.database().ref(`imagepurcre/${accounts[0]}`).child(a.addKeyI);\n      let ref233 = fireDb.database().ref(`imagepurcre/${a.addOwnerAddress}`).child(a.addKeyI); //const dbc = ref23.push().key;\n\n      console.log(\"ref2get\", ref2);\n      ref1.set({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        previousoaddress: a.addOwnerAddress,\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      });\n      ref2.set({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      });\n      ref23.set({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      });\n      ref233.update({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      });\n      ref12.update({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      });\n      fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();\n      fireDb.database().ref(`imagerefbuy/${a.addOwnerAddress}`).child(a.addKeyI).remove();\n      let refsellers = fireDb.database().ref(`buyerssavedb/${accounts[0]}`); //.child(a.addKeyI);//ref1\n\n      const keysellers = refsellers.push().key;\n      refsellers.child(keysellers).set({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      }); //fireDb.database().ref(`imagerefexplore/${a.addOwnerAddress}`).child(a.addKeyI).remove();\n      //fireDb.database().ref(`imagepurcre/${a.addOwnerAddress}`).child(a.addKeyI).remove();\n      // let ref3=fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI);\n      // ref3.set({\n      //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\n      //   ipfsUrl:a.addIpfs,ownerAddress:accounts[0]}) \n      // fireDb.database().ref(`imagerefbuy/${a.addOwnerAddress}`).child(a.addKeyI).set({\n      //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI     \n      // });\n      //    fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();  \n      //alert(\" Received successfully......\")\n\n      setIsOpen(true);\n    } //window.location.reload(false)   \n\n  }; // const imgcall = (a) => {\n  //   alert(`Hello, ${a.keyId}`);\n  // };\n  //temp end\n\n\n  const feedbackset = () => {\n    //alert(\"im here\"+Feedbackc)\n    //setFeedbackc\n    const mail = localStorage.getItem(\"mymailid\");\n    let reffeedback = fireDb.database().ref(`feedbacksave/`);\n    const db = reffeedback.push().key;\n    console.log(\"dbcheckappjs\", db);\n    reffeedback.child(db).set({\n      id: db,\n      profileimageUrl: \"\",\n      name: \"\",\n      emailid: mail,\n      feedbacks: Feedbackc\n    });\n    setFeedbackc('');\n    setIsOpenFeed(true);\n  };\n\n  const filterdata = () => {\n    let getprice;\n\n    if (selected === 'Sellers') {\n      if (selecteds === '1') {\n        let data = getImsellers.filter(val => {\n          let date = moment();\n          let createddate = moment(val.adddate);\n          getprice = val.addPrices;\n\n          for (let i = 0; i < 15; i++) {\n            if (getprice >= 1) // alert(\"price\"+getprice)\n              return date === createddate;\n          }\n        });\n        return data;\n      }\n\n      let data = getImsellers.filter(val => {\n        let date = moment().subtract(1, \"days\");\n        let weekdate = moment().subtract(parseInt(selecteds), \"days\");\n        let createddate = moment(val.adddate);\n        getprice = val.addPrices;\n\n        for (let i = 0; i < 15; i++) {\n          if (getprice >= 1) // alert(\"price2\"+getprice2)\n            return moment(createddate).isBetween(weekdate, date);\n        }\n      });\n      return data;\n    }\n\n    if (selecteds === '1') {\n      let data = getImbuyers.filter(val => {\n        let date = moment();\n        let createddate = moment(val.adddate);\n        getprice = val.addPrices;\n\n        for (let i = 0; i < 15; i++) {\n          if (getprice >= 1) return date === createddate;\n        }\n      });\n      return data;\n    }\n\n    let data = getImbuyers.filter(val => {\n      let date = moment().subtract(1, \"days\");\n      let weekdate = moment().subtract(parseInt(selecteds), \"days\");\n      let createddate = moment(val.adddate);\n      getprice = val.addPrices;\n\n      for (let i = 0; i < 15; i++) {\n        if (getprice >= 2) return moment(createddate).isBetween(weekdate, date);\n      }\n    });\n    return data; // alert(\"price2\"+getprice)\n    //return getImbuyers;\n  };\n\n  const filterdatas = () => {\n    if (searchTerm === '') return getIm;\n    let data = getIm.filter(val => {\n      return val.addUname.toLowerCase().trim().includes(searchTerm.toLowerCase().trim());\n    });\n    console.log('returndata', data);\n    return data;\n  };\n\n  const algocons = async () => {\n    const algosdk = require('algosdk'); // Retrieve the token, server and port values for your installation in the \n    // algod.net and algod.token files within the data directory\n    // UPDATE THESE VALUES\n    // const token = \"TOKEN\";\n    // const server = \"SERVER\";\n    // const port = PORT;\n    //hackathon\n    // const token = \"ef920e2e7e002953f4b29a8af720efe8e4ecc75ff102b165e0472834b25832c1\";\n    // const server = \"http://hackathon.algodev.network\";\n    // const port = 9100;\n    // sandbox\n\n\n    const token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n    const server = \"http://localhost\";\n    const port = 4001; // Structure for changing blockchain params\n\n    var cp = {\n      fee: 0,\n      firstRound: 0,\n      lastRound: 0,\n      genID: \"\",\n      genHash: \"\"\n    }; // Utility function to update params from blockchain\n\n    var getChangingParms = async function (algodclient) {\n      let params = await algodclient.getTransactionParams();\n      cp.firstRound = params.lastRound;\n      cp.lastRound = cp.firstRound + parseInt(1000); //  let sfee = await algodclient.suggestedFee();\n      //  cp.fee = sfee.fee;\n\n      cp.fee = params.fee;\n      cp.genID = params.genesisID;\n      cp.genHash = params.genesishashb64;\n    }; // Function used to wait for a tx confirmation\n\n\n    const waitForConfirmation = async function (algodclient, txId) {\n      let lastround = (await algodclient.status()).lastRound;\n\n      while (true) {\n        const pendingInfo = await algodclient.pendingTransactionInformation(txId);\n\n        if (pendingInfo.round !== null && pendingInfo.round > 0) {\n          //Got the completed Transaction\n          console.log(\"Transaction \" + pendingInfo.tx + \" confirmed in round \" + pendingInfo.round);\n          break;\n        }\n\n        lastround++;\n        await algodclient.statusAfterBlock(lastround);\n      }\n    }; // Recover accounts\n    // paste in mnemonic phrases here for each account\n    // var account1_mnemonic = \"PASTE your phrase for account 1\";\n    // var account2_mnemonic = \"PASTE your phrase for account 2\";\n    // var account3_mnemonic = \"PASTE your phrase for account 3\"\n    // var account1_mnemonic = \"portion never forward pill lunch organ biology\" +\n    //     \" weird catch curve isolate plug innocent skin grunt\" +\n    //     \" bounce clown mercy hole eagle soul chunk type absorb trim\";\n    // var account2_mnemonic = \"place blouse sad pigeon wing warrior wild script\" +\n    //     \" problem team blouse camp soldier breeze twist mother\" +\n    //     \" vanish public glass code arrow execute convince ability\" +\n    //     \" there\";\n    // var account3_mnemonic = \"image travel claw climb bottom spot path roast\" +\n    //     \" century also task cherry address curious save item\" +\n    //     \" clean theme amateur loyal apart hybrid steak about blanket\"\n\n\n    var account1_mnemonic = \"canal enact luggage spring similar zoo couple stomach shoe laptop middle wonder eager monitor weather number heavy skirt siren purity spell maze warfare ability ten\";\n    var account2_mnemonic = \"beauty nurse season autumn curve slice cry strategy frozen spy panic hobby strong goose employ review love fee pride enlist friend enroll clip ability runway\";\n    var account3_mnemonic = \"picnic bright know ticket purity pluck stumble destroy ugly tuna luggage quote frame loan wealth edge carpet drift cinnamon resemble shrimp grain dynamic absorb edge\";\n    var recoveredAccount1 = algosdk.mnemonicToSecretKey(account1_mnemonic);\n    var recoveredAccount2 = algosdk.mnemonicToSecretKey(account2_mnemonic);\n    var recoveredAccount3 = algosdk.mnemonicToSecretKey(account3_mnemonic);\n    console.log(recoveredAccount1.addr);\n    console.log(recoveredAccount2.addr);\n    console.log(recoveredAccount3.addr); // Instantiate the algod wrapper\n\n    let algodclient = new algosdk.Algod(token, server, port); // Debug Console should look similar to this\n    // THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM  \n    // AJNNFQN7DSR7QEY766V7JDG35OPM53ZSNF7CU264AWOOUGSZBMLMSKCRIU   \n    // 3ZQ3SHCYIKSGK7MTZ7PE7S6EDOFWLKDQ6RYYVMT7OHNQ4UJ774LE52AQCU   \n\n    (async () => {\n      // Asset Creation:\n      // The first transaciton is to create a new asset\n      // Get last round and suggested tx fee\n      // We use these to get the latest round and tx fees\n      // These parameters will be required before every \n      // Transaction\n      // We will account for changing transaction parameters\n      // before every transaction in this example\n      await getChangingParms(algodclient);\n      let note = undefined; // arbitrary data to be stored in the transaction; here, none is stored\n      // Asset creation specific parameters\n      // The following parameters are asset specific\n      // Throughout the example these will be re-used. \n      // We will also change the manager later in the example\n\n      let addr = recoveredAccount1.addr; // Whether user accounts will need to be unfrozen before transacting    \n\n      let defaultFrozen = false; // integer number of decimals for asset unit calculation\n\n      let decimals = 0; // total number of this asset available for circulation   \n\n      let totalIssuance = 1000; // Used to display asset units to user    \n\n      let unitName = \"LATINUM\"; // Friendly name of the asset    \n\n      let assetName = \"latinum\"; // Optional string pointing to a URL relating to the asset\n\n      let assetURL = \"http://someurl\"; // Optional hash commitment of some sort relating to the asset. 32 character length.\n\n      let assetMetadataHash = \"16efaa3924a6fd9d3a4824799a4ac65d\"; // The following parameters are the only ones\n      // that can be changed, and they have to be changed\n      // by the current manager\n      // Specified address can change reserve, freeze, clawback, and manager\n\n      let manager = recoveredAccount2.addr; // Specified address is considered the asset reserve\n      // (it has no special privileges, this is only informational)\n\n      let reserve = recoveredAccount2.addr; // Specified address can freeze or unfreeze user asset holdings \n\n      let freeze = recoveredAccount2.addr; // Specified address can revoke user asset holdings and send \n      // them to other addresses    \n\n      let clawback = recoveredAccount2.addr; // signing and sending \"txn\" allows \"addr\" to create an asset\n\n      let txn = algosdk.makeAssetCreateTxn(addr, cp.fee, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, totalIssuance, decimals, defaultFrozen, manager, reserve, freeze, clawback, unitName, assetName, assetURL, assetMetadataHash);\n      let rawSignedTxn = txn.signTxn(recoveredAccount1.sk);\n      let tx = await algodclient.sendRawTransaction(rawSignedTxn).do();\n      console.log(\"Transaction : \" + tx.txId);\n      let assetID = null; // wait for transaction to be confirmed\n\n      await waitForConfirmation(algodclient, tx.txId); // Get the new asset's information from the creator account\n\n      let ptx = await algodclient.pendingTransactionInformation(tx.txId);\n      assetID = ptx.txresults.createdasset;\n      console.log(\"AssetID = \" + assetID); //your terminal output should ber similar to this\n      // Transaction: RXSAJUYVPDWUF4XNGA2VYQX3NUVT5YJEZZ5SJXIIASZK5M55LVVQ\n      // Transaction RXSAJUYVPDWUF4XNGA2VYQX3NUVT5YJEZZ5SJXIIASZK5M55LVVQ confirmed in round 4272786\n      // AssetID = 149657\n      // Change Asset Configuration:\n      // Change the manager using an asset configuration transaction\n      // First update changing transaction parameters\n      // We will account for changing transaction parameters\n      // before every transaction in this example\n\n      await getChangingParms(algodclient); // Asset configuration specific parameters\n      // all other values are the same so we leave \n      // Them set.\n      // specified address can change reserve, freeze, clawback, and manager\n\n      manager = recoveredAccount1.addr; // Note that the change has to come from the existing manager\n\n      let ctxn = algosdk.makeAssetConfigTxn(recoveredAccount2.addr, cp.fee, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, assetID, manager, reserve, freeze, clawback); // This transaction must be signed by the current manager\n\n      rawSignedTxn = ctxn.signTxn(recoveredAccount2.sk);\n      let ctx = await algodclient.sendRawTransaction(rawSignedTxn);\n      console.log(\"Transaction : \" + ctx.txId); // wait for transaction to be confirmed\n\n      await waitForConfirmation(algodclient, ctx.txId); //Get the asset information for the newly changed asset\n\n      let assetInfo = await algodclient.assetInformation(assetID); //The manager should now be the same as the creator\n\n      console.log(assetInfo); // Asset info should look similar to this in the Terminal Output:\n      // Transaction: QGXMMYIKRV3TE3NWCL6FVNJQ3DCODML3GBC3BR4TSB3D6S3YQVCQ\n      // Transaction QGXMMYIKRV3TE3NWCL6FVNJQ3DCODML3GBC3BR4TSB3D6S3YQVCQ confirmed in round 4273376\n      // {\n      //     creator: 'THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM',\n      //     total: 1000,\n      //     decimals: 0,\n      //     defaultfrozen: false,\n      //     unitname: 'LATINUM',\n      //     assetname: 'latinum',\n      //     url: 'http://someurl',\n      //     metadatahash: 'MTZlZmFhMzkyNGE2ZmQ5ZDNhNDgyNDc5OWE0YWM2NWQ=',\n      //     managerkey: 'THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM',\n      //     reserveaddr: 'AJNNFQN7DSR7QEY766V7JDG35OPM53ZSNF7CU264AWOOUGSZBMLMSKCRIU',\n      //     freezeaddr: 'AJNNFQN7DSR7QEY766V7JDG35OPM53ZSNF7CU264AWOOUGSZBMLMSKCRIU',\n      //     clawbackaddr: 'AJNNFQN7DSR7QEY766V7JDG35OPM53ZSNF7CU264AWOOUGSZBMLMSKCRIU'\n      // }    \n      // Opting in to an Asset:\n      // Opting in to transact with the new asset\n      // Allow accounts that want recieve the new asset\n      // Have to opt in. To do this they send an asset transfer\n      // of the new asset to themseleves \n      // In this example we are setting up the 3rd recovered account to \n      // receive the new asset\n\n      let sender = recoveredAccount3.addr;\n      let recipient = sender; // We set revocationTarget to undefined as \n      // This is not a clawback operation\n\n      let revocationTarget = undefined; // CloseReaminerTo is set to undefined as\n      // we are not closing out an asset\n\n      let closeRemainderTo = undefined; // We are sending 0 assets\n\n      amount = 0; // First update changing transaction parameters\n      // We will account for changing transaction parameters\n      // before every transaction in this example\n\n      await getChangingParms(algodclient); // signing and sending \"txn\" allows sender to begin accepting asset specified by creator and index\n\n      let opttxn = algosdk.makeAssetTransferTxn(sender, recipient, closeRemainderTo, revocationTarget, cp.fee, amount, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, assetID); // Must be signed by the account wishing to opt in to the asset    \n\n      rawSignedTxn = opttxn.signTxn(recoveredAccount3.sk);\n      let opttx = await algodclient.sendRawTransaction(rawSignedTxn);\n      console.log(\"Transaction : \" + opttx.txId); // wait for transaction to be confirmed\n\n      await waitForConfirmation(algodclient, opttx.txId); //You should now see the new asset listed in the account information\n\n      act = await algodclient.accountInformation(recoveredAccount3.addr);\n      console.log(\"Account Information for: \" + JSON.stringify(act.assets[assetID])); // your console/terminal out put should look as follows\n      //   Transaction YT2U2WWBUWB4P54M24OUCMIIN3VDZ64LIDCBMED6AGQIQZKT6PTQ confirmed in round 4273745\n      //   Account Information for: { \"creator\": \"THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM\", \"amount\": 0, \"frozen\": false }\n      // Transfer New Asset:\n      // Now that account3 can recieve the new tokens \n      // we can tranfer tokens in from the creator\n      // to account3\n\n      sender = recoveredAccount1.addr;\n      recipient = recoveredAccount3.addr;\n      revocationTarget = undefined;\n      closeRemainderTo = undefined; //Amount of the asset to transfer\n\n      amount = 10; // First update changing transaction parameters\n      // We will account for changing transaction parameters\n      // before every transaction in this example\n\n      await getChangingParms(algodclient); // signing and sending \"txn\" will send \"amount\" assets from \"sender\" to \"recipient\"\n\n      let xtxn = algosdk.makeAssetTransferTxn(sender, recipient, closeRemainderTo, revocationTarget, cp.fee, amount, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, assetID); // Must be signed by the account sending the asset  \n\n      rawSignedTxn = xtxn.signTxn(recoveredAccount1.sk);\n      let xtx = await algodclient.sendRawTransaction(rawSignedTxn);\n      console.log(\"Transaction : \" + xtx.txId); // wait for transaction to be confirmed\n\n      await waitForConfirmation(algodclient, xtx.txId); // You should now see the 10 assets listed in the account information\n\n      act = await algodclient.accountInformation(recoveredAccount3.addr);\n      console.log(\"Account Information for: \" + JSON.stringify(act.assets[assetID])); // your console/terminal out put should look similar to this:\n      //    Transaction: LM2QOJP6FKLX2XIKCDLTM37IEE2IGQ5IMVOEYOCFHKOAUMU5G6ZQ\n      //    Transaction LM2QOJP6FKLX2XIKCDLTM37IEE2IGQ5IMVOEYOCFHKOAUMU5G6ZQ confirmed in round 4273946\n      //    Account Information for: { \"creator\": \"THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM\", \"amount\": 10, \"frozen\": false }\n      // freeze asset\n      // The asset was created and configured to allow freezing an account\n      // If the freeze address is set \"\", it will no longer be possible to do this.\n      // In this example we will now freeze account3 from transacting with the \n      // The newly created asset. \n      // The freeze transaction is sent from the freeze acount\n      // Which in this example is account2 \n\n      from = recoveredAccount2.addr;\n      freezeTarget = recoveredAccount3.addr;\n      freezeState = true; // First update changing transaction parameters\n      // We will account for changing transaction parameters\n      // before every transaction in this example\n\n      await getChangingParms(algodclient); // The freeze transaction needs to be signed by the freeze account\n\n      let ftxn = algosdk.makeAssetFreezeTxn(from, cp.fee, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, assetID, freezeTarget, freezeState); // Must be signed by the freeze account   \n\n      rawSignedTxn = ftxn.signTxn(recoveredAccount2.sk);\n      let ftx = await algodclient.sendRawTransaction(rawSignedTxn);\n      console.log(\"Transaction : \" + ftx.txId); // wait for transaction to be confirmed\n\n      await waitForConfirmation(algodclient, ftx.txId); // You should now see the asset is frozen listed in the account information\n\n      act = await algodclient.accountInformation(recoveredAccount3.addr);\n      console.log(\"Account Information for: \" + JSON.stringify(act.assets[assetID])); //you should see console/terminal output similar to this witht he frozen vales set to true\n      //    Transaction: CZ7VYA7UFGRVJ4EHQOLKCPRESDJC4ULHUTWM3QCAPZR3K4KVT2IQ\n      //    Transaction CZ7VYA7UFGRVJ4EHQOLKCPRESDJC4ULHUTWM3QCAPZR3K4KVT2IQ confirmed in round 4274065\n      //    Account Information for: { \"creator\": \"THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM\", \"amount\": 10, \"frozen\": true }\n      // Revoke an Asset:\n      // The asset was also created with the ability for it to be revoked by \n      // the clawbackaddress. If the asset was created or configured by the manager\n      // to not allow this by setting the clawbackaddress to \"\" then this would \n      // not be possible.\n      // We will now clawback the 10 assets in account3. account2\n      // is the clawbackaccount and must sign the transaction\n      // The sender will be be the clawback adress.\n      // the recipient will also be be the creator in this case\n      // that is account3\n\n      sender = recoveredAccount2.addr;\n      recipient = recoveredAccount1.addr;\n      revocationTarget = recoveredAccount3.addr;\n      closeRemainderTo = undefined;\n      amount = 10; // First update changing transaction parameters\n      // We will account for changing transaction parameters\n      // before every transaction in this example\n\n      await getChangingParms(algodclient); // signing and sending \"txn\" will send \"amount\" assets from \"revocationTarget\" to \"recipient\",\n      // if and only if sender == clawback manager for this asset\n\n      let rtxn = algosdk.makeAssetTransferTxn(sender, recipient, closeRemainderTo, revocationTarget, cp.fee, amount, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, assetID); // Must be signed by the account that is the clawback address    \n\n      rawSignedTxn = rtxn.signTxn(recoveredAccount2.sk);\n      let rtx = await algodclient.sendRawTransaction(rawSignedTxn);\n      console.log(\"Transaction : \" + rtx.txId); // wait for transaction to be confirmed\n\n      await waitForConfirmation(algodclient, rtx.txId); // You should now see 0 assets listed in the account information\n      // for the third account\n\n      console.log(\"Asset ID: \" + assetID);\n      act = await algodclient.accountInformation(recoveredAccount3.addr);\n      console.log(\"Account Information for: \" + JSON.stringify(act.assets[assetID])); //you should see console/terminal output similar to below for account 3\n      //Transaction MW2ZKQ2GXMVVJSF23AXFUSKQTF43EANJHXJJAXRQ7BSBKDUWZMTA confirmed in round 4274200\n      //Asset ID: 149774\n      //Account Information for: { \"creator\": \"THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM\", \"amount\": 0, \"frozen\": true }\n      // Destroy and Asset:\n      // All of the created assets should now be back in the creators\n      // Account so we can delete the asset.\n      // If this is not the case the asset deletion will fail\n      // First update changing transaction parameters\n      // We will account for changing transaction parameters\n      // before every transaction in this example\n\n      await getChangingParms(algodclient); // The address for the from field must be the manager account\n      // Which is currently the creator addr1\n\n      addr = recoveredAccount1.addr; // if all assets are held by the asset creator,\n      // the asset creator can sign and issue \"txn\" to remove the asset from the ledger. \n\n      let dtxn = algosdk.makeAssetDestroyTxn(addr, cp.fee, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, assetID); // The transaction must be signed by the manager which \n      // is currently set to account1\n\n      rawSignedTxn = dtxn.signTxn(recoveredAccount1.sk);\n      let dtx = await algodclient.sendRawTransaction(rawSignedTxn).do();\n      console.log(\"Transaction : \" + dtx.txId); // wait for transaction to be confirmed\n\n      await waitForConfirmation(algodclient, dtx.txId); // The account3 and account1 should no longer contain the asset as it has been destroyed\n\n      console.log(\"Asset ID: \" + assetID);\n      act = await algodclient.accountInformation(recoveredAccount3.addr);\n      console.log(\"Account Information for: \" + JSON.stringify(act.assets[assetID])); // your console/terminal output should look similar to this:   \n      // Transaction: FGMK2Q5Y2AXSOVSFO3XB6GBWQBUODF7A6QOU5BPHSIJIRA3UJHHQ\n      // Transaction FGMK2Q5Y2AXSOVSFO3XB6GBWQBUODF7A6QOU5BPHSIJIRA3UJHHQ confirmed in round 4274286\n      // Asset ID: 149783\n      // Account Information for: { \"creator\": \"\", \"amount\": 0, \"frozen\": true }\n    })().catch(e => {\n      console.log(e);\n      console.trace();\n    });\n  };\n\n  const action = useCallback(async () => {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"display-4 mb-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        height: '100px',\n        width: '1500px',\n        marginBlock: '5px',\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '0px',\n          height: '40px',\n          width: '100px',\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '10px',\n            marginTop: '',\n            height: '100px',\n            width: '100px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search...\",\n            onChange: event => {\n              setSearchTerm(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 7\n          }, this), searchTerm !== '' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: filterdata().map((val, key) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  onClick: () => setSearchTerm(val.title),\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  children: val.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 992,\n                  columnNumber: 11\n                }, this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 9\n              }, this);\n            })\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          height: '43px',\n          width: '1154px',\n          marginLeft: '150px',\n          marginBlock: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            outline: 'none'\n          },\n          class: \"btn btn-info btn-block\",\n          type: \"button\",\n          onClick: algocons,\n          children: \"algo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 7\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              outline: 'none'\n            },\n            class: \"btn btn-info btn-block\",\n            type: \"button\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 7\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/explore\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              outline: 'none'\n            },\n            class: \"btn btn-info btn-block\",\n            type: \"button\",\n            children: \"Explore\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/salepagecopy\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\" // onClick={() => {\n            //   history.push(\"/Salepagecopy\");\n            // }}\n            ,\n            children: \"Myitem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/followingpage\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\" // onClick={() => {\n            //   history.push(\"/Followingpage\");\n            // }}\n            ,\n            children: \"Following\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/activitypage\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\" // onClick={() => {\n            //   history.push(\"/Activitypage\");\n            // }}\n            ,\n            children: \"Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/howitworkpage\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\",\n            children: \"How it works\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/communitypage\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\",\n            children: \"Community\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/nft\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-info btn-block\",\n            type: \"button\" // \n            ,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            whitespace: 'nowrap',\n            width: '200px',\n            overflow: 'hidden',\n            textoverflow: 'ellipsis'\n          },\n          id: \"bu\",\n          class: \"btn btn-info btn-block\",\n          type: \"button\",\n          onClick: connectmm,\n          children: \"Connect wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Online, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Offline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1131,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        marginBlock: '5px',\n        display: 'flex',\n        width: '1500px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: 'skyblue'\n        },\n        children: [\"Top \\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: changeSelectOptionHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Sellers\",\n            children: \"Sellers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Buyers\",\n            children: \"Buyers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 7\n        }, this), \"\\xA0in\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: changeSelectOptionHandlers,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1 day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"8\",\n            children: \"7 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"32\",\n            children: \"30 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 7\n        }, this), \"\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 1\n    }, this), getImsellers.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginBottom: '5px'\n      },\n      children: filterdata().map(a => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'black',\n            height: '360px',\n            width: '300px',\n            marginLeft: '60px',\n            marginTop: '30px',\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: '2px solid white',\n              borderRadius: '5px',\n              marginBottom: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"center\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: `/explore/${a.addKeyI}/${a.addOwnerAddress}` //pathname: `/explore/${combine}`,\n\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: a.addImgs,\n                  style: {\n                    height: 120,\n                    width: 120,\n                    marginTop: '10px'\n                  },\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1212,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                style: {\n                  color: 'white'\n                },\n                children: [\"Name : \", a.addUname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1216,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                style: {\n                  color: 'white'\n                },\n                children: [\"Symbol : \", a.addUsymbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                style: {\n                  color: 'white'\n                },\n                children: [\"price : \", a.addPrices]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1220,\n                columnNumber: 5\n              }, this), a.addsold === '' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"BuyNow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1225,\n                  columnNumber: 3\n                }, this), ' ']\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  color: 'white'\n                },\n                children: \"Already solded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1205,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", getIm.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'black',\n            display: 'flex',\n            flexWrap: 'wrap',\n            marginBottom: '20px'\n          },\n          children: filterdatas().map(a => {\n            console.log(`a`, a); // Object.keys(a).map((b)=>{\n            //   console.log(`b`, b)\n            //   console.log(`bnext`, a[b].imageUrl)        \n            // })\n            //if((a.addId !== ' ') && (a.addsrc !== ' '))\n            //  if(a.addsold === '')\n            //  {\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: 'black',\n                height: '350px',\n                width: '300px',\n                marginLeft: '60px',\n                marginBottom: '10px'\n              },\n              children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  border: '2px solid white',\n                  borderRadius: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"center\", {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: {\n                      pathname: `/explore/${a.addKeyI}/${a.addOwnerAddress}` //pathname: `/explore/${combine}`,\n\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: a.addImgs,\n                      style: {\n                        height: 120,\n                        width: 120,\n                        marginTop: '10px'\n                      },\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1276,\n                      columnNumber: 5\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1270,\n                    columnNumber: 5\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    style: {\n                      color: 'white'\n                    },\n                    children: [\"Name : \", a.addUname]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1282,\n                    columnNumber: 5\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    style: {\n                      color: 'white'\n                    },\n                    children: [\"Symbol : \", a.addUsymbol]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1284,\n                    columnNumber: 5\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    style: {\n                      color: 'white'\n                    },\n                    children: [\"price : \", a.addPrices]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1286,\n                    columnNumber: 5\n                  }, this), a.addsold === '' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => buynow(a),\n                      children: \"BuyNow\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1290,\n                      columnNumber: 3\n                    }, this), ' ']\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h6\", {\n                    style: {\n                      color: 'white'\n                    },\n                    children: \"Already solded\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1299,\n                    columnNumber: 7\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1268,\n                  columnNumber: 1\n                }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1265,\n                columnNumber: 1\n              }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", isOpen && /*#__PURE__*/_jsxDEV(Popup, {\n                content: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Notification\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1313,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Your token has been buyed successfully......\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1314,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: togglePopup,\n                      children: \"close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1316,\n                      columnNumber: 9\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1315,\n                    columnNumber: 9\n                  }, this)]\n                }, void 0, true),\n                handleClose: togglePopup\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1312,\n                columnNumber: 16\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 7\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1242,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        height: '200px',\n        width: '1500px',\n        marginBlock: '5px',\n        display: 'flex',\n        marginLeft: '2px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1333,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: 'black'\n          },\n          children: \"Get the latest Rarible updates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 3\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Your e-mail\",\n          type: \"text\",\n          name: \"Feedbackc\",\n          required: true,\n          onChange: event => setFeedbackc(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1337,\n          columnNumber: 3\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            feedbackset();\n          },\n          style: {\n            height: '40px'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: 'black'\n          },\n          children: \"Rarible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/explore\",\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'black'\n            },\n            children: \"Explore\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1356,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: 'none'\n          },\n          to: \"/howitworkpage\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'black'\n            },\n            children: \"How it works\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: 'none'\n          },\n          to: \"/nft\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'black'\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1362,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1360,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: 'black'\n          },\n          children: \"Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1351,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: 'none'\n          },\n          to: \"/communitypage\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'black'\n            },\n            children: \"Community\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1372,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1370,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: 'black'\n          },\n          children: \"RARI Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1373,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: 'black'\n          },\n          children: \"Discussion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1374,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: 'black'\n          },\n          children: \"Voting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1375,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: 'black'\n          },\n          children: \"Suggest feature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1376,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1367,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '250px'\n        },\n        children: /*#__PURE__*/_jsxDEV(DarkMode, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1383,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1380,\n        columnNumber: 1\n      }, this), \"\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1332,\n      columnNumber: 3\n    }, this), isOpenFeed && /*#__PURE__*/_jsxDEV(Popup, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Email has been sent successfully......\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1392,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: togglePopupFeed,\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true) // handleClose={togglePopup}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1390,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Explore, \"9cy/AYP6zjCpJtMPPRImlmSPis4=\");\n\n_c = Explore;\nexport default Explore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"sources":["D:/BosonLabsNFTPROJECT/nftsecondprabha/CIFI/WebApp/NFTWebAPP/src/Explore.js"],"names":["moment","React","useState","useEffect","useCallback","web3","Link","fireDb","firebase","abi","tra","Popup","Offline","Online","Footer","DarkMode","Algorand","axios","Explore","handleLogout","searchTerm","setSearchTerm","console","log","selected","setSelected","selecteds","setSelecteds","changeSelectOptionHandler","event","target","value","changeSelectOptionHandlers","isOpenFeed","setIsOpenFeed","togglePopupFeed","Feedbackc","setFeedbackc","isLoading","setLoading","isOpen","setIsOpen","togglePopup","getImgbuyers","setgetImgbuyers","getImbuyers","setgetImbuyers","getImgsellers","setgetImgsellers","getImsellers","setgetImsellers","getImgreff","setgetImgreff","getIm","setgetIm","Loader","setLoader","btn","accounts","getbuyers","req","req2","database","ref","on","data","forEach","d","push","val","map","a","Object","keys","b","addKeyI","keyId","addPrices","priceSet","addcAdd","cAddress","addIds","id","addImgs","imageUrl","addUname","userName","addUsymbol","userSymbol","addIpfs","ipfsUrl","addOwnerAddress","ownerAddress","addsold","soldd","addextra1","extra1","adddate","datesets","getSellers","connectmm","eth","getAccounts","document","getElementById","innerHTML","localStorage","setItem","btns","getImgpa","buynow","gettrans","Contract","getaaa","alert","methods","sendss","send","from","utils","toWei","transferFrom","ref1","child","ref12","ref2","ref23","ref233","set","previousoaddress","Date","toDateString","whois","update","remove","refsellers","keysellers","key","feedbackset","mail","getItem","reffeedback","db","profileimageUrl","name","emailid","feedbacks","filterdata","getprice","filter","date","createddate","i","subtract","weekdate","parseInt","isBetween","filterdatas","toLowerCase","trim","includes","algocons","algosdk","require","token","server","port","cp","fee","firstRound","lastRound","genID","genHash","getChangingParms","algodclient","params","getTransactionParams","genesisID","genesishashb64","waitForConfirmation","txId","lastround","status","pendingInfo","pendingTransactionInformation","round","tx","statusAfterBlock","account1_mnemonic","account2_mnemonic","account3_mnemonic","recoveredAccount1","mnemonicToSecretKey","recoveredAccount2","recoveredAccount3","addr","Algod","note","undefined","defaultFrozen","decimals","totalIssuance","unitName","assetName","assetURL","assetMetadataHash","manager","reserve","freeze","clawback","txn","makeAssetCreateTxn","rawSignedTxn","signTxn","sk","sendRawTransaction","do","assetID","ptx","txresults","createdasset","ctxn","makeAssetConfigTxn","ctx","assetInfo","assetInformation","sender","recipient","revocationTarget","closeRemainderTo","amount","opttxn","makeAssetTransferTxn","opttx","act","accountInformation","JSON","stringify","assets","xtxn","xtx","freezeTarget","freezeState","ftxn","makeAssetFreezeTxn","ftx","rtxn","rtx","dtxn","makeAssetDestroyTxn","dtx","catch","e","trace","action","backgroundColor","height","width","marginBlock","display","marginLeft","color","Logo","marginTop","title","cursor","outline","whitespace","overflow","textoverflow","length","flexWrap","marginBottom","border","borderRadius","pathname","textDecoration"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport React, { useState,useEffect,useCallback } from \"react\";\r\n//import history from \"./utils/history\";\r\nimport web3 from './web3';\r\n// Router, Route, Switch,\r\nimport { Link } from \"react-router-dom\";\r\n//import Myitem from \"./Myitem\";\r\n//import Nft from \"./Nft\";\r\n//import firebase from \"./firebase\";\r\nimport fireDb from \"./firebase\";\r\n//import Followingpage from \"./Followingpage\";\r\n//import Activitypage from \"./Activitypage\";\r\n//import Howitworkpage from \"./Howitworkpage\";\r\n//import Communitypage from \"./Communitypage\";\r\nimport firebase from \"firebase\";\r\nimport {abi} from './datas'\r\n//import Mypurchasepage from './Mypurchasepage'\r\nimport {tra} from './trans'\r\n//import Createandpurchasepage from './Createandpurchasepage'\r\n//import Receivedpage from './Receivedpage';\r\nimport Popup from './Popup';\r\nimport { Offline, Online } from \"react-detect-offline\";\r\nimport Footer from './footer'\r\nimport Logo from './logo.svg';\r\n//import JSONDATA from './MOCK_DATA.json';\r\n// import SearchBar from './SearchBar';\r\n//import CountryList from './CountryList';\r\n\r\nimport \"./App.css\"\r\nimport DarkMode from \"./DarkMode\"\r\n//import * as reach from '@reach-sh/stdlib/ALGO';\r\n\r\nimport Algorand from \"algosdk\";\r\nimport axios from 'axios';\r\n\r\nconst Explore=({handleLogout})=> {\r\n\r\n  // const [initialData,setinitialDate]=useState('Sellers');\r\n\r\n  //\r\n  const [searchTerm,setSearchTerm]=useState('');\r\n  console.log('returnsearch',searchTerm)\r\n  // const [input, setInput] = useState('');\r\n  // const [countryListDefault, setCountryListDefault] = useState();\r\n  // const [countryList, setCountryList] = useState();\r\n  // const fetchData = async () => {\r\n  //   return await fetch('https://restcountries.eu/rest/v2/all')\r\n  //     .then(response => response.json())\r\n  //     .then(data => {\r\n  //        setCountryList(data) \r\n  //        setCountryListDefault(data)\r\n  //      });}\r\n  // const updateInput = async (input) => {\r\n  //    const filtered = countryListDefault.filter(country => {\r\n  //     return country.name.toLowerCase().includes(input.toLowerCase())\r\n  //    })\r\n  //    setInput(input);\r\n  //    setCountryList(filtered);\r\n  // }\r\n  // useEffect( () => {fetchData()},[]);\r\n//\r\n  const [selected, setSelected] = React.useState(\"Sellers\");\r\n\r\n  const [selecteds, setSelecteds] = React.useState(\"1\");\r\n\r\n  const changeSelectOptionHandler = (event) => {\r\n    setSelected(event.target.value);\r\n  };\r\n\r\n  const changeSelectOptionHandlers = (event) => {\r\n    setSelecteds(event.target.value);\r\n  };\r\n\r\n  // const [currentSymbol, setCurrentSymbol] = useState('Sellers')\r\n  // const changeFruit = (newFruit) => {\r\n  //   setCurrentSymbol(newFruit)\r\n  // }\r\n  // const [currentSymbols, setCurrentSymbols] = useState('1 day')\r\n  // const changeFruits = (newFruit) => {\r\n  //   setCurrentSymbols(newFruit)\r\n  // }\r\n\r\n  const [isOpenFeed, setIsOpenFeed] = useState(false); \r\n  const togglePopupFeed = () => {\r\n    setIsOpenFeed(false);\r\n    //window.location.reload(false)    \r\n  }\r\n  const [Feedbackc,setFeedbackc]=useState('');\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const togglePopup = () => {\r\n    setIsOpen(false);\r\n  // window.location.reload(false)    \r\n  }\r\n    //fb   \r\n  //const [currentid, setCurrentid] = useState(\"\");\r\n //const [afternames,setAfternames] = useState([]);\r\n //const [name,setnames] = useState([]);\r\n //const [tid,setId] = useState(\"\"); \r\n//const [getAddressDb,setGetAddressDb]=useState([]);\r\n//const [getAddressDbs,setGetAddressDbs]=useState([]);\r\n//console.log(\"initialgetaddresss\",getAddressDbs)\r\n //console.log(\"initialgetaddress\",getAddressDb)\r\n //console.log(\"ipname\",name)\r\n\r\nconst[getImgbuyers,setgetImgbuyers]=useState([]);\r\nconst[getImbuyers,setgetImbuyers]=useState([]);//\r\nconsole.log(\"firb1\",getImgbuyers)\r\nconsole.log(\"firb2\",getImbuyers)\r\n\r\n\r\n\r\nconst[getImgsellers,setgetImgsellers]=useState([]);\r\nconst[getImsellers,setgetImsellers]=useState([]);//\r\nconsole.log(\"firs1\",getImgsellers)\r\nconsole.log(\"firs2\",getImsellers)\r\n\r\nconst[getImgreff,setgetImgreff]=useState([]);\r\nconst[getIm,setgetIm]=useState([]);\r\nconsole.log(\"fir1\",getImgreff)\r\nconsole.log(\"fir2\",getIm)\r\n//temp start\r\nconst[Loader,setLoader]=useState(false);\r\nlet btn;\r\nvar accounts;\r\n\r\n//buyers start\r\n\r\nconst getbuyers = async() =>{\r\n  setLoader(true)\r\n  setLoading(true)\r\n  //window.location.reload(false)\r\n  let req = [];\r\n  let req2 = [];//imagerefexplore\r\n  firebase.database().ref(\"buyerssavedb\").on(\"value\", (data) => {\r\n    if (data) {\r\n      data.forEach((d) => {\r\n        req.push(d.val())          \r\n      });        \r\n    }\r\n  });\r\n  setgetImgbuyers(req)\r\n\r\n  getImgbuyers.map((a)=>{\r\n    console.log(`abb`, a)\r\n  \r\n    Object.keys(a).map((b)=>{\r\n    //  console.log(`bb`, b)\r\n      req2.push({\r\n        //addAcc:\r\n        addKeyI:a[b].keyId,\r\n        addPrices:a[b].priceSet,\r\n        addcAdd:a[b].cAddress,\r\n        addIds:a[b].id,\r\n        addImgs:a[b].imageUrl,\r\n      addUname:a[b].userName,\r\n    addUsymbol:a[b].userSymbol,\r\n  addIpfs:a[b].ipfsUrl,\r\n  addOwnerAddress:a[b].ownerAddress,\r\n  addsold:a[b].soldd,\r\n  addextra1:a[b].extra1,\r\n  adddate:a[b].datesets\r\n})              \r\n    })\r\n  })    \r\n  setgetImbuyers(req2)    \r\n  console.log(\"cfbb\",req) \r\n  setLoader(false)\r\n  setLoading(false)\r\n}\r\nuseEffect(()=>{getbuyers()},[getImbuyers])\r\n\r\n\r\n\r\n\r\n\r\n//end buyers\r\n\r\n//sellers start\r\n\r\nconst getSellers = async() =>{\r\n  setLoader(true)\r\n  setLoading(true)\r\n  //window.location.reload(false)\r\n  let req = [];\r\n  let req2 = [];//imagerefexplore\r\n  firebase.database().ref(\"sellerssavedb\").on(\"value\", (data) => {\r\n    if (data) {\r\n      data.forEach((d) => {\r\n        req.push(d.val())          \r\n      });        \r\n    }\r\n  });\r\n  setgetImgsellers(req)\r\n\r\n  getImgsellers.map((a)=>{\r\n    console.log(`abs`, a)\r\n  \r\n    Object.keys(a).map((b)=>{\r\n    //  console.log(`bb`, b)\r\n      req2.push({\r\n        //addAcc:\r\n        addKeyI:a[b].keyId,\r\n        addPrices:a[b].priceSet,\r\n        addcAdd:a[b].cAddress,\r\n        addIds:a[b].id,\r\n        addImgs:a[b].imageUrl,\r\n      addUname:a[b].userName,\r\n    addUsymbol:a[b].userSymbol,\r\n  addIpfs:a[b].ipfsUrl,\r\n  addOwnerAddress:a[b].ownerAddress,\r\n  addsold:a[b].soldd,\r\n  addextra1:a[b].extra1,\r\n  adddate:a[b].datesets\r\n})              \r\n    })\r\n  })    \r\n  setgetImsellers(req2)    \r\n  console.log(\"cfbs\",req) \r\n  setLoader(false)\r\n  setLoading(false)\r\n}\r\nuseEffect(()=>{getSellers()},[getImsellers])\r\n\r\n\r\n\r\n//sellers stop\r\n\r\nconst connectmm = async () => {\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n    //if(getaddress !== \"\"){\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n    //}\r\n    //else{\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n      //alert(\"acc\"+accounts[0])\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n      if(accounts[0] !== \"\"){\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        btn.innerHTML = accounts[0];\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n  const getImgpa = async() =>{\r\n    setLoader(true)\r\n    setLoading(true)\r\n    //window.location.reload(false)\r\n    let req = [];\r\n    let req2 = [];//imagerefexplore\r\n    firebase.database().ref(\"imagerefexplore\").on(\"value\", (data) => {\r\n      if (data) {\r\n        data.forEach((d) => {\r\n          req.push(d.val())          \r\n        });        \r\n      }\r\n    });\r\n    setgetImgreff(req)\r\n\r\n    getImgreff.map((a)=>{\r\n      console.log(`a`, a)\r\n\r\n      Object.keys(a).map((b)=>{\r\n      //  console.log(`bb`, b)\r\n      //   console.log(`bbnext`, a[b].imageUrl)\r\n      //   console.log(`bbaddess`,a[b].cAddress)\r\n      //   console.log(`bbprice`,a[b].priceSet)\r\n      //   console.log(`bbname`,a[b].userName)\r\n      //   console.log(`bbsymbol`,a[b].userSymbol)\r\n      //   console.log(`bbipfs`,a[b].ipfsUrl)\r\n      //   console.log(`bboaddress`,a[b].ownerAddress)      \r\n//change here\r\n        req2.push({\r\n          //addAcc:\r\n          addKeyI:a[b].keyId,\r\n          addPrices:a[b].priceSet,\r\n          addcAdd:a[b].cAddress,\r\n          addIds:a[b].id,\r\n          addImgs:a[b].imageUrl,\r\n        addUname:a[b].userName,\r\n      addUsymbol:a[b].userSymbol,\r\n    addIpfs:a[b].ipfsUrl,\r\n    addOwnerAddress:a[b].ownerAddress,\r\n    addsold:a[b].soldd,\r\n    addextra1:a[b].extra1\r\n  })              \r\n      })\r\n    })    \r\n    setgetIm(req2)    \r\n    console.log(\"cfb\",req) \r\n    setLoader(false)\r\n    setLoading(false)\r\n  }\r\n  useEffect(()=>{getImgpa()},[getIm])\r\n\r\n  \r\nconst buynow= async(a) =>{\r\n\r\n//eth 0xED3c6A02F152CaeA0f6F86EFADF55e638543DED3\r\n  //bnb 0x2cA1655cceB43D27027e6676E880D1Ce4e7d7d18\r\n    let gettrans=new web3.eth.Contract(tra,'0x2cA1655cceB43D27027e6676E880D1Ce4e7d7d18');\r\n\r\n    //let gettrans=new web3.eth.Contract(tra,a.addOwnerAddress);\r\n\r\n    let getaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n\r\n    console.log(\"insidebutton\",a.addcAdd)\r\n    console.log(\"insidebuttonid\",a.addPrices)\r\n    console.log(\"insidebuttonids\",a.addOwnerAddress)\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n//tra start\r\n\r\n  //  await gettrans.methods.sendss(a.addOwnerAddress).send({\r\n  //    from:accounts[0], \r\n  //    value: web3.utils.toWei(a.addPrices, 'ether')\r\n  //  });\r\n\r\n  if(a.addOwnerAddress === accounts[0])\r\n  {\r\n\r\n    alert(\"you are owner so you does not purchase this token\")\r\n\r\n  }\r\n  else{\r\n\r\n\r\n    await gettrans.methods.sendss(a.addOwnerAddress).send({\r\n      from: accounts[0],\r\n      //value:web3.utils.toWei(a.addPrices,'BNB')\r\n      value: web3.utils.toWei(a.addPrices, 'ether')//ether\r\n     }); \r\n     //alert(\"amount has been sent\")\r\n //end trans\r\n \r\n     //let thing = a.addIds;\r\n \r\n     console.log(\"thingget\",a.addIds)\r\n \r\n     console.log(\"ownerget\",a.addOwnerAddress)\r\n \r\n     console.log(\"keyget\",a.addKeyI)\r\n \r\n     //let s = await getaaa.methods.items(thing).call();\r\n \r\n     //console.log(\"sget\",s)\r\n \r\n     //let state = a.addPrices;\r\n \r\n     console.log(\"stateget\",a.addPrices)\r\n  \r\n     await getaaa.methods.transferFrom(a.addOwnerAddress,accounts[0],a.addIds).send({\r\n       from:accounts[0]\r\n     });\r\n\r\n    //  let refbuyers=fireDb.database().ref(`buyersdb/${accounts[0]}`).child(a.addKeyI);//ref1\r\n     //const keybuyers = refbuyers.push().key;\r\n\r\n   \r\n    let ref1=fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI);//ref1\r\n    let ref12=fireDb.database().ref(`imagerefexplore/${a.addOwnerAddress}`).child(a.addKeyI);//ref12\r\n    //let ref12new=fireDb.database().ref(`imagerefexplore/${accounts[0]}`).child(a.addKeyI);//ref12new\r\n    let ref2=fireDb.database().ref(`imagerefbuy/${accounts[0]}`).child(a.addKeyI); \r\n     let ref23=fireDb.database().ref(`imagepurcre/${accounts[0]}`).child(a.addKeyI);\r\n     let ref233=fireDb.database().ref(`imagepurcre/${a.addOwnerAddress}`).child(a.addKeyI);\r\n     //const dbc = ref23.push().key;\r\n \r\n     console.log(\"ref2get\",ref2)\r\n     ref1.set({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n      ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",previousoaddress:a.addOwnerAddress,datesets:new Date().toDateString(),whois:'Buyers'}) \r\n       ref2.set({\r\n       id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n       ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n       ref23.set({\r\n         id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n         ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n         ref233.update({\r\n           id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n           ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n           ref12.update({\r\n            id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n            ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n       fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n       fireDb.database().ref(`imagerefbuy/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n\r\n       let refsellers=fireDb.database().ref(`buyerssavedb/${accounts[0]}`);//.child(a.addKeyI);//ref1\r\n      const keysellers = refsellers.push().key;\r\n  \r\n  \r\n    refsellers.child(keysellers).set({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n      ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'\r\n    })\r\n       //fireDb.database().ref(`imagerefexplore/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n       //fireDb.database().ref(`imagepurcre/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n       // let ref3=fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI);\r\n       // ref3.set({\r\n       //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n       //   ipfsUrl:a.addIpfs,ownerAddress:accounts[0]}) \r\n     // fireDb.database().ref(`imagerefbuy/${a.addOwnerAddress}`).child(a.addKeyI).set({\r\n     //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI     \r\n     // });\r\n //    fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();  \r\n //alert(\" Received successfully......\")\r\n setIsOpen(true);\r\n  } \r\n//window.location.reload(false)   \r\n}  \r\n  // const imgcall = (a) => {\r\n  //   alert(`Hello, ${a.keyId}`);\r\n  // };\r\n  //temp end\r\n  const feedbackset=()=>{\r\n    //alert(\"im here\"+Feedbackc)\r\n    //setFeedbackc\r\n  const mail = localStorage.getItem(\"mymailid\");\r\n  let reffeedback=fireDb.database().ref(`feedbacksave/`);\r\n  const db = reffeedback.push().key;\r\n  console.log(\"dbcheckappjs\",db)\r\n  reffeedback.child(db).set({id:db,profileimageUrl:\"\",name:\"\",emailid:mail,feedbacks:Feedbackc});\r\n  setFeedbackc('');\r\n  setIsOpenFeed(true);\r\n  }\r\n  \r\n  \r\n\r\n  const filterdata=()=>{\r\n\r\n    let getprice;\r\n    \r\n    if(selected === 'Sellers') {\r\n\r\n      if(selecteds === '1')\r\n      {\r\n          let data = getImsellers.filter((val)=>{\r\n          let date=moment()\r\n          let createddate=moment(val.adddate)\r\n          getprice = val.addPrices\r\n          for(let i=0;i<15;i++){\r\n\r\n          if(getprice >= 1)\r\n          // alert(\"price\"+getprice)\r\n          return date===createddate \r\n          }\r\n        })\r\n        return data;\r\n      }    \r\n        let data = getImsellers.filter((val)=>{\r\n          let date=moment().subtract(1,\"days\")\r\n          let weekdate=moment().subtract(parseInt(selecteds),\"days\")\r\n          let createddate=moment(val.adddate)\r\n          getprice = val.addPrices\r\n          for(let i=0;i<15;i++){\r\n\r\n            if(getprice >= 1)\r\n          // alert(\"price2\"+getprice2)\r\n              return moment(createddate).isBetween(weekdate,date)\r\n\r\n          }\r\n           \r\n          \r\n        })\r\n\r\n        return data;    \r\n    }\r\n\r\n\r\n    if(selecteds === '1')\r\n    {\r\n      let data = getImbuyers.filter((val)=>{\r\n        let date=moment()\r\n        let createddate=moment(val.adddate)\r\n        getprice = val.addPrices\r\n        for(let i=0;i<15;i++){\r\n\r\n        if(getprice >= 1)\r\n        return date===createddate \r\n        }\r\n      })\r\n      return data;\r\n    }    \r\n      let data = getImbuyers.filter((val)=>{\r\n\r\n        let date=moment().subtract(1,\"days\")\r\n        let weekdate=moment().subtract(parseInt(selecteds),\"days\")\r\n        let createddate=moment(val.adddate)\r\n        getprice = val.addPrices\r\n\r\n        for(let i=0;i<15;i++){\r\n\r\n        if(getprice >= 2)\r\n        return moment(createddate).isBetween(weekdate,date)\r\n      \r\n    }\r\n  })\r\n      return data;    \r\n\r\n\r\n\r\n    // alert(\"price2\"+getprice)\r\n\r\n    //return getImbuyers;\r\n\r\n  }\r\n\r\n  const filterdatas=()=>{\r\n\r\n    if(searchTerm === '') return getIm\r\n    let data= getIm.filter((val)=>{\r\n      return val.addUname.toLowerCase().trim().includes(searchTerm.toLowerCase().trim())\r\n      \r\n    })\r\n    console.log('returndata',data)\r\n    return data;\r\n  }\r\n\r\n  const algocons=async()=>{\r\n\r\n    const algosdk = require('algosdk');\r\n// Retrieve the token, server and port values for your installation in the \r\n// algod.net and algod.token files within the data directory\r\n\r\n// UPDATE THESE VALUES\r\n// const token = \"TOKEN\";\r\n// const server = \"SERVER\";\r\n// const port = PORT;\r\n\r\n//hackathon\r\n// const token = \"ef920e2e7e002953f4b29a8af720efe8e4ecc75ff102b165e0472834b25832c1\";\r\n// const server = \"http://hackathon.algodev.network\";\r\n// const port = 9100;\r\n\r\n// sandbox\r\nconst token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\r\nconst server = \"http://localhost\";\r\nconst port = 4001;\r\n\r\n// Structure for changing blockchain params\r\nvar cp = {\r\n    fee: 0,\r\n    firstRound: 0,\r\n    lastRound: 0,\r\n    genID: \"\",\r\n    genHash: \"\"\r\n}\r\n// Utility function to update params from blockchain\r\nvar getChangingParms = async function (algodclient) {\r\n    let params = await algodclient.getTransactionParams();\r\n    cp.firstRound = params.lastRound;\r\n    cp.lastRound = cp.firstRound + parseInt(1000);\r\n  //  let sfee = await algodclient.suggestedFee();\r\n  //  cp.fee = sfee.fee;\r\n    cp.fee = params.fee;\r\n    cp.genID = params.genesisID;\r\n    cp.genHash = params.genesishashb64;\r\n}\r\n\r\n// Function used to wait for a tx confirmation\r\nconst waitForConfirmation = async function (algodclient, txId) {\r\n    let lastround = (await algodclient.status()).lastRound;\r\n    while (true) {\r\n        const pendingInfo = await algodclient.pendingTransactionInformation(txId);\r\n        if (pendingInfo.round !== null && pendingInfo.round > 0) {\r\n            //Got the completed Transaction\r\n            console.log(\"Transaction \" + pendingInfo.tx + \" confirmed in round \" + pendingInfo.round);\r\n            break;\r\n        }\r\n        lastround++;\r\n        await algodclient.statusAfterBlock(lastround);\r\n    }\r\n};\r\n\r\n\r\n// Recover accounts\r\n// paste in mnemonic phrases here for each account\r\n\r\n// var account1_mnemonic = \"PASTE your phrase for account 1\";\r\n// var account2_mnemonic = \"PASTE your phrase for account 2\";\r\n// var account3_mnemonic = \"PASTE your phrase for account 3\"\r\n\r\n// var account1_mnemonic = \"portion never forward pill lunch organ biology\" +\r\n//     \" weird catch curve isolate plug innocent skin grunt\" +\r\n//     \" bounce clown mercy hole eagle soul chunk type absorb trim\";\r\n// var account2_mnemonic = \"place blouse sad pigeon wing warrior wild script\" +\r\n//     \" problem team blouse camp soldier breeze twist mother\" +\r\n//     \" vanish public glass code arrow execute convince ability\" +\r\n//     \" there\";\r\n// var account3_mnemonic = \"image travel claw climb bottom spot path roast\" +\r\n//     \" century also task cherry address curious save item\" +\r\n//     \" clean theme amateur loyal apart hybrid steak about blanket\"\r\n\r\nvar account1_mnemonic = \"canal enact luggage spring similar zoo couple stomach shoe laptop middle wonder eager monitor weather number heavy skirt siren purity spell maze warfare ability ten\";\r\nvar account2_mnemonic = \"beauty nurse season autumn curve slice cry strategy frozen spy panic hobby strong goose employ review love fee pride enlist friend enroll clip ability runway\";\r\nvar account3_mnemonic = \"picnic bright know ticket purity pluck stumble destroy ugly tuna luggage quote frame loan wealth edge carpet drift cinnamon resemble shrimp grain dynamic absorb edge\";\r\n\r\nvar recoveredAccount1 = algosdk.mnemonicToSecretKey(account1_mnemonic);\r\nvar recoveredAccount2 = algosdk.mnemonicToSecretKey(account2_mnemonic);\r\nvar recoveredAccount3 = algosdk.mnemonicToSecretKey(account3_mnemonic);\r\nconsole.log(recoveredAccount1.addr);\r\nconsole.log(recoveredAccount2.addr);\r\nconsole.log(recoveredAccount3.addr);\r\n\r\n// Instantiate the algod wrapper\r\nlet algodclient = new algosdk.Algod(token, server, port);\r\n\r\n// Debug Console should look similar to this\r\n\r\n// THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM  \r\n// AJNNFQN7DSR7QEY766V7JDG35OPM53ZSNF7CU264AWOOUGSZBMLMSKCRIU   \r\n// 3ZQ3SHCYIKSGK7MTZ7PE7S6EDOFWLKDQ6RYYVMT7OHNQ4UJ774LE52AQCU   \r\n\r\n\r\n(async () => {\r\n    // Asset Creation:\r\n    // The first transaciton is to create a new asset\r\n    // Get last round and suggested tx fee\r\n    // We use these to get the latest round and tx fees\r\n    // These parameters will be required before every \r\n    // Transaction\r\n    // We will account for changing transaction parameters\r\n    // before every transaction in this example\r\n    await getChangingParms(algodclient);\r\n    let note = undefined; // arbitrary data to be stored in the transaction; here, none is stored\r\n\r\n    // Asset creation specific parameters\r\n    // The following parameters are asset specific\r\n    // Throughout the example these will be re-used. \r\n    // We will also change the manager later in the example\r\n    let addr = recoveredAccount1.addr;\r\n    // Whether user accounts will need to be unfrozen before transacting    \r\n    let defaultFrozen = false;\r\n    // integer number of decimals for asset unit calculation\r\n    let decimals = 0;\r\n    // total number of this asset available for circulation   \r\n    let totalIssuance = 1000;\r\n    // Used to display asset units to user    \r\n    let unitName = \"LATINUM\";\r\n    // Friendly name of the asset    \r\n    let assetName = \"latinum\";\r\n    // Optional string pointing to a URL relating to the asset\r\n    let assetURL = \"http://someurl\";\r\n    // Optional hash commitment of some sort relating to the asset. 32 character length.\r\n    let assetMetadataHash = \"16efaa3924a6fd9d3a4824799a4ac65d\";\r\n    // The following parameters are the only ones\r\n    // that can be changed, and they have to be changed\r\n    // by the current manager\r\n    // Specified address can change reserve, freeze, clawback, and manager\r\n    let manager = recoveredAccount2.addr;\r\n    // Specified address is considered the asset reserve\r\n    // (it has no special privileges, this is only informational)\r\n    let reserve = recoveredAccount2.addr;\r\n    // Specified address can freeze or unfreeze user asset holdings \r\n    let freeze = recoveredAccount2.addr;\r\n    // Specified address can revoke user asset holdings and send \r\n    // them to other addresses    \r\n    let clawback = recoveredAccount2.addr;\r\n\r\n    // signing and sending \"txn\" allows \"addr\" to create an asset\r\n    let txn = algosdk.makeAssetCreateTxn(addr, cp.fee, cp.firstRound, cp.lastRound, note,\r\n        cp.genHash, cp.genID, totalIssuance, decimals, defaultFrozen, manager, reserve, freeze,\r\n        clawback, unitName, assetName, assetURL, assetMetadataHash);\r\n\r\n    let rawSignedTxn = txn.signTxn(recoveredAccount1.sk)\r\n    let tx = (await algodclient.sendRawTransaction(rawSignedTxn).do());\r\n    console.log(\"Transaction : \" + tx.txId);\r\n    let assetID = null;\r\n    // wait for transaction to be confirmed\r\n    await waitForConfirmation(algodclient, tx.txId);\r\n    // Get the new asset's information from the creator account\r\n    let ptx = await algodclient.pendingTransactionInformation(tx.txId);\r\n    assetID = ptx.txresults.createdasset;\r\n    console.log(\"AssetID = \" + assetID);\r\n\r\n    //your terminal output should ber similar to this\r\n    // Transaction: RXSAJUYVPDWUF4XNGA2VYQX3NUVT5YJEZZ5SJXIIASZK5M55LVVQ\r\n    // Transaction RXSAJUYVPDWUF4XNGA2VYQX3NUVT5YJEZZ5SJXIIASZK5M55LVVQ confirmed in round 4272786\r\n    // AssetID = 149657\r\n\r\n   \r\n    // Change Asset Configuration:\r\n    // Change the manager using an asset configuration transaction\r\n\r\n    // First update changing transaction parameters\r\n    // We will account for changing transaction parameters\r\n    // before every transaction in this example\r\n    await getChangingParms(algodclient);\r\n\r\n    // Asset configuration specific parameters\r\n    // all other values are the same so we leave \r\n    // Them set.\r\n    // specified address can change reserve, freeze, clawback, and manager\r\n    manager = recoveredAccount1.addr;\r\n\r\n    // Note that the change has to come from the existing manager\r\n    let ctxn = algosdk.makeAssetConfigTxn(recoveredAccount2.addr, cp.fee,\r\n        cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID,\r\n        assetID, manager, reserve, freeze, clawback);\r\n\r\n    // This transaction must be signed by the current manager\r\n    rawSignedTxn = ctxn.signTxn(recoveredAccount2.sk)\r\n    let ctx = (await algodclient.sendRawTransaction(rawSignedTxn));\r\n    console.log(\"Transaction : \" + ctx.txId);\r\n    // wait for transaction to be confirmed\r\n    await waitForConfirmation(algodclient, ctx.txId);\r\n\r\n    //Get the asset information for the newly changed asset\r\n    let assetInfo = await algodclient.assetInformation(assetID);\r\n    //The manager should now be the same as the creator\r\n\r\n    console.log(assetInfo);\r\n    // Asset info should look similar to this in the Terminal Output:\r\n    // Transaction: QGXMMYIKRV3TE3NWCL6FVNJQ3DCODML3GBC3BR4TSB3D6S3YQVCQ\r\n    // Transaction QGXMMYIKRV3TE3NWCL6FVNJQ3DCODML3GBC3BR4TSB3D6S3YQVCQ confirmed in round 4273376\r\n    // {\r\n    //     creator: 'THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM',\r\n    //     total: 1000,\r\n    //     decimals: 0,\r\n    //     defaultfrozen: false,\r\n    //     unitname: 'LATINUM',\r\n    //     assetname: 'latinum',\r\n    //     url: 'http://someurl',\r\n    //     metadatahash: 'MTZlZmFhMzkyNGE2ZmQ5ZDNhNDgyNDc5OWE0YWM2NWQ=',\r\n    //     managerkey: 'THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM',\r\n    //     reserveaddr: 'AJNNFQN7DSR7QEY766V7JDG35OPM53ZSNF7CU264AWOOUGSZBMLMSKCRIU',\r\n    //     freezeaddr: 'AJNNFQN7DSR7QEY766V7JDG35OPM53ZSNF7CU264AWOOUGSZBMLMSKCRIU',\r\n    //     clawbackaddr: 'AJNNFQN7DSR7QEY766V7JDG35OPM53ZSNF7CU264AWOOUGSZBMLMSKCRIU'\r\n    // }    \r\n\r\n    // Opting in to an Asset:\r\n    // Opting in to transact with the new asset\r\n    // Allow accounts that want recieve the new asset\r\n    // Have to opt in. To do this they send an asset transfer\r\n    // of the new asset to themseleves \r\n    // In this example we are setting up the 3rd recovered account to \r\n    // receive the new asset\r\n    let sender = recoveredAccount3.addr;\r\n    let recipient = sender;\r\n    // We set revocationTarget to undefined as \r\n    // This is not a clawback operation\r\n    let revocationTarget = undefined;\r\n    // CloseReaminerTo is set to undefined as\r\n    // we are not closing out an asset\r\n    let closeRemainderTo = undefined;\r\n    // We are sending 0 assets\r\n    amount = 0;\r\n\r\n    // First update changing transaction parameters\r\n    // We will account for changing transaction parameters\r\n    // before every transaction in this example\r\n    await getChangingParms(algodclient);\r\n\r\n    // signing and sending \"txn\" allows sender to begin accepting asset specified by creator and index\r\n    let opttxn = algosdk.makeAssetTransferTxn(sender, recipient, closeRemainderTo, revocationTarget,\r\n        cp.fee, amount, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, assetID);\r\n\r\n    // Must be signed by the account wishing to opt in to the asset    \r\n    rawSignedTxn = opttxn.signTxn(recoveredAccount3.sk);\r\n    let opttx = (await algodclient.sendRawTransaction(rawSignedTxn));\r\n    console.log(\"Transaction : \" + opttx.txId);\r\n    // wait for transaction to be confirmed\r\n    await waitForConfirmation(algodclient, opttx.txId);\r\n\r\n    //You should now see the new asset listed in the account information\r\n    act = await algodclient.accountInformation(recoveredAccount3.addr);\r\n    console.log(\"Account Information for: \" + JSON.stringify(act.assets[assetID]));\r\n\r\n    // your console/terminal out put should look as follows\r\n    //   Transaction YT2U2WWBUWB4P54M24OUCMIIN3VDZ64LIDCBMED6AGQIQZKT6PTQ confirmed in round 4273745\r\n    //   Account Information for: { \"creator\": \"THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM\", \"amount\": 0, \"frozen\": false }\r\n\r\n\r\n    // Transfer New Asset:\r\n    // Now that account3 can recieve the new tokens \r\n    // we can tranfer tokens in from the creator\r\n    // to account3\r\n    sender = recoveredAccount1.addr;\r\n    recipient = recoveredAccount3.addr;\r\n    revocationTarget = undefined;\r\n    closeRemainderTo = undefined;\r\n    //Amount of the asset to transfer\r\n    amount = 10;\r\n\r\n    // First update changing transaction parameters\r\n    // We will account for changing transaction parameters\r\n    // before every transaction in this example\r\n    await getChangingParms(algodclient);\r\n\r\n    // signing and sending \"txn\" will send \"amount\" assets from \"sender\" to \"recipient\"\r\n    let xtxn = algosdk.makeAssetTransferTxn(sender, recipient, closeRemainderTo, revocationTarget,\r\n        cp.fee, amount, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, assetID);\r\n    // Must be signed by the account sending the asset  \r\n    rawSignedTxn = xtxn.signTxn(recoveredAccount1.sk)\r\n    let xtx = (await algodclient.sendRawTransaction(rawSignedTxn));\r\n    console.log(\"Transaction : \" + xtx.txId);\r\n    // wait for transaction to be confirmed\r\n    await waitForConfirmation(algodclient, xtx.txId);\r\n\r\n    // You should now see the 10 assets listed in the account information\r\n    act = await algodclient.accountInformation(recoveredAccount3.addr);\r\n    console.log(\"Account Information for: \" + JSON.stringify(act.assets[assetID]));\r\n    // your console/terminal out put should look similar to this:\r\n    //    Transaction: LM2QOJP6FKLX2XIKCDLTM37IEE2IGQ5IMVOEYOCFHKOAUMU5G6ZQ\r\n    //    Transaction LM2QOJP6FKLX2XIKCDLTM37IEE2IGQ5IMVOEYOCFHKOAUMU5G6ZQ confirmed in round 4273946\r\n    //    Account Information for: { \"creator\": \"THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM\", \"amount\": 10, \"frozen\": false }\r\n\r\n\r\n    // freeze asset\r\n\r\n    // The asset was created and configured to allow freezing an account\r\n    // If the freeze address is set \"\", it will no longer be possible to do this.\r\n    // In this example we will now freeze account3 from transacting with the \r\n    // The newly created asset. \r\n    // The freeze transaction is sent from the freeze acount\r\n    // Which in this example is account2 \r\n    from = recoveredAccount2.addr;\r\n    freezeTarget = recoveredAccount3.addr;\r\n    freezeState = true;\r\n\r\n    // First update changing transaction parameters\r\n    // We will account for changing transaction parameters\r\n    // before every transaction in this example\r\n    await getChangingParms(algodclient);\r\n\r\n\r\n    // The freeze transaction needs to be signed by the freeze account\r\n    let ftxn = algosdk.makeAssetFreezeTxn(from, cp.fee, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID,\r\n        assetID, freezeTarget, freezeState)\r\n\r\n    // Must be signed by the freeze account   \r\n    rawSignedTxn = ftxn.signTxn(recoveredAccount2.sk)\r\n    let ftx = (await algodclient.sendRawTransaction(rawSignedTxn));\r\n    console.log(\"Transaction : \" + ftx.txId);\r\n    // wait for transaction to be confirmed\r\n    await waitForConfirmation(algodclient, ftx.txId);\r\n\r\n    // You should now see the asset is frozen listed in the account information\r\n    act = await algodclient.accountInformation(recoveredAccount3.addr);\r\n    console.log(\"Account Information for: \" + JSON.stringify(act.assets[assetID]));\r\n\r\n    //you should see console/terminal output similar to this witht he frozen vales set to true\r\n    //    Transaction: CZ7VYA7UFGRVJ4EHQOLKCPRESDJC4ULHUTWM3QCAPZR3K4KVT2IQ\r\n    //    Transaction CZ7VYA7UFGRVJ4EHQOLKCPRESDJC4ULHUTWM3QCAPZR3K4KVT2IQ confirmed in round 4274065\r\n    //    Account Information for: { \"creator\": \"THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM\", \"amount\": 10, \"frozen\": true }\r\n\r\n\r\n    // Revoke an Asset:\r\n    // The asset was also created with the ability for it to be revoked by \r\n    // the clawbackaddress. If the asset was created or configured by the manager\r\n    // to not allow this by setting the clawbackaddress to \"\" then this would \r\n    // not be possible.\r\n    // We will now clawback the 10 assets in account3. account2\r\n    // is the clawbackaccount and must sign the transaction\r\n    // The sender will be be the clawback adress.\r\n    // the recipient will also be be the creator in this case\r\n    // that is account3\r\n    sender = recoveredAccount2.addr;\r\n    recipient = recoveredAccount1.addr;\r\n    revocationTarget = recoveredAccount3.addr;\r\n    closeRemainderTo = undefined;\r\n    amount = 10;\r\n\r\n    // First update changing transaction parameters\r\n    // We will account for changing transaction parameters\r\n    // before every transaction in this example\r\n    await getChangingParms(algodclient);\r\n\r\n    // signing and sending \"txn\" will send \"amount\" assets from \"revocationTarget\" to \"recipient\",\r\n    // if and only if sender == clawback manager for this asset\r\n    let rtxn = algosdk.makeAssetTransferTxn(sender, recipient, closeRemainderTo, revocationTarget,\r\n        cp.fee, amount, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, assetID);\r\n    // Must be signed by the account that is the clawback address    \r\n    rawSignedTxn = rtxn.signTxn(recoveredAccount2.sk)\r\n    let rtx = (await algodclient.sendRawTransaction(rawSignedTxn));\r\n    console.log(\"Transaction : \" + rtx.txId);\r\n    // wait for transaction to be confirmed\r\n    await waitForConfirmation(algodclient, rtx.txId);\r\n\r\n    // You should now see 0 assets listed in the account information\r\n    // for the third account\r\n    console.log(\"Asset ID: \" + assetID);\r\n    act = await algodclient.accountInformation(recoveredAccount3.addr);\r\n    console.log(\"Account Information for: \" + JSON.stringify(act.assets[assetID]));\r\n\r\n    //you should see console/terminal output similar to below for account 3\r\n    //Transaction MW2ZKQ2GXMVVJSF23AXFUSKQTF43EANJHXJJAXRQ7BSBKDUWZMTA confirmed in round 4274200\r\n    //Asset ID: 149774\r\n    //Account Information for: { \"creator\": \"THQHGD4HEESOPSJJYYF34MWKOI57HXBX4XR63EPBKCWPOJG5KUPDJ7QJCM\", \"amount\": 0, \"frozen\": true }\r\n\r\n\r\n    // Destroy and Asset:\r\n    // All of the created assets should now be back in the creators\r\n    // Account so we can delete the asset.\r\n    // If this is not the case the asset deletion will fail\r\n\r\n    // First update changing transaction parameters\r\n    // We will account for changing transaction parameters\r\n    // before every transaction in this example\r\n    await getChangingParms(algodclient);\r\n\r\n\r\n    // The address for the from field must be the manager account\r\n    // Which is currently the creator addr1\r\n    addr = recoveredAccount1.addr;\r\n\r\n    // if all assets are held by the asset creator,\r\n    // the asset creator can sign and issue \"txn\" to remove the asset from the ledger. \r\n    let dtxn = algosdk.makeAssetDestroyTxn(addr, cp.fee, cp.firstRound, cp.lastRound, note, cp.genHash, cp.genID, assetID);\r\n    // The transaction must be signed by the manager which \r\n    // is currently set to account1\r\n    rawSignedTxn = dtxn.signTxn(recoveredAccount1.sk)\r\n    let dtx = (await algodclient.sendRawTransaction(rawSignedTxn).do());\r\n    console.log(\"Transaction : \" + dtx.txId);\r\n    // wait for transaction to be confirmed\r\n    await waitForConfirmation(algodclient, dtx.txId);\r\n\r\n    // The account3 and account1 should no longer contain the asset as it has been destroyed\r\n    console.log(\"Asset ID: \" + assetID);\r\n    act = await algodclient.accountInformation(recoveredAccount3.addr);\r\n    console.log(\"Account Information for: \" + JSON.stringify(act.assets[assetID]));\r\n\r\n    // your console/terminal output should look similar to this:   \r\n    // Transaction: FGMK2Q5Y2AXSOVSFO3XB6GBWQBUODF7A6QOU5BPHSIJIRA3UJHHQ\r\n    // Transaction FGMK2Q5Y2AXSOVSFO3XB6GBWQBUODF7A6QOU5BPHSIJIRA3UJHHQ confirmed in round 4274286\r\n    // Asset ID: 149783\r\n    // Account Information for: { \"creator\": \"\", \"amount\": 0, \"frozen\": true }\r\n\r\n})().catch(e => {\r\n    console.log(e);\r\n    console.trace();\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  \r\n    const action = useCallback(async () => {\r\n\r\n      \r\n\r\n    });\r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"display-4 mb-1\"></div>\r\n      <div style={{backgroundColor:'white',height:'100px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n<div style={{marginLeft:'0px',height:'40px',width:'100px',color:'white'}}>\r\n\r\n      <img src={Logo} alt=\"Logo\" />\r\n\r\n      <div style={{marginLeft:'10px',marginTop:'',height:'100px',width:'100px'}}>\r\n    \r\n      {/* onClick={event=>{setSearchTerm(event.target.value)}} */}\r\n      {/* onChange={event => {setSearchTerm(event.target.value)}} */}\r\n      {/* value={searchTerm} */}\r\n      <input type=\"text\"  placeholder=\"Search...\"  onChange={event => {setSearchTerm(event.target.value)}}/>\r\n      {\r\n        searchTerm !== '' &&\r\n      <>\r\n      {filterdata().map((val,key)=>{\r\n        \r\n        return (\r\n        <div className='user' key={key}>\r\n          <h5 onClick={()=>setSearchTerm(val.title)} style={{cursor:'pointer'}}>{val.title}</h5>\r\n        </div>\r\n        )\r\n      })}\r\n      </>\r\n}\r\n</div>\r\n</div>\r\n\r\n      {/* <img style={{width:\"100px\",height:\"100px\"}} src=\"/logo.svg\" alt=\"\"/> */}\r\n\r\n      <div style={{backgroundColor:'white',height:'43px',width:'1154px',marginLeft:'150px',marginBlock:'15px'}}>\r\n\r\n\r\n      <button\r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"                \r\n                onClick={algocons}\r\n              >\r\n                algo\r\n              </button>\r\n              {' '}\r\n\r\n      <Link\r\n              to=\"/\">              \r\n              <button\r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"                \r\n              >\r\n                Home\r\n              </button>\r\n</Link>\r\n              {' '}\r\n            <Link\r\n              to=\"/explore\">             \r\n              <button              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"                \r\n              >\r\n                Explore\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/followingpage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n              >\r\n               How it works\r\n              </button>\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // \r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <button style={{whitespace: 'nowrap', \r\n  width:'200px', \r\n  overflow:'hidden',\r\n  textoverflow:'ellipsis'}}\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n              {\" \"}\r\n{/* <h2>Welcome</h2> */}\r\n<button onClick={handleLogout}>Logout</button>\r\n{/* </nav> */}\r\n\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n              <br></br>     \r\n<div>\r\n<div>\r\n    <Online>\r\n    \r\n\r\n</Online>\r\n\r\n    </div>\r\n\r\n    <div>\r\n\r\n    <Offline>\r\n\r\n\r\n    {/* {<Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your are offline please check your internet connection......</p>\r\n        <center> */}\r\n        {/* <button type=\"button\" onClick={togglePopup}>close</button> */}\r\n        {/* </center> */}\r\n      {/* </>} */}\r\n    {/* //  handleClose={togglePopup} */}\r\n    {/* />} */}\r\n\r\n\r\n    </Offline>\r\n\r\n    </div>\r\n\r\n</div>\r\n{/* <center> */}\r\n\r\n{/* {isLoading ? <div>\r\n              <img style={{width:\"300px\",height:\"300px\"}} src=\"/4V0b.gif\" alt=\"\"/></div>:' '} */}\r\n\r\n{/* </center> */}\r\n<div  style={{backgroundColor:'white',marginBlock:'5px',display:'flex',width:'1500px'}}>\r\n<h4 style={{color:'skyblue'}}>Top &nbsp;\r\n\r\n      <select onChange={changeSelectOptionHandler}>\r\n            <option value='Sellers'>Sellers</option>\r\n            <option value='Buyers'>Buyers</option>\r\n          </select>\r\n\r\n      &nbsp;in&nbsp;\r\n      \r\n{/* style={{color:'white'}} */}\r\n\r\n      <select onChange={changeSelectOptionHandlers}>\r\n            <option value='1'>1 day</option>\r\n            <option value='8'>7 days</option>\r\n            <option value='32'>30 days</option>\r\n          </select>\r\n\r\n&nbsp;\r\n\r\n      {/* onClick={()=>{feedbackset()}} */}\r\n\r\n      {/* <button type=\"button\" onClick={()=>{filterSet()}}  style={{height:'5px',backgroundColor:'white',border:'none',color:'skyblue',fontSize:'15px'}}>Filter</button> */}\r\n\r\n\r\n      </h4>\r\n\r\n\r\n</div>    \r\n\r\n{getImsellers.length === 0 ? null :( \r\n  <div style={{backgroundColor:'black',display:'flex',flexWrap:'wrap',marginBottom:'5px'}}>\r\n{filterdata().map((a)=>{  \r\n    return (\r\n      <div style={{backgroundColor:'black',height:'360px',width:'300px',marginLeft:'60px',marginTop:'30px',marginBottom:'10px'}}>\r\n\r\n<div style={{border: '2px solid white',borderRadius:'5px',marginBottom:'10px'}}>\r\n\r\n<center>\r\n    <Link                  \r\n                  to={{   \r\n                    pathname: `/explore/${a.addKeyI}/${a.addOwnerAddress}`,\r\n                    //pathname: `/explore/${combine}`,\r\n                  }}\r\n                >\r\n    <img   src={a.addImgs}  style={{height:120,width:120,marginTop:'10px'}} alt=\"\"    />\r\n    </Link>\r\n    {/* <h5>hello{a[b].imageUrl}</h5> */}\r\n  \r\n    <h6 style={{color:'white'}}>Name : {a.addUname}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>Symbol : {a.addUsymbol}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>price : {a.addPrices}</h6>\r\n\r\n    {a.addsold === '' ? (\r\n<>\r\n{/* onClick={()=>buynow(a)} */}\r\n{ <button  >BuyNow</button> }\r\n  \r\n    {' '}\r\n</>\r\n    ):(\r\n\r\n      <h4 style={{color:'white'}}>Already solded</h4>\r\n    )}\r\n</center>\r\n</div>\r\n\r\n</div>\r\n)})}\r\n  </div>\r\n)}\r\n  \r\n\r\n<div>\r\n\r\n{/* {Loader?\r\n<h1>Loading.....</h1>\r\n: */}\r\n<>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n{getIm.length === 0 ? null :( \r\n<div style={{backgroundColor:'black',display:'flex',flexWrap:'wrap',marginBottom:'20px'}}>\r\n{/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n{filterdatas().map((a)=>{\r\n  console.log(`a`, a)\r\n  // Object.keys(a).map((b)=>{\r\n  //   console.log(`b`, b)\r\n  //   console.log(`bnext`, a[b].imageUrl)        \r\n  // })\r\n  //if((a.addId !== ' ') && (a.addsrc !== ' '))\r\n//  if(a.addsold === '')\r\n//  {\r\n    return (\r\n      \r\n      <div style={{backgroundColor:'black',height:'350px',width:'300px',marginLeft:'60px',marginBottom:'10px'}}>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n<div style={{border: '2px solid white',borderRadius:'5px'}}>\r\n\r\n{/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n<center>\r\n  \r\n    <Link                  \r\n                  to={{   \r\n                    pathname: `/explore/${a.addKeyI}/${a.addOwnerAddress}`,\r\n                    //pathname: `/explore/${combine}`,\r\n                  }}\r\n                >\r\n    <img   src={a.addImgs}  style={{height:120,width:120,marginTop:'10px'}} alt=\"\"    />\r\n    \r\n    \r\n    </Link>\r\n    {/* <h5>hello{a[b].imageUrl}</h5> */}\r\n  \r\n    <h6 style={{color:'white'}}>Name : {a.addUname}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>Symbol : {a.addUsymbol}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>price : {a.addPrices}</h6>\r\n\r\n    {a.addsold === '' ? (\r\n<>\r\n{ <button onClick={()=>buynow(a)} >BuyNow</button> }\r\n\r\n\r\n  \r\n    {' '}\r\n</>\r\n\r\n    ):(\r\n\r\n      <h6 style={{color:'white'}}>Already solded</h6>\r\n\r\n\r\n    )}\r\n    \r\n    </center>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n</div>\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n    {isOpen && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your token has been buyed successfully......</p>\r\n        <center>\r\n        <button type=\"button\" onClick={togglePopup}>close</button>\r\n        </center>\r\n      </>}\r\n       handleClose={togglePopup}\r\n    />}\r\n\r\n    {/* </div> */}\r\n\r\n    </div>\r\n    )\r\n  })}\r\n</div>\r\n)}\r\n</>\r\n</div>                    \r\n  \r\n  <div style={{backgroundColor:'white',height:'200px',width:'1500px',marginBlock:'5px',display:'flex',marginLeft:'2px'}} >\r\n  <Footer/>\r\n  <div>\r\n  <h4 style={{color:'black'}}>Get the latest Rarible updates</h4>\r\n&nbsp;\r\n  <input\r\n  placeholder='Your e-mail'\r\n  type='text'\r\n  name=\"Feedbackc\"\r\n  required\r\n  onChange={event => setFeedbackc( event.target.value)}\r\n  \r\n/>\r\n\r\n{' '}\r\n    <button type=\"button\" onClick={()=>{feedbackset()}} style={{height:'40px'}}>Submit</button>\r\n\r\n</div>\r\n\r\n<div style={{marginLeft:'100px'}}>  \r\n\r\n<h4 style={{color:'black'}}>Rarible</h4>\r\n\r\n<Link\r\n              to=\"/explore\" style={{ textDecoration: 'none' }}><h4 style={{color:'black'}}>Explore</h4></Link>\r\n<Link\r\nstyle={{ textDecoration: 'none' }}\r\n              to=\"/howitworkpage\"><h4 style={{color:'black'}}>How it works</h4></Link>\r\n<Link\r\nstyle={{ textDecoration: 'none' }}\r\n              to=\"/nft\"><h4 style={{color:'black'}}>Create</h4></Link>\r\n<h4 style={{color:'black'}}>Support</h4>\r\n\r\n</div>\r\n\r\n<div style={{marginLeft:'200px'}}>  \r\n\r\n\r\n<Link\r\nstyle={{ textDecoration: 'none' }}\r\n              to=\"/communitypage\"><h4 style={{color:'black'}}>Community</h4></Link>\r\n<h4 style={{color:'black'}}>RARI Token</h4>\r\n<h4 style={{color:'black'}}>Discussion</h4>\r\n<h4 style={{color:'black'}}>Voting</h4>\r\n<h4 style={{color:'black'}}>Suggest feature</h4>\r\n\r\n</div>\r\n\r\n<div style={{marginLeft:'250px'}}>  \r\n\r\n\r\n<DarkMode />\r\n\r\n{/* <h4 style={{color:'black'}}>Language</h4> */}\r\n</div>\r\n    &nbsp;\r\n  </div>\r\n\r\n  {isOpenFeed && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your Email has been sent successfully......</p>\r\n        <button type=\"button\" onClick={togglePopupFeed}>close</button>\r\n      </>}\r\n      // handleClose={togglePopup}\r\n    />}\r\n\r\n\r\n    </>\r\n\r\n  );\r\n}\r\nexport default Explore;"]},"metadata":{},"sourceType":"module"}