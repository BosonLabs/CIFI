{"ast":null,"code":"var Stream = require('stream');\n\nmodule.exports = duplex;\n\nmodule.exports.source = function (source) {\n  return duplex(null, source);\n};\n\nmodule.exports.sink = function (sink) {\n  return duplex(sink, null);\n};\n\nvar next = 'undefined' === typeof setImmediate ? process.nextTick : setImmediate;\n\nfunction duplex(reader, read) {\n  if (reader && 'object' === typeof reader) {\n    read = reader.source;\n    reader = reader.sink;\n  }\n\n  var cbs = [],\n      input = [],\n      ended,\n      needDrain;\n  var s = new Stream();\n  s.writable = s.readable = true;\n\n  s.write = function (data) {\n    if (cbs.length) cbs.shift()(null, data);else input.push(data);\n\n    if (!cbs.length) {\n      needDrain = true;\n    }\n\n    return !!cbs.length;\n  };\n\n  s.end = function () {\n    if (read) {\n      if (input.length) drain();else read(ended = true, cbs.length ? cbs.shift() : function () {});\n    } else if (cbs.length) {\n      cbs.shift()(true);\n    }\n  };\n\n  s.source = function (end, cb) {\n    if (input.length) {\n      cb(null, input.shift());\n      if (!input.length) s.emit('drain');\n    } else {\n      if (ended = ended || end) cb(ended);else cbs.push(cb);\n\n      if (needDrain) {\n        needDrain = false;\n        s.emit('drain');\n      }\n    }\n  };\n\n  var n;\n  if (reader) n = reader(s.source);\n  if (n && !read) read = n;\n  var output = [],\n      _cbs = [];\n  var _ended = false,\n      waiting = false,\n      busy = false;\n\n  s.sink = function (_read) {\n    read = _read;\n    next(drain);\n  };\n\n  if (read) {\n    s.sink(read);\n    var pipe = s.pipe.bind(s);\n\n    s.pipe = function (dest, opts) {\n      var res = pipe(dest, opts);\n      if (s.paused) s.resume();\n      return res;\n    };\n  }\n\n  function drain() {\n    waiting = false;\n    if (!read || busy) return;\n\n    while (output.length && !s.paused) {\n      s.emit('data', output.shift());\n    }\n\n    if (s.paused) return;\n    if (_ended) return s.emit('end');\n    busy = true;\n    read(null, function next(end, data) {\n      busy = false;\n\n      if (s.paused) {\n        if (end === true) _ended = end;else if (end) s.emit('error', end);else output.push(data);\n        waiting = true;\n      } else {\n        if (end && (ended = end) !== true) s.emit('error', end);else if (ended = ended || end) s.emit('end');else {\n          s.emit('data', data);\n          busy = true;\n          read(null, next);\n        }\n      }\n    });\n  }\n\n  s.pause = function () {\n    s.paused = true;\n    return s;\n  };\n\n  s.resume = function () {\n    s.paused = false;\n    drain();\n    return s;\n  };\n\n  s.destroy = function () {\n    if (!ended && read) read(ended = true, function () {});\n    ended = true;\n    if (cbs.length) cbs.shift()(true);\n    s.emit('close');\n  };\n\n  return s;\n}","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/node_modules/pull-stream-to-stream/index.js"],"names":["Stream","require","module","exports","duplex","source","sink","next","setImmediate","process","nextTick","reader","read","cbs","input","ended","needDrain","s","writable","readable","write","data","length","shift","push","end","drain","cb","emit","n","output","_cbs","_ended","waiting","busy","_read","pipe","bind","dest","opts","res","paused","resume","pause","destroy"],"mappings":"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","sourcesContent":["\r\nvar Stream = require('stream')\r\n\r\nmodule.exports = duplex\r\n\r\n\r\nmodule.exports.source = function (source) {\r\n  return duplex(null, source)\r\n}\r\n\r\nmodule.exports.sink = function (sink) {\r\n  return duplex(sink, null)\r\n}\r\n\r\nvar next = (\r\n  'undefined' === typeof setImmediate\r\n  ? process.nextTick\r\n  : setImmediate\r\n)\r\n\r\nfunction duplex (reader, read) {\r\n  if(reader && 'object' === typeof reader) {\r\n    read = reader.source\r\n    reader = reader.sink\r\n  }\r\n\r\n  var cbs = [], input = [], ended, needDrain\r\n  var s = new Stream()\r\n  s.writable = s.readable = true\r\n  s.write = function (data) {\r\n    if(cbs.length)\r\n      cbs.shift()(null, data)\r\n    else\r\n      input.push(data)\r\n\r\n    if (!cbs.length) {\r\n      needDrain = true\r\n    }\r\n    return !!cbs.length\r\n  }\r\n\r\n  s.end = function () {\r\n    if(read) {\r\n      if (input.length)\r\n        drain()\r\n      else\r\n        read(ended = true, cbs.length ? cbs.shift() : function () {})\r\n    } else if(cbs.length) {\r\n      cbs.shift()(true)\r\n    }\r\n  }\r\n\r\n  s.source = function (end, cb) {\r\n    if(input.length) {\r\n      cb(null, input.shift())\r\n      if(!input.length)\r\n        s.emit('drain')\r\n    }\r\n    else {\r\n      if(ended = ended || end)\r\n        cb(ended)\r\n      else\r\n        cbs.push(cb)\r\n\r\n      if (needDrain) {\r\n        needDrain = false\r\n        s.emit('drain')\r\n      }\r\n    }\r\n  }\r\n\r\n  var n\r\n  if(reader) n = reader(s.source)\r\n  if(n && !read) read = n\r\n\r\n  var output = [], _cbs = []\r\n  var _ended = false, waiting = false, busy = false\r\n\r\n  s.sink = function (_read) {\r\n    read = _read\r\n    next(drain)\r\n  }\r\n\r\n  if(read) {\r\n    s.sink(read)\r\n\r\n    var pipe = s.pipe.bind(s)\r\n    s.pipe = function (dest, opts) {\r\n      var res = pipe(dest, opts)\r\n\r\n      if(s.paused) s.resume()\r\n\r\n      return res\r\n    }\r\n  }\r\n\r\n  function drain () {\r\n    waiting = false\r\n    if(!read || busy) return\r\n    while(output.length && !s.paused) {\r\n      s.emit('data', output.shift())\r\n    }\r\n    if(s.paused) return\r\n    if(_ended)\r\n      return s.emit('end')\r\n\r\n    busy = true\r\n    read(null, function next (end, data) {\r\n      busy = false\r\n      if(s.paused) {\r\n        if(end === true) _ended = end\r\n        else if(end) s.emit('error', end)\r\n        else output.push(data)\r\n        waiting = true\r\n      } else {\r\n        if(end && (ended = end) !== true)\r\n          s.emit('error', end)\r\n        else if(ended = ended || end) s.emit('end')\r\n        else {\r\n          s.emit('data', data)\r\n          busy = true\r\n          read(null, next)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  s.pause = function () {\r\n    s.paused = true\r\n    return s\r\n  }\r\n\r\n  s.resume = function () {\r\n    s.paused = false\r\n    drain()\r\n    return s\r\n  }\r\n\r\n  s.destroy = function () {\r\n    if(!ended && read)\r\n      read(ended = true, function () {})\r\n    ended = true\r\n    if(cbs.length)\r\n      cbs.shift()(true)\r\n\r\n    s.emit('close')\r\n  }\r\n\r\n  return s\r\n}\r\n"]},"metadata":{},"sourceType":"script"}