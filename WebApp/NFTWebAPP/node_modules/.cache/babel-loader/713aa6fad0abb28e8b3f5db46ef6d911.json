{"ast":null,"code":"var _jsxFileName = \"C:\\\\demoAlgo\\\\smart-contracts\\\\devrel\\\\algosigner-react\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\NewfileMar.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css'; //import vabi from \"./vault.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport web3 from './web3'; //import token from './token.js';\n//import vault from './vault.js';\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewfileMar() {\n  _s();\n\n  const [tid, setId] = useState(\"\");\n  const [tid1, setId1] = useState(\"\");\n  const [toaddress, setId2] = useState([]);\n  const [fromaddress, setId3] = useState([]);\n  const [value, setId4] = useState([]);\n  const [len, setId5] = useState([]);\n  const [req2, setId6] = useState([]);\n  const [datas, setId7] = useState(\"\");\n  const [bookss, setBookss] = useState(null);\n\n  const bal = async () => {\n    //let account = await web3.eth.getAccounts();\n    //Returns the Balance of account\n    // const a = await token.methods.balanceOf(account[0]).call();\n    //   setId(a/1000000000);\n    //Returns the seconds left for Locking account;\n    // const b = await vault.methods.secondsLeft(account[0]).call();\n    //   setId1(b);\n    //timing concept\n\n    /*\r\n           var d= new Date(0);\r\n           d.setUTCSeconds(tid1);\r\n           alert(d);//d has the date and time\r\n           \r\n           */\n    const response = await fetch(\"https://api-testnet.bscscan.com/api?module=account&action=tokentx&address=0xDE949e5CC31062c71aD5180f050eE3b7C9f79037&startblock=0&endblock=99999999&sort=asc&apikey=YourApiKeyToken\");\n    const data = await response.json();\n    setId7(data.result); //console.log(\"data\",data);\n    //console.log(\"req2\",req2);\n  };\n\n  useEffect(() => {\n    bal();\n  }, []);\n  console.log(\"datas\", datas);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"white\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        style: {\n          backgroundColor: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"BURN VAULT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 14\n        }, this), datas.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: datas.map(a => {\n            //console.log(`a`, a)\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: a.to\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 13\n                      }, this), \"\\xA0\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: a.from\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: a.value\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 11\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 9\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewfileMar, \"YF9/qAratE452Tdo9JIXAS5uRT4=\");\n\n_c = NewfileMar;\nexport default NewfileMar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewfileMar\");","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/src/NewfileMar.js"],"names":["React","useState","useEffect","web3","axios","NewfileMar","tid","setId","tid1","setId1","toaddress","setId2","fromaddress","setId3","value","setId4","len","setId5","req2","setId6","datas","setId7","bookss","setBookss","bal","response","fetch","data","json","result","console","log","backgroundColor","length","map","a","to","from"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\n//import vabi from \"./vault.js\";\r\nimport React, { useState,useEffect } from \"react\";\r\nimport web3 from './web3';\r\n//import token from './token.js';\r\n//import vault from './vault.js';\r\nimport axios from 'axios';\r\n\r\nfunction NewfileMar() {\r\n  const [tid,setId] = useState(\"\");\r\n  const [tid1,setId1] = useState(\"\");\r\n  const [toaddress,setId2] = useState([]);\r\n  const [fromaddress,setId3] = useState([]);\r\n  const [value,setId4] = useState([]);\r\n  const [len,setId5] = useState([]);\r\nconst [req2,setId6] = useState([]);\r\nconst[datas,setId7] = useState(\"\");\r\nconst [bookss, setBookss] = useState(null);\r\n\r\n\r\n\r\n  const bal = async() => {\r\n    //let account = await web3.eth.getAccounts();\r\n\r\n//Returns the Balance of account\r\n// const a = await token.methods.balanceOf(account[0]).call();\r\n//   setId(a/1000000000);\r\n\r\n//Returns the seconds left for Locking account;\r\n    // const b = await vault.methods.secondsLeft(account[0]).call();\r\n    //   setId1(b);\r\n\r\n//timing concept\r\n/*\r\n       var d= new Date(0);\r\n       d.setUTCSeconds(tid1);\r\n       alert(d);//d has the date and time\r\n       \r\n       */ \r\n\r\n\r\nconst response = await fetch(\"https://api-testnet.bscscan.com/api?module=account&action=tokentx&address=0xDE949e5CC31062c71aD5180f050eE3b7C9f79037&startblock=0&endblock=99999999&sort=asc&apikey=YourApiKeyToken\");\r\nconst data = await response.json();\r\nsetId7(data.result);\r\n//console.log(\"data\",data);\r\n\r\n//console.log(\"req2\",req2);\r\n\r\n\r\n}\r\nuseEffect(()=>{bal()},[])\r\nconsole.log(\"datas\",datas);\r\n\r\n  return (\r\n    \r\n    <div style={{backgroundColor:\"white\"}}> \r\n\r\n     <body  >\r\n        \r\n\r\n      <center style={{backgroundColor:\"white\"}}>\r\n        <br />\r\n        <br />\r\n       <h1>BURN VAULT</h1>\r\n       <br /><br />\r\n   \r\n   {datas.length === 0 ? null : (\r\n       <div>\r\n{datas.map((a)=>{\r\n     \r\n          \r\n        //console.log(`a`, a)\r\n        return (\r\n          <div>\r\n              <table>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <h5>{a.to}</h5>\r\n            &nbsp;\r\n          </td>\r\n          <td>\r\n            <h5>{a.from}</h5>\r\n          </td>\r\n          <td>\r\n            <h4>{a.value}</h4>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n            </div>\r\n            \r\n           )   \r\n            \r\n        \r\n      })}\r\n\r\n      </div>\r\n\r\n)}\r\n\r\n\r\n      \r\n     <br/>\r\n      </center>\r\n      </body>\r\n      </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default NewfileMar;\r\n"]},"metadata":{},"sourceType":"module"}