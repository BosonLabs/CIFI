{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst cleanMultihash = require('../utils/clean-multihash');\n\nmodule.exports = send => {\n  return promisify((multihash, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    if (!opts) {\n      opts = {};\n    }\n\n    try {\n      multihash = cleanMultihash(multihash, opts);\n    } catch (err) {\n      return callback(err);\n    }\n\n    send({\n      path: 'object/stat',\n      args: multihash\n    }, callback);\n  });\n};","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/node_modules/ipfs-api/src/object/stat.js"],"names":["promisify","require","cleanMultihash","module","exports","send","multihash","opts","callback","err","path","args"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,0BAAD,CAA9B;;AAEAE,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;AACzB,SAAOL,SAAS,CAAC,CAACM,SAAD,EAAYC,IAAZ,EAAkBC,QAAlB,KAA+B;AAC9C,QAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC9BC,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACD,QAAI,CAACA,IAAL,EAAW;AACTA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAED,QAAI;AACFD,MAAAA,SAAS,GAAGJ,cAAc,CAACI,SAAD,EAAYC,IAAZ,CAA1B;AACD,KAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,aAAOD,QAAQ,CAACC,GAAD,CAAf;AACD;;AAEDJ,IAAAA,IAAI,CAAC;AACHK,MAAAA,IAAI,EAAE,aADH;AAEHC,MAAAA,IAAI,EAAEL;AAFH,KAAD,EAGDE,QAHC,CAAJ;AAID,GAnBe,CAAhB;AAoBD,CArBD","sourcesContent":["'use strict'\r\n\r\nconst promisify = require('promisify-es6')\r\nconst cleanMultihash = require('../utils/clean-multihash')\r\n\r\nmodule.exports = (send) => {\r\n  return promisify((multihash, opts, callback) => {\r\n    if (typeof opts === 'function') {\r\n      callback = opts\r\n      opts = {}\r\n    }\r\n    if (!opts) {\r\n      opts = {}\r\n    }\r\n\r\n    try {\r\n      multihash = cleanMultihash(multihash, opts)\r\n    } catch (err) {\r\n      return callback(err)\r\n    }\r\n\r\n    send({\r\n      path: 'object/stat',\r\n      args: multihash\r\n    }, callback)\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"script"}