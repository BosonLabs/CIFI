{"ast":null,"code":"var _jsxFileName = \"D:\\\\BosonLabsNFTPROJECT\\\\nftsecondprabha\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\Testing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport web3 from './web3';\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Nft from \"./Nft\";\nimport Sendpage from \"./Sendpage\";\nimport Newpage from \"./Newpage\";\nimport Tokencreate from \"./Tokencreate\";\nimport Printallimage from \"./Printallimage\";\nimport getaaa from \"./abinft\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  var names = [];\n  const [afternames, setAfternames] = useState([]);\n  const [tid, setId] = useState(\"\");\n\n  const testSample = async () => {\n    console.log(\"waiting for pic url\");\n    console.log(\"completed\");\n    console.log(\"check\" + localStorage.getItem('myData'));\n    console.log(\"geta\" + getaaa);\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts[0]);\n    var printgeta = await getaaa.methods.tokensOfOwner(accounts[0]).call(); //var get=printgeta.split(\",\")[0];\n\n    for (var i = 0; i < printgeta.length; i++) {\n      names.push(printgeta[i]);\n    } //console.log(\"split owner address  \"+printgeta.length)\n\n\n    console.log(\"owner address\" + printgeta);\n    var after = [];\n\n    for (i = 0; i < printgeta.length; i++) {\n      //var nameget=names[i];\n      after.push(await getaaa.methods.tokenURI(names[i]).call()); //afternames.push(await getaaa.methods.tokenURI(names[i]).call());\n      // event.preventDefault();\n      //console.log(\"console.log kulla \"+afternames.push(await getaaa.methods.tokenURI(names[i]).call()))\n\n      console.log(names[i]);\n    }\n\n    setAfternames(after);\n  };\n\n  {\n    testSample();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"prag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"ram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 1\n    }, this), \"testSample\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"RMwXH8/dAj64UtFFpJoDoqK2vOs=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["D:/BosonLabsNFTPROJECT/nftsecondprabha/CIFI/WebApp/NFTWebAPP/src/Testing.js"],"names":["React","useState","useEffect","web3","Router","Route","Switch","Nft","Sendpage","Newpage","Tokencreate","Printallimage","getaaa","Test","names","afternames","setAfternames","tid","setId","testSample","console","log","localStorage","getItem","accounts","eth","getAccounts","printgeta","methods","tokensOfOwner","call","i","length","push","after","tokenURI"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,QAAsC,kBAAtC;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AAEb,MAAIC,KAAK,GAAG,EAAZ;AAEA,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6Bf,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACgB,GAAD,EAAKC,KAAL,IAAcjB,QAAQ,CAAC,EAAD,CAA5B;;AACE,QAAMkB,UAAU,GAAE,YAAS;AAKnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAMFD,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAGAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAQC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAApB;AAGAH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAOT,MAAnB;AAEA,UAAMY,QAAQ,GAAG,MAAMrB,IAAI,CAACsB,GAAL,CAASC,WAAT,EAAvB;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAAC,CAAD,CAApB;AAME,QAAIG,SAAS,GAAC,MAAMf,MAAM,CAACgB,OAAP,CAAeC,aAAf,CAA6BL,QAAQ,CAAC,CAAD,CAArC,EAA0CM,IAA1C,EAApB,CA3BmB,CA8BnB;;AAEA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,SAAS,CAACK,MAAxB,EAA+BD,CAAC,EAAhC,EAAmC;AAEjCjB,MAAAA,KAAK,CAACmB,IAAN,CAAWN,SAAS,CAACI,CAAD,CAApB;AAED,KApCkB,CAsCnB;;;AAEAX,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBM,SAA5B;AAIA,QAAIO,KAAK,GAAE,EAAX;;AACA,SAAIH,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACJ,SAAS,CAACK,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAE7B;AACAG,MAAAA,KAAK,CAACD,IAAN,CAAW,MAAMrB,MAAM,CAACgB,OAAP,CAAeO,QAAf,CAAwBrB,KAAK,CAACiB,CAAD,CAA7B,EAAkCD,IAAlC,EAAjB,EAH6B,CAK7B;AAED;AAEC;;AAEAV,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACiB,CAAD,CAAjB;AAED;;AACDf,IAAAA,aAAa,CAACkB,KAAD,CAAb;AAMP,GAjED;;AAmEA;AAACf,IAAAA,UAAU;AAAG;AACd,sBACI;AAAA,4BACI;AAAI,MAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,YADJ,eAMR;AAAI,MAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,YANQ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAvFQN,I;;KAAAA,I;AAwFT,eAAeA,IAAf","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport web3 from './web3';\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Nft from \"./Nft\";\r\nimport Sendpage from \"./Sendpage\";\r\nimport Newpage from \"./Newpage\";\r\nimport Tokencreate from \"./Tokencreate\";\r\nimport Printallimage from \"./Printallimage\";\r\nimport getaaa from \"./abinft\";\r\n\r\nfunction Test(){\r\n     \r\n  var names = [];\r\n \r\n  const [afternames,setAfternames] = useState([]);\r\n  const [tid,setId] = useState(\"\"); \r\n    const testSample =async()=>{\r\n\r\n       \r\n    \r\n    \r\n            console.log(\"waiting for pic url\");\r\n          \r\n           \r\n          \r\n          \r\n              \r\n          console.log(\"completed\");    \r\n          \r\n          \r\n          console.log(\"check\"+localStorage.getItem('myData'));\r\n      \r\n      \r\n          console.log(\"geta\"+getaaa);\r\n         \r\n          const accounts = await web3.eth.getAccounts();\r\n      \r\n          console.log(accounts[0])\r\n      \r\n      \r\n      \r\n      \r\n      \r\n            var printgeta=await getaaa.methods.tokensOfOwner(accounts[0]).call();\r\n      \r\n      \r\n            //var get=printgeta.split(\",\")[0];\r\n      \r\n            for(var i=0;i<printgeta.length;i++){\r\n      \r\n              names.push(printgeta[i]);\r\n      \r\n            }\r\n      \r\n            //console.log(\"split owner address  \"+printgeta.length)\r\n      \r\n            console.log(\"owner address\"+printgeta)\r\n      \r\n      \r\n            \r\n            var after =[];      \r\n            for(i=0;i<printgeta.length;i++){\r\n      \r\n              //var nameget=names[i];\r\n              after.push(await getaaa.methods.tokenURI(names[i]).call());\r\n      \r\n              //afternames.push(await getaaa.methods.tokenURI(names[i]).call());\r\n      \r\n             // event.preventDefault();\r\n      \r\n              //console.log(\"console.log kulla \"+afternames.push(await getaaa.methods.tokenURI(names[i]).call()))\r\n      \r\n              console.log(names[i])\r\n      \r\n            }\r\n            setAfternames(after)\r\n      \r\n\r\n\r\n\r\n\r\n    }\r\n    \r\n    {testSample()}\r\n    return(\r\n        <div>\r\n            <ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n            testSample\r\n        </div>\r\n    )\r\n}\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}