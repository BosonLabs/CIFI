{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nmodule.exports = send => {\n  return promisify((key, value, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    if (typeof key !== 'string') {\n      return callback(new Error('Invalid key type'));\n    }\n\n    if (value === undefined || Buffer.isBuffer(value)) {\n      return callback(new Error('Invalid value type'));\n    }\n\n    if (typeof value === 'object') {\n      value = JSON.stringify(value);\n      opts = {\n        json: true\n      };\n    }\n\n    if (typeof value === 'boolean') {\n      value = value.toString();\n      opts = {\n        bool: true\n      };\n    }\n\n    send({\n      path: 'config',\n      args: [key, value],\n      qs: opts,\n      files: undefined,\n      buffer: true\n    }, callback);\n  });\n};","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/node_modules/ipfs-api/src/config/set.js"],"names":["promisify","require","module","exports","send","key","value","opts","callback","Error","undefined","Buffer","isBuffer","JSON","stringify","json","toString","bool","path","args","qs","files","buffer"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEAC,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;AACzB,SAAOJ,SAAS,CAAC,CAACK,GAAD,EAAMC,KAAN,EAAaC,IAAb,EAAmBC,QAAnB,KAAgC;AAC/C,QAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC9BC,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACD,QAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6B;AAC3B,aAAOG,QAAQ,CAAC,IAAIC,KAAJ,CAAU,kBAAV,CAAD,CAAf;AACD;;AAED,QAAIH,KAAK,KAAKI,SAAV,IAAuBC,MAAM,CAACC,QAAP,CAAgBN,KAAhB,CAA3B,EAAmD;AACjD,aAAOE,QAAQ,CAAC,IAAIC,KAAJ,CAAU,oBAAV,CAAD,CAAf;AACD;;AAED,QAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,MAAAA,KAAK,GAAGO,IAAI,CAACC,SAAL,CAAeR,KAAf,CAAR;AACAC,MAAAA,IAAI,GAAG;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAP;AACD;;AAED,QAAI,OAAOT,KAAP,KAAiB,SAArB,EAAgC;AAC9BA,MAAAA,KAAK,GAAGA,KAAK,CAACU,QAAN,EAAR;AACAT,MAAAA,IAAI,GAAG;AAAEU,QAAAA,IAAI,EAAE;AAAR,OAAP;AACD;;AAEDb,IAAAA,IAAI,CAAC;AACHc,MAAAA,IAAI,EAAE,QADH;AAEHC,MAAAA,IAAI,EAAE,CAACd,GAAD,EAAMC,KAAN,CAFH;AAGHc,MAAAA,EAAE,EAAEb,IAHD;AAIHc,MAAAA,KAAK,EAAEX,SAJJ;AAKHY,MAAAA,MAAM,EAAE;AALL,KAAD,EAMDd,QANC,CAAJ;AAOD,GA9Be,CAAhB;AA+BD,CAhCD","sourcesContent":["'use strict'\r\n\r\nconst promisify = require('promisify-es6')\r\n\r\nmodule.exports = (send) => {\r\n  return promisify((key, value, opts, callback) => {\r\n    if (typeof opts === 'function') {\r\n      callback = opts\r\n      opts = {}\r\n    }\r\n    if (typeof key !== 'string') {\r\n      return callback(new Error('Invalid key type'))\r\n    }\r\n\r\n    if (value === undefined || Buffer.isBuffer(value)) {\r\n      return callback(new Error('Invalid value type'))\r\n    }\r\n\r\n    if (typeof value === 'object') {\r\n      value = JSON.stringify(value)\r\n      opts = { json: true }\r\n    }\r\n\r\n    if (typeof value === 'boolean') {\r\n      value = value.toString()\r\n      opts = { bool: true }\r\n    }\r\n\r\n    send({\r\n      path: 'config',\r\n      args: [key, value],\r\n      qs: opts,\r\n      files: undefined,\r\n      buffer: true\r\n    }, callback)\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"script"}