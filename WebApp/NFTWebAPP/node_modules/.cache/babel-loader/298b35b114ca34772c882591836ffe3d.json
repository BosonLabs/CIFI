{"ast":null,"code":"var _jsxFileName = \"C:\\\\demoAlgo\\\\smart-contracts\\\\devrel\\\\algosigner-react\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\Explore.js\",\n    _s = $RefreshSig$();\n\n/* global AlgoSigner */\nimport moment from 'moment';\nimport React, { useState, useEffect, useCallback } from \"react\"; //import history from \"./utils/history\";\n\nimport web3 from './web3'; // Router, Route, Switch,\n\nimport { Link } from \"react-router-dom\"; //import Myitem from \"./Myitem\";\n//import Nft from \"./Nft\";\n//import firebase from \"./firebase\";\n\nimport fireDb from \"./firebase\"; //import Followingpage from \"./Followingpage\";\n//import Activitypage from \"./Activitypage\";\n//import Howitworkpage from \"./Howitworkpage\";\n//import Communitypage from \"./Communitypage\";\n\nimport firebase from \"firebase\";\nimport { abi } from './datas'; //import Mypurchasepage from './Mypurchasepage'\n\nimport { tra } from './trans'; //import Createandpurchasepage from './Createandpurchasepage'\n//import Receivedpage from './Receivedpage';\n\nimport Popup from './Popup';\nimport { Offline, Online } from \"react-detect-offline\";\nimport Footer from './footer';\nimport Logo from \"./logo.svg\"; //import JSONDATA from './MOCK_DATA.json';\n// import SearchBar from './SearchBar';\n//import CountryList from './CountryList';\n\nimport \"./App.css\"; //import DarkMode from \"./DarkMode\"\n\nimport { TwitterShareButton, TwitterIcon } from \"react-share\";\nimport { Button, Container, Header, Message } from \"semantic-ui-react\"; // import TelegramLoginButton, { TelegramUser } from 'telegram-login-button';\n\nconst Explore = ({\n  handleLogout\n}) => {\n  _s();\n\n  //start transfer\n  const TransferAsset = async () => {\n    const algosdk = require('algosdk');\n\n    var account1_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\";\n    var account2_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\"; //var account3_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\";\n\n    var account3_mnemonic = \"runway genuine lazy assist ticket junior pilot flush rocket swallow ripple risk alien mobile chat recall run quiz cause weekend range april vicious about spoon\";\n    var recoveredAccount1 = algosdk.mnemonicToSecretKey(account1_mnemonic);\n    var recoveredAccount2 = algosdk.mnemonicToSecretKey(account2_mnemonic);\n    var recoveredAccount3 = algosdk.mnemonicToSecretKey(account3_mnemonic); //alert(arr[0]);\n    // var recoveredAccount1 = arr[0];\n    // var recoveredAccount2 = arr[0];\n    // var recoveredAccount3 = arr[0];\n\n    console.log(recoveredAccount3.addr);\n    const baseServer = \"https://testnet-algorand.api.purestake.io/ps2\";\n    const port = \"\"; //B3SU4KcVKi94Jap2VXkK83xx38bsv95K5UZm2lab\n\n    const token = {\n      'X-API-key': 'SVsJKi8vBM1RwK1HEuwhU20hYmwFJelk8bagKPin'\n    };\n    let algodclient = new algosdk.Algodv2(token, baseServer, port); // Function used to wait for a tx confirmation\n\n    const waitForConfirmation = async function (algodclient, txId) {\n      console.log(\"working\" + txId, algodclient);\n      let response = await algodclient.status().do();\n      console.log(\"response\", response);\n      let lastround = response[\"last-round\"];\n\n      while (true) {\n        const pendingInfo = await algodclient.pendingTransactionInformation(txId).do();\n\n        if (pendingInfo[\"confirmed-round\"] !== null && pendingInfo[\"confirmed-round\"] > 0) {\n          //Got the completed Transaction\n          console.log(\"Transaction \" + txId + \" confirmed in round \" + pendingInfo[\"confirmed-round\"]);\n          break;\n        }\n\n        lastround++;\n        await algodclient.statusAfterBlock(lastround).do();\n      }\n    }; // Function used to print created asset for account and assetid\n\n\n    const printCreatedAsset = async function (algodclient, account, assetid) {\n      // note: if you have an indexer instance available it is easier to just use this\n      //     let accountInfo = await indexerClient.searchAccounts()\n      //    .assetID(assetIndex).do();\n      // and in the loop below use this to extract the asset for a particular account\n      // accountInfo['accounts'][idx][account]);\n      let accountInfo = await algodclient.accountInformation(account).do();\n\n      for (let idx = 0; idx < accountInfo['created-assets'].length; idx++) {\n        let scrutinizedAsset = accountInfo['created-assets'][idx];\n\n        if (scrutinizedAsset['index'] === assetid) {\n          console.log(\"AssetID = \" + scrutinizedAsset['index']);\n          let myparms = JSON.stringify(scrutinizedAsset['params'], undefined, 2);\n          console.log(\"parms = \" + myparms);\n          break;\n        }\n      }\n    }; // Function used to print asset holding for account and assetid\n\n\n    const printAssetHolding = async function (algodclient, account, assetid) {\n      // note: if you have an indexer instance available it is easier to just use this\n      //     let accountInfo = await indexerClient.searchAccounts()\n      //    .assetID(assetIndex).do();\n      // and in the loop below use this to extract the asset for a particular account\n      // accountInfo['accounts'][idx][account]);\n      let accountInfo = await algodclient.accountInformation(account).do();\n\n      for (let idx = 0; idx < accountInfo['assets'].length; idx++) {\n        let scrutinizedAsset = accountInfo['assets'][idx];\n\n        if (scrutinizedAsset['asset-id'] === assetid) {\n          let myassetholding = JSON.stringify(scrutinizedAsset, undefined, 2);\n          console.log(\"assetholdinginfo = \" + myassetholding);\n          break;\n        }\n      }\n    };\n\n    (async () => {\n      let params = await algodclient.getTransactionParams().do(); //comment out the next two lines to use suggested fee\n\n      params.fee = 1000;\n      params.flatFee = true;\n      console.log(params);\n      let note = undefined;\n      let assetID = null;\n      console.log(\"working\");\n      await waitForConfirmation(algodclient, 'WCYE4WE65FHIGXUOK3IXEYDGBM6D3IP5UJXV52XOMA3D4BEV6SSA'); // Get the new asset's information from the creator account\n\n      let ptx = await algodclient.pendingTransactionInformation('WCYE4WE65FHIGXUOK3IXEYDGBM6D3IP5UJXV52XOMA3D4BEV6SSA').do();\n      assetID = ptx[\"asset-index\"];\n      await printCreatedAsset(algodclient, recoveredAccount1.addr, assetID);\n      await printAssetHolding(algodclient, recoveredAccount1.addr, assetID);\n      console.log(\"working178\"); //this below is transfer usefull function\n      // Opting in to an Asset:\n      // Opting in to transact with the new asset\n      // Allow accounts that want recieve the new asset\n      // Have to opt in. To do this they send an asset transfer\n      // of the new asset to themseleves \n      // In this example we are setting up the 3rd recovered account to \n      // receive the new asset\n      // First update changing transaction parameters\n      // We will account for changing transaction parameters\n      // before every transaction in this example\n      //cmd now\n\n      params = await algodclient.getTransactionParams().do(); //comment out the next two lines to use suggested fee\n\n      params.fee = 1000;\n      params.flatFee = true;\n      let sender = recoveredAccount3.addr;\n      let recipient = sender; // We set revocationTarget to undefined as \n      // This is not a clawback operation\n\n      let revocationTarget = undefined; // CloseReaminerTo is set to undefined as\n      // we are not closing out an asset\n\n      let closeRemainderTo = undefined; // We are sending 0 assets\n\n      let amount = 0; //let note=undefined;\n      //assetID='15940921';\n\n      console.log(\"working211\"); // signing and sending \"txn\" allows sender to begin accepting asset specified by creator and index\n\n      let opttxn = algosdk.makeAssetTransferTxnWithSuggestedParams(sender, recipient, closeRemainderTo, revocationTarget, amount, note, assetID, params); // Must be signed by the account wishing to opt in to the asset    \n\n      let rawSignedTxn = opttxn.signTxn(recoveredAccount3.sk);\n      let opttx = await algodclient.sendRawTransaction(rawSignedTxn).do();\n      console.log(\"Transaction : \" + opttx.txId); // wait for transaction to be confirmed\n\n      await waitForConfirmation(algodclient, opttx.txId); //You should now see the new asset listed in the account information\n\n      console.log(\"Account3\" + recoveredAccount3.addr);\n      await printAssetHolding(algodclient, recoveredAccount3.addr, assetID);\n      console.log(\"working 227\"); //     // Transfer New Asset:\n      //     // Now that account3 can recieve the new tokens \n      //     // we can tranfer tokens in from the creator\n      //     // to account3\n      //     // First update changing transaction parameters\n      //     // We will account for changing transaction parameters\n      //     // before every transaction in this example\n      //cmd now\n\n      params = await algodclient.getTransactionParams().do(); //comment out the next two lines to use suggested fee\n\n      params.fee = 1000;\n      params.flatFee = true;\n      sender = recoveredAccount1.addr;\n      recipient = recoveredAccount3.addr;\n      revocationTarget = undefined;\n      closeRemainderTo = undefined; //Amount of the asset to transfer\n\n      amount = 1000; // signing and sending \"txn\" will send \"amount\" assets from \"sender\" to \"recipient\"\n\n      let xtxn = algosdk.makeAssetTransferTxnWithSuggestedParams(sender, recipient, closeRemainderTo, revocationTarget, amount, note, assetID, params); // Must be signed by the account sending the asset  \n\n      rawSignedTxn = xtxn.signTxn(recoveredAccount1.sk);\n      let xtx = await algodclient.sendRawTransaction(rawSignedTxn).do();\n      console.log(\"Transaction : \" + xtx.txId); // wait for transaction to be confirmed\n\n      await waitForConfirmation(algodclient, xtx.txId); // You should now see the 10 assets listed in the account information\n\n      console.log(\"Account 3 = \" + recoveredAccount3.addr);\n      await printAssetHolding(algodclient, recoveredAccount3.addr, assetID);\n    })().catch(e => {\n      console.log(e);\n      console.trace();\n    });\n  }; //end transfer\n  // let arr=[];\n  // const GetAccounts = () => {\n  //   const action = useCallback(async () => {    \n  //     await AlgoSigner.connect({\n  //       ledger: 'TestNet'\n  //     });\n  //     const accts = await AlgoSigner.accounts({\n  //       ledger: 'TestNet'\n  //     });\n  //     //const accts = await AlgoSigner.accounts({})\n  //     //alert(\"acc\"+accts);\n  //     arr.push(JSON.stringify(accts[0], null, 2))\n  //     alert(JSON.stringify(accts[0], null, 2));\n  //     return JSON.stringify(accts[0], null, 2);\n  //   }, []);\n  //\n  // return <ExampleAlgoSigner title=\"Get Accounts\" buttonText=\"Get Accounts\" buttonAction={action}/>\n  //  };\n  // const ExampleAlgoSigner = ({title, buttonText, buttonAction}) => {\n  //   const [res, setRes] = useState(\"\");\n  //   const [result, setResult] = useState(\"\");\n  //   const onClick = useCallback(async () => {\n  //     const r = await buttonAction();\n  //     setResult(r);\n  //   }, [buttonAction]);\n  //   return (\n  //     <>\n  //       <Header as=\"h2\" dividing>{title}</Header>\n  //       <Button primary={true} onClick={onClick}>{buttonText}</Button>\n  //       <Message>\n  //         <code>\n  //           {result}\n  //         </code>\n  //       </Message>\n  //     </>\n  //   );\n  // };\n\n\n  window.name = \"John\"; // const [initialData,setinitialDate]=useState('Sellers');\n  //\n\n  const [searchTerm, setSearchTerm] = useState('');\n  console.log('returnsearch', searchTerm); // const [input, setInput] = useState('');\n  // const [countryListDefault, setCountryListDefault] = useState();\n  // const [countryList, setCountryList] = useState();\n  // const fetchData = async () => {\n  //   return await fetch('https://restcountries.eu/rest/v2/all')\n  //     .then(response => response.json())\n  //     .then(data => {\n  //        setCountryList(data) \n  //        setCountryListDefault(data)\n  //      });}\n  // const updateInput = async (input) => {\n  //    const filtered = countryListDefault.filter(country => {\n  //     return country.name.toLowerCase().includes(input.toLowerCase())\n  //    })\n  //    setInput(input);\n  //    setCountryList(filtered);\n  // }\n  // useEffect( () => {fetchData()},[]);\n  //\n\n  const [selected, setSelected] = React.useState(\"Sellers\");\n  const [selecteds, setSelecteds] = React.useState(\"1\");\n\n  const changeSelectOptionHandler = event => {\n    setSelected(event.target.value);\n  };\n\n  const changeSelectOptionHandlers = event => {\n    setSelecteds(event.target.value);\n  }; // const [currentSymbol, setCurrentSymbol] = useState('Sellers')\n  // const changeFruit = (newFruit) => {\n  //   setCurrentSymbol(newFruit)\n  // }\n  // const [currentSymbols, setCurrentSymbols] = useState('1 day')\n  // const changeFruits = (newFruit) => {\n  //   setCurrentSymbols(newFruit)\n  // }\n\n\n  const [isOpenFeed, setIsOpenFeed] = useState(false);\n\n  const togglePopupFeed = () => {\n    setIsOpenFeed(false); //window.location.reload(false)    \n  };\n\n  const [Feedbackc, setFeedbackc] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(false); // window.location.reload(false)    \n  }; //fb   \n  //const [currentid, setCurrentid] = useState(\"\");\n  //const [afternames,setAfternames] = useState([]);\n  //const [name,setnames] = useState([]);\n  //const [tid,setId] = useState(\"\"); \n  //const [getAddressDb,setGetAddressDb]=useState([]);\n  //const [getAddressDbs,setGetAddressDbs]=useState([]);\n  //console.log(\"initialgetaddresss\",getAddressDbs)\n  //console.log(\"initialgetaddress\",getAddressDb)\n  //console.log(\"ipname\",name)\n\n\n  const [getImgbuyers, setgetImgbuyers] = useState([]);\n  const [getImbuyers, setgetImbuyers] = useState([]); //\n\n  console.log(\"firb1\", getImgbuyers);\n  console.log(\"firb2\", getImbuyers); //algo\n\n  const [getAlgos, setgetAlgos] = useState([]);\n  const [getAlgoss, setgetAlgoss] = useState([]); //\n\n  console.log(\"firs1\", getAlgos);\n  console.log(\"firs2\", getAlgoss); //algo\n\n  const [getImgsellers, setgetImgsellers] = useState([]);\n  const [getImsellers, setgetImsellers] = useState([]); //\n\n  console.log(\"firs1\", getImgsellers);\n  console.log(\"firs2\", getImsellers);\n  const [getImgreff, setgetImgreff] = useState([]);\n  const [getIm, setgetIm] = useState([]);\n  console.log(\"fir1\", getImgreff);\n  console.log(\"fir2\", getIm); //temp start\n\n  const [Loader, setLoader] = useState(false);\n  let btn;\n  var accounts; //start buyers print in algo\n\n  const getalgo = async () => {\n    setLoader(true);\n    setLoading(true); //window.location.reload(false)\n\n    let req = [];\n    let req2 = []; //imagerefexplore\n\n    firebase.database().ref(\"algorandData\").on(\"value\", data => {\n      if (data) {\n        data.forEach(d => {\n          req.push(d.val());\n        });\n      }\n    });\n    setgetImgsellers(req);\n    getImgsellers.map(a => {\n      console.log(`abs`, a);\n      Object.keys(a).map(b => {\n        //  console.log(`bb`, b)\n        req2.push({\n          //addAcc:\n          addKeyI: a[b].keyId,\n          addPrices: a[b].priceSet,\n          addcAdd: a[b].cAddress,\n          addIds: a[b].id,\n          addImgs: a[b].imageUrl,\n          addUname: a[b].userName,\n          addUsymbol: a[b].userSymbol,\n          addIpfs: a[b].ipfsUrl,\n          addOwnerAddress: a[b].ownerAddress,\n          addsold: a[b].soldd,\n          addextra1: a[b].extra1,\n          adddate: a[b].datesets\n        });\n      });\n    });\n    setgetImsellers(req2);\n    console.log(\"cfbs\", req);\n    setLoader(false);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getSellers();\n  }, [getImsellers]); //end buyers print in algo\n  //buyers start\n\n  const getbuyers = async () => {\n    setLoader(true);\n    setLoading(true); //window.location.reload(false)\n\n    let req = [];\n    let req2 = []; //imagerefexplore\n\n    firebase.database().ref(\"buyerssavedb\").on(\"value\", data => {\n      if (data) {\n        data.forEach(d => {\n          req.push(d.val());\n        });\n      }\n    });\n    setgetImgbuyers(req);\n    getImgbuyers.map(a => {\n      console.log(`abb`, a);\n      Object.keys(a).map(b => {\n        //  console.log(`bb`, b)\n        req2.push({\n          //addAcc:\n          addKeyI: a[b].keyId,\n          addPrices: a[b].priceSet,\n          addcAdd: a[b].cAddress,\n          addIds: a[b].id,\n          addImgs: a[b].imageUrl,\n          addUname: a[b].userName,\n          addUsymbol: a[b].userSymbol,\n          addIpfs: a[b].ipfsUrl,\n          addOwnerAddress: a[b].ownerAddress,\n          addsold: a[b].soldd,\n          addextra1: a[b].extra1,\n          adddate: a[b].datesets\n        });\n      });\n    });\n    setgetImbuyers(req2);\n    console.log(\"cfbb\", req);\n    setLoader(false);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getbuyers();\n  }, [getImbuyers]); //end buyers\n  //sellers start\n\n  const getSellers = async () => {\n    setLoader(true);\n    setLoading(true); //window.location.reload(false)\n\n    let req = [];\n    let req2 = []; //imagerefexplore\n\n    firebase.database().ref(\"sellerssavedb\").on(\"value\", data => {\n      if (data) {\n        data.forEach(d => {\n          req.push(d.val());\n        });\n      }\n    });\n    setgetImgsellers(req);\n    getImgsellers.map(a => {\n      console.log(`abs`, a);\n      Object.keys(a).map(b => {\n        //  console.log(`bb`, b)\n        req2.push({\n          //addAcc:\n          addKeyI: a[b].keyId,\n          addPrices: a[b].priceSet,\n          addcAdd: a[b].cAddress,\n          addIds: a[b].id,\n          addImgs: a[b].imageUrl,\n          addUname: a[b].userName,\n          addUsymbol: a[b].userSymbol,\n          addIpfs: a[b].ipfsUrl,\n          addOwnerAddress: a[b].ownerAddress,\n          addsold: a[b].soldd,\n          addextra1: a[b].extra1,\n          adddate: a[b].datesets\n        });\n      });\n    });\n    setgetImsellers(req2);\n    console.log(\"cfbs\", req);\n    setLoader(false);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getSellers();\n  }, [getImsellers]); //sellers stop\n\n  const connectmm = async () => {\n    //var getaddress=localStorage.getItem('myaddress')\n    //if(getaddress !== \"\"){\n    //var btn = document.getElementById(\"bu\");\n    //btn.value = accounts[0]; // will just add a hidden value\n    //btn.innerHTML = accounts[0];\n    //btn.innerHTML = \"CONNECTED\"\n    //}\n    //else{\n    //window.alert(\"Do you want to connect with metamask\");\n    //event.preventDefault();\n    //bring in user's metamask account address\n    //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\n    //alert(\"acc\"+accounts[0])\n    accounts = await web3.eth.getAccounts(); //.send({from:accounts[0]})\n\n    if (accounts[0] !== \"\") {\n      //accounts[0\n      //document.getElementById(\"bu\").\n      //document.getElementById(\"bu\").append(\"CONNECTED\")\n      btn = document.getElementById(\"bu\"); //btn.value = accounts[0]; // will just add a hidden value\n      //btn.innerHTML = accounts[0];\n\n      btn.innerHTML = \"CONNECTED\";\n      localStorage.setItem('myaddress', accounts[0]);\n    } else {\n      //document.getElementById(\"bu\").remove(\"\");\n      //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\n      var btns = document.getElementById(\"bu\"); //btns.value = accounts[0]; // will just add a hidden value\n\n      btns.innerHTML = \"NOT CONNECTED\";\n      localStorage.setItem('myaddress', \"\");\n    }\n  };\n\n  useEffect(() => {\n    connectmm();\n  }, []);\n\n  const getImgpa = async () => {\n    setLoader(true);\n    setLoading(true); //window.location.reload(false)\n\n    let req = [];\n    let req2 = []; //imagerefexplore\n\n    firebase.database().ref(\"imagerefexplore\").on(\"value\", data => {\n      if (data) {\n        data.forEach(d => {\n          req.push(d.val());\n        });\n      }\n    });\n    setgetImgreff(req);\n    getImgreff.map(a => {\n      console.log(`a`, a);\n      Object.keys(a).map(b => {\n        //  console.log(`bb`, b)\n        //   console.log(`bbnext`, a[b].imageUrl)\n        //   console.log(`bbaddess`,a[b].cAddress)\n        //   console.log(`bbprice`,a[b].priceSet)\n        //   console.log(`bbname`,a[b].userName)\n        //   console.log(`bbsymbol`,a[b].userSymbol)\n        //   console.log(`bbipfs`,a[b].ipfsUrl)\n        //   console.log(`bboaddress`,a[b].ownerAddress)      \n        //change here\n        req2.push({\n          //addAcc:\n          addKeyI: a[b].keyId,\n          addPrices: a[b].priceSet,\n          addcAdd: a[b].cAddress,\n          addIds: a[b].id,\n          addImgs: a[b].imageUrl,\n          addUname: a[b].userName,\n          addUsymbol: a[b].userSymbol,\n          addIpfs: a[b].ipfsUrl,\n          addOwnerAddress: a[b].ownerAddress,\n          addsold: a[b].soldd,\n          addextra1: a[b].extra1\n        });\n      });\n    });\n    setgetIm(req2);\n    console.log(\"cfb\", req);\n    setLoader(false);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getImgpa();\n  }, [getIm]);\n\n  const buynow = async a => {\n    let mynetworks = localStorage.getItem('mynetwork');\n    alert(\"network check  \" + mynetworks);\n    let gettrans = \"\";\n\n    if (mynetworks === \"BNB\") {\n      //bnb 0x2cA1655cceB43D27027e6676E880D1Ce4e7d7d18\n      gettrans = new web3.eth.Contract(tra, '0x2cA1655cceB43D27027e6676E880D1Ce4e7d7d18');\n    } else if (mynetworks === \"ETH\") {\n      //eth 0xED3c6A02F152CaeA0f6F86EFADF55e638543DED3\n      gettrans = new web3.eth.Contract(tra, '0xED3c6A02F152CaeA0f6F86EFADF55e638543DED3');\n    } else if (mynetworks === \"Maticmum\") {\n      //mactimum 0x2Faf13681f0b9dAD5074E52CcAC3d614dbf84c83\n      gettrans = new web3.eth.Contract(tra, '0x2Faf13681f0b9dAD5074E52CcAC3d614dbf84c83');\n    } else if (mynetworks === \"\") {} //let gettrans=new web3.eth.Contract(tra,'0x2Faf13681f0b9dAD5074E52CcAC3d614dbf84c83');\n    //let gettrans=new web3.eth.Contract(tra,a.addOwnerAddress);\n\n\n    let getaaa = new web3.eth.Contract(abi, a.addcAdd);\n    console.log(\"insidebutton\", a.addcAdd);\n    console.log(\"insidebuttonid\", a.addPrices);\n    console.log(\"insidebuttonids\", a.addOwnerAddress);\n    const accounts = await web3.eth.getAccounts(); //tra start\n    //  await gettrans.methods.sendss(a.addOwnerAddress).send({\n    //    from:accounts[0], \n    //    value: web3.utils.toWei(a.addPrices, 'ether')\n    //  });\n\n    if (a.addOwnerAddress === accounts[0]) {\n      alert(\"you are owner so you does not purchase this token\");\n    } else {\n      await gettrans.methods.sendss(a.addOwnerAddress).send({\n        from: accounts[0],\n        //value:web3.utils.toWei(a.addPrices,'BNB')\n        value: web3.utils.toWei(a.addPrices, 'ether') //ether\n\n      }); //alert(\"amount has been sent\")\n      //end trans\n      //let thing = a.addIds;\n\n      console.log(\"thingget\", a.addIds);\n      console.log(\"ownerget\", a.addOwnerAddress);\n      console.log(\"keyget\", a.addKeyI); //let s = await getaaa.methods.items(thing).call();\n      //console.log(\"sget\",s)\n      //let state = a.addPrices;\n\n      console.log(\"stateget\", a.addPrices);\n      await getaaa.methods.transferFrom(a.addOwnerAddress, accounts[0], a.addIds).send({\n        from: accounts[0]\n      }); //  let refbuyers=fireDb.database().ref(`buyersdb/${accounts[0]}`).child(a.addKeyI);//ref1\n      //const keybuyers = refbuyers.push().key;\n\n      let ref1 = fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI); //ref1\n\n      let ref12 = fireDb.database().ref(`imagerefexplore/${a.addOwnerAddress}`).child(a.addKeyI); //ref12\n      //let ref12new=fireDb.database().ref(`imagerefexplore/${accounts[0]}`).child(a.addKeyI);//ref12new\n\n      let ref2 = fireDb.database().ref(`imagerefbuy/${accounts[0]}`).child(a.addKeyI);\n      let ref23 = fireDb.database().ref(`imagepurcre/${accounts[0]}`).child(a.addKeyI);\n      let ref233 = fireDb.database().ref(`imagepurcre/${a.addOwnerAddress}`).child(a.addKeyI); //const dbc = ref23.push().key;\n\n      console.log(\"ref2get\", ref2);\n      ref1.set({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        previousoaddress: a.addOwnerAddress,\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      });\n      ref2.set({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      });\n      ref23.set({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      });\n      ref233.update({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      });\n      ref12.update({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      });\n      fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();\n      fireDb.database().ref(`imagerefbuy/${a.addOwnerAddress}`).child(a.addKeyI).remove();\n      let refsellers = fireDb.database().ref(`buyerssavedb/${accounts[0]}`); //.child(a.addKeyI);//ref1\n\n      const keysellers = refsellers.push().key;\n      refsellers.child(keysellers).set({\n        id: a.addIds,\n        imageUrl: a.addImgs,\n        priceSet: a.addPrices,\n        cAddress: a.addcAdd,\n        keyId: a.addKeyI,\n        userName: a.addUname,\n        userSymbol: a.addUsymbol,\n        ipfsUrl: a.addIpfs,\n        ownerAddress: accounts[0],\n        soldd: \"solded\",\n        extra1: \"buyed\",\n        datesets: new Date().toDateString(),\n        whois: 'Buyers'\n      }); //fireDb.database().ref(`imagerefexplore/${a.addOwnerAddress}`).child(a.addKeyI).remove();\n      //fireDb.database().ref(`imagepurcre/${a.addOwnerAddress}`).child(a.addKeyI).remove();\n      // let ref3=fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI);\n      // ref3.set({\n      //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\n      //   ipfsUrl:a.addIpfs,ownerAddress:accounts[0]}) \n      // fireDb.database().ref(`imagerefbuy/${a.addOwnerAddress}`).child(a.addKeyI).set({\n      //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI     \n      // });\n      //    fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();  \n      //alert(\" Received successfully......\")\n\n      setIsOpen(true);\n    } //window.location.reload(false)   \n\n  }; // const imgcall = (a) => {\n  //   alert(`Hello, ${a.keyId}`);\n  // };\n  //temp end\n\n\n  const feedbackset = () => {\n    //alert(\"im here\"+Feedbackc)\n    //setFeedbackc\n    const mail = localStorage.getItem(\"mymailid\");\n    let reffeedback = fireDb.database().ref(`feedbacksave/`);\n    const db = reffeedback.push().key;\n    console.log(\"dbcheckappjs\", db);\n    reffeedback.child(db).set({\n      id: db,\n      profileimageUrl: \"\",\n      name: \"\",\n      emailid: mail,\n      feedbacks: Feedbackc\n    });\n    setFeedbackc('');\n    setIsOpenFeed(true);\n  }; // const filterSet=()=>{\n  //   alert(\"select   \"+selected+\"  \"+selecteds)\n  // }\n\n\n  const filterdata = () => {\n    if (selected === 'Sellers') {\n      if (selecteds === '1') {\n        let data = getImsellers.filter(val => {\n          let date = moment();\n          let createddate = moment(val.adddate);\n          return date === createddate;\n        });\n        return data;\n      }\n\n      let data = getImsellers.filter(val => {\n        let date = moment().subtract(1, \"days\");\n        let weekdate = moment().subtract(parseInt(selecteds), \"days\");\n        let createddate = moment(val.adddate);\n        return moment(createddate).isBetween(weekdate, date);\n      });\n      return data;\n    }\n\n    if (selecteds === '1') {\n      let data = getImbuyers.filter(val => {\n        let date = moment();\n        let createddate = moment(val.adddate);\n        return date === createddate;\n      });\n      return data;\n    }\n\n    let data = getImbuyers.filter(val => {\n      let date = moment().subtract(1, \"days\");\n      let weekdate = moment().subtract(parseInt(selecteds), \"days\");\n      let createddate = moment(val.adddate);\n      return moment(createddate).isBetween(weekdate, date);\n    });\n    return data; //return getImbuyers;\n  };\n\n  const filterdatas = () => {\n    if (searchTerm === '') return getIm;\n    let data = getIm.filter(val => {\n      return val.addUname.toLowerCase().trim().includes(searchTerm.toLowerCase().trim());\n    });\n    console.log('returndata', data);\n    return data;\n  };\n\n  const testingdata = () => {//alert(\"testing data\");\n    //  const crypto = require(\"crypto\");\n    //const id = crypto.randomBytes(1).toString(\"hex\");\n    //alert(\"idnumber     \"+id); // => f9b327e70bbcf42494ccb28b2d98e00e\n    //const id1 = nextId(); // id: id-1\n    //const id2 = nextId(\"test-id-\"); // id: test-id-2\n    // const id3 = nextId(); // id: id-3\n    // alert(id3)\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"display-4 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      height: '100px',\n      width: '1500px',\n      marginBlock: '5px',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '0px',\n      height: '40px',\n      width: '100px',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '10px',\n      marginTop: '',\n      height: '100px',\n      width: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search...\",\n    onChange: event => {\n      setSearchTerm(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 7\n    }\n  }), searchTerm !== '' && /*#__PURE__*/React.createElement(React.Fragment, null, filterdata().map((val, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      onClick: () => setSearchTerm(val.title),\n      style: {\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 11\n      }\n    }, val.title));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      height: '43px',\n      width: '1154px',\n      marginLeft: '150px',\n      marginBlock: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      outline: 'none'\n    },\n    class: \"btn btn-info btn-block\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 15\n    }\n  }, \"Home\")), ' ', /*#__PURE__*/React.createElement(Link, {\n    to: \"/explore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      outline: 'none'\n    },\n    class: \"btn btn-info btn-block\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 15\n    }\n  }, \"Explore\")), \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/salepagecopy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-info btn-block\",\n    type: \"button\" // onClick={() => {\n    //   history.push(\"/Salepagecopy\");\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 15\n    }\n  }, \"Myitem\")), \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/followingpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-info btn-block\",\n    type: \"button\" // onClick={() => {\n    //   history.push(\"/Followingpage\");\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 15\n    }\n  }, \"Following\")), \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/activitypage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-info btn-block\",\n    type: \"button\" // onClick={() => {\n    //   history.push(\"/Activitypage\");\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 15\n    }\n  }, \"Activity\")), \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/howitworkpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-info btn-block\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 15\n    }\n  }, \"How it works\")), \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/communitypage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-info btn-block\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 15\n    }\n  }, \"Community\")), \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/nft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-info btn-block\",\n    type: \"button\" // \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 15\n    }\n  }, \"Create\")), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    id: \"bu\",\n    class: \"btn btn-info btn-block\",\n    type: \"button\",\n    onClick: connectmm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 15\n    }\n  }, \"Connect wallet\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 1\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-info btn-block\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 15\n    }\n  }, \"Check\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: TransferAsset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 1\n    }\n  }, \"TransferAsset\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1050,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Online, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Offline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 5\n    }\n  }))), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      marginBlock: '5px',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1086,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      color: 'skyblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 1\n    }\n  }, \"Top \\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    onChange: changeSelectOptionHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Sellers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1090,\n      columnNumber: 13\n    }\n  }, \"Sellers\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Buyers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1091,\n      columnNumber: 13\n    }\n  }, \"Buyers\")), \"\\xA0in\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    onChange: changeSelectOptionHandlers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 13\n    }\n  }, \"1 day\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 13\n    }\n  }, \"7 days\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 13\n    }\n  }, \"30 days\")), \"\\xA0\"), getImsellers.length === 0 ? null : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1114,\n      columnNumber: 3\n    }\n  }, filterdata().map(a => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        height: '300px',\n        width: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: '2px solid white',\n        borderRadius: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/explore/${a.addKeyI}/${a.addOwnerAddress}` //pathname: `/explore/${combine}`,\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: a.addImgs,\n      style: {\n        height: 120,\n        width: 120,\n        marginTop: '10px'\n      },\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 5\n      }\n    }, \"Name : \", a.addUname), /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 5\n      }\n    }, \"Symbol : \", a.addUsymbol), /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 5\n      }\n    }, \"price : \", a.addPrices), a.addsold === '' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1141,\n        columnNumber: 3\n      }\n    }, \"BuyNow\"), ' ') : /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1147,\n        columnNumber: 7\n      }\n    }, \"Already solded\"))));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1158,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, getIm.length === 0 ? null : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 1\n    }\n  }, filterdatas().map(a => {\n    console.log(`a`, a); // Object.keys(a).map((b)=>{\n    //   console.log(`b`, b)\n    //   console.log(`bnext`, a[b].imageUrl)        \n    // })\n    //if((a.addId !== ' ') && (a.addsrc !== ' '))\n    //  if(a.addsold === '')\n    //  {\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        height: '500px',\n        width: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: '2px solid white',\n        borderRadius: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/explore/${a.addKeyI}/${a.addOwnerAddress}` //pathname: `/explore/${combine}`,\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: a.addImgs,\n      style: {\n        height: 120,\n        width: 120,\n        marginTop: '10px'\n      },\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1187,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 5\n      }\n    }, \"Name : \", a.addUname, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 1\n      }\n    }, \"Token : \", a.addIds, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1200,\n        columnNumber: 3\n      }\n    }, \"Symbol : \", a.addUsymbol, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 3\n      }\n    }, \"price : \", a.addPrices), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1204,\n        columnNumber: 3\n      }\n    }, \"address: \", a.addOwnerAddress)))), a.addsold === '' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => buynow(a),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 3\n      }\n    }, \"BuyNow\"), ' ') : /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1218,\n        columnNumber: 7\n      }\n    }, \"Already solded\"))), isOpen && /*#__PURE__*/React.createElement(Popup, {\n      content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 9\n        }\n      }, \"Notification\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1227,\n          columnNumber: 9\n        }\n      }, \"Your token has been buyed successfully......\"), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: togglePopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 9\n        }\n      }, \"close\"))),\n      handleClose: togglePopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 16\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      height: '200px',\n      width: '1500px',\n      marginBlock: '5px',\n      display: 'flex',\n      marginLeft: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 3\n    }\n  }, \"Get the latest Rarible updates\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Your e-mail\",\n    type: \"text\",\n    name: \"Feedbackc\",\n    required: true,\n    onChange: event => setFeedbackc(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 3\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      feedbackset();\n    },\n    style: {\n      height: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 5\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 1\n    }\n  }, \"Rarible\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1267,\n      columnNumber: 1\n    }\n  }, \"Explore\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1268,\n      columnNumber: 1\n    }\n  }, \"How it works\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1269,\n      columnNumber: 1\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1270,\n      columnNumber: 1\n    }\n  }, \"Support\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1274,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1276,\n      columnNumber: 1\n    }\n  }, \"Community\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1277,\n      columnNumber: 1\n    }\n  }, \"RARI Token\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1278,\n      columnNumber: 1\n    }\n  }, \"Discussion\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1279,\n      columnNumber: 1\n    }\n  }, \"Voting\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1280,\n      columnNumber: 1\n    }\n  }, \"Suggest feature\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '250px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1285,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(TwitterShareButton, {\n    title: \"Hello everyone \",\n    url: \"https://stackoverflow.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1303,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(TwitterIcon, {\n    size: 35,\n    round: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1308,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1313,\n      columnNumber: 1\n    }\n  }))), \"\\xA0\"), isOpenFeed && /*#__PURE__*/React.createElement(Popup, {\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1332,\n        columnNumber: 9\n      }\n    }, \"Notification\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1333,\n        columnNumber: 9\n      }\n    }, \"Your Email has been sent successfully......\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: togglePopupFeed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 9\n      }\n    }, \"close\")) // handleClose={togglePopup}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1331,\n      columnNumber: 18\n    }\n  }));\n};\n\n_s(Explore, \"B9voQ+kbSn1i6kQLxF3MXT6BFv8=\");\n\n_c = Explore;\nexport default Explore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"sources":["C:/demoAlgo/smart-contracts/devrel/algosigner-react/CIFI/WebApp/NFTWebAPP/src/Explore.js"],"names":["moment","React","useState","useEffect","useCallback","web3","Link","fireDb","firebase","abi","tra","Popup","Offline","Online","Footer","TwitterShareButton","TwitterIcon","Button","Container","Header","Message","Explore","handleLogout","TransferAsset","algosdk","require","account1_mnemonic","account2_mnemonic","account3_mnemonic","recoveredAccount1","mnemonicToSecretKey","recoveredAccount2","recoveredAccount3","console","log","addr","baseServer","port","token","algodclient","Algodv2","waitForConfirmation","txId","response","status","do","lastround","pendingInfo","pendingTransactionInformation","statusAfterBlock","printCreatedAsset","account","assetid","accountInfo","accountInformation","idx","length","scrutinizedAsset","myparms","JSON","stringify","undefined","printAssetHolding","myassetholding","params","getTransactionParams","fee","flatFee","note","assetID","ptx","sender","recipient","revocationTarget","closeRemainderTo","amount","opttxn","makeAssetTransferTxnWithSuggestedParams","rawSignedTxn","signTxn","sk","opttx","sendRawTransaction","xtxn","xtx","catch","e","trace","window","name","searchTerm","setSearchTerm","selected","setSelected","selecteds","setSelecteds","changeSelectOptionHandler","event","target","value","changeSelectOptionHandlers","isOpenFeed","setIsOpenFeed","togglePopupFeed","Feedbackc","setFeedbackc","isLoading","setLoading","isOpen","setIsOpen","togglePopup","getImgbuyers","setgetImgbuyers","getImbuyers","setgetImbuyers","getAlgos","setgetAlgos","getAlgoss","setgetAlgoss","getImgsellers","setgetImgsellers","getImsellers","setgetImsellers","getImgreff","setgetImgreff","getIm","setgetIm","Loader","setLoader","btn","accounts","getalgo","req","req2","database","ref","on","data","forEach","d","push","val","map","a","Object","keys","b","addKeyI","keyId","addPrices","priceSet","addcAdd","cAddress","addIds","id","addImgs","imageUrl","addUname","userName","addUsymbol","userSymbol","addIpfs","ipfsUrl","addOwnerAddress","ownerAddress","addsold","soldd","addextra1","extra1","adddate","datesets","getSellers","getbuyers","connectmm","eth","getAccounts","document","getElementById","innerHTML","localStorage","setItem","btns","getImgpa","buynow","mynetworks","getItem","alert","gettrans","Contract","getaaa","methods","sendss","send","from","utils","toWei","transferFrom","ref1","child","ref12","ref2","ref23","ref233","set","previousoaddress","Date","toDateString","whois","update","remove","refsellers","keysellers","key","feedbackset","mail","reffeedback","db","profileimageUrl","emailid","feedbacks","filterdata","filter","date","createddate","subtract","weekdate","parseInt","isBetween","filterdatas","toLowerCase","trim","includes","testingdata","backgroundColor","height","width","marginBlock","display","marginLeft","color","Logo","marginTop","title","cursor","outline","flexWrap","border","borderRadius","pathname"],"mappings":"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","sourcesContent":["/* global AlgoSigner */\r\nimport moment from 'moment';\r\nimport React, { useState,useEffect,useCallback } from \"react\";\r\n//import history from \"./utils/history\";\r\nimport web3 from './web3';\r\n// Router, Route, Switch,\r\nimport { Link } from \"react-router-dom\";\r\n//import Myitem from \"./Myitem\";\r\n//import Nft from \"./Nft\";\r\n//import firebase from \"./firebase\";\r\nimport fireDb from \"./firebase\";\r\n//import Followingpage from \"./Followingpage\";\r\n//import Activitypage from \"./Activitypage\";\r\n//import Howitworkpage from \"./Howitworkpage\";\r\n//import Communitypage from \"./Communitypage\";\r\nimport firebase from \"firebase\";\r\nimport {abi} from './datas'\r\n//import Mypurchasepage from './Mypurchasepage'\r\nimport {tra} from './trans'\r\n//import Createandpurchasepage from './Createandpurchasepage'\r\n//import Receivedpage from './Receivedpage';\r\nimport Popup from './Popup';\r\nimport { Offline, Online } from \"react-detect-offline\";\r\nimport Footer from './footer'\r\nimport Logo from './logo.svg';\r\n//import JSONDATA from './MOCK_DATA.json';\r\n// import SearchBar from './SearchBar';\r\n//import CountryList from './CountryList';\r\n\r\nimport \"./App.css\"\r\n//import DarkMode from \"./DarkMode\"\r\n\r\nimport {\r\n  TwitterShareButton,\r\n  TwitterIcon,\r\n} from \"react-share\";\r\n\r\nimport {Button, Container, Header, Message} from \"semantic-ui-react\";\r\n\r\n// import TelegramLoginButton, { TelegramUser } from 'telegram-login-button';\r\n\r\nconst Explore=({handleLogout})=> {\r\n\r\n\r\n  //start transfer\r\n\r\n  const TransferAsset=async()=>{\r\n    const algosdk = require('algosdk');\r\n      var account1_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\";\r\n      var account2_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\";\r\n      //var account3_mnemonic = \"tackle dove endorse style mind boring hidden fiction power wrap diesel more cruel ecology few field they chase oil deliver useless paddle nation abandon domain\";\r\n      var account3_mnemonic = \"runway genuine lazy assist ticket junior pilot flush rocket swallow ripple risk alien mobile chat recall run quiz cause weekend range april vicious about spoon\";\r\n      var recoveredAccount1 = algosdk.mnemonicToSecretKey(account1_mnemonic);\r\n      var recoveredAccount2 = algosdk.mnemonicToSecretKey(account2_mnemonic);\r\n      var recoveredAccount3 = algosdk.mnemonicToSecretKey(account3_mnemonic);\r\n      //alert(arr[0]);\r\n      // var recoveredAccount1 = arr[0];\r\n      // var recoveredAccount2 = arr[0];\r\n      // var recoveredAccount3 = arr[0];\r\n      console.log(recoveredAccount3.addr);\r\n      const baseServer = \"https://testnet-algorand.api.purestake.io/ps2\";\r\n      const port = \"\";\r\n      //B3SU4KcVKi94Jap2VXkK83xx38bsv95K5UZm2lab\r\n      const token = {\r\n      \r\n          'X-API-key' : 'SVsJKi8vBM1RwK1HEuwhU20hYmwFJelk8bagKPin',\r\n      }\r\n      let algodclient = new algosdk.Algodv2(token, baseServer, port);  \r\n    // Function used to wait for a tx confirmation\r\n    const waitForConfirmation = async function (algodclient, txId) {\r\n      console.log(\"working\"+txId,algodclient);\r\n        let response = await algodclient.status().do();\r\n        console.log(\"response\",response);\r\n        let lastround = response[\"last-round\"];\r\n        while (true) {\r\n            const pendingInfo = await algodclient.pendingTransactionInformation(txId).do();\r\n            if (pendingInfo[\"confirmed-round\"] !== null && pendingInfo[\"confirmed-round\"] > 0) {\r\n                //Got the completed Transaction\r\n                console.log(\"Transaction \" + txId + \" confirmed in round \" + pendingInfo[\"confirmed-round\"]);\r\n                break;\r\n            }\r\n            lastround++;\r\n            await algodclient.statusAfterBlock(lastround).do();\r\n        }\r\n    };\r\n    \r\n    // Function used to print created asset for account and assetid\r\n    const printCreatedAsset = async function (algodclient, account, assetid) {\r\n        // note: if you have an indexer instance available it is easier to just use this\r\n        //     let accountInfo = await indexerClient.searchAccounts()\r\n        //    .assetID(assetIndex).do();\r\n        // and in the loop below use this to extract the asset for a particular account\r\n        // accountInfo['accounts'][idx][account]);\r\n        let accountInfo = await algodclient.accountInformation(account).do();\r\n        for (let idx = 0; idx < accountInfo['created-assets'].length; idx++) {\r\n            let scrutinizedAsset = accountInfo['created-assets'][idx];\r\n            if (scrutinizedAsset['index'] === assetid) {\r\n                console.log(\"AssetID = \" + scrutinizedAsset['index']);\r\n                let myparms = JSON.stringify(scrutinizedAsset['params'], undefined, 2);\r\n                console.log(\"parms = \" + myparms);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    // Function used to print asset holding for account and assetid\r\n    const printAssetHolding = async function (algodclient, account, assetid) {\r\n        // note: if you have an indexer instance available it is easier to just use this\r\n        //     let accountInfo = await indexerClient.searchAccounts()\r\n        //    .assetID(assetIndex).do();\r\n        // and in the loop below use this to extract the asset for a particular account\r\n        // accountInfo['accounts'][idx][account]);\r\n        let accountInfo = await algodclient.accountInformation(account).do();\r\n        for (let idx = 0; idx < accountInfo['assets'].length; idx++) {\r\n            let scrutinizedAsset = accountInfo['assets'][idx];\r\n            if (scrutinizedAsset['asset-id'] === assetid) {\r\n                let myassetholding = JSON.stringify(scrutinizedAsset, undefined, 2);\r\n                console.log(\"assetholdinginfo = \" + myassetholding);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    \r\n    (async () => {\r\n    \r\n    \r\n      let params = await algodclient.getTransactionParams().do();\r\n        //comment out the next two lines to use suggested fee\r\n        params.fee = 1000;\r\n        params.flatFee = true;\r\n        console.log(params);\r\n        \r\n    \r\n        let note = undefined;\r\n        \r\n        let assetID = null;\r\n        console.log(\"working\");\r\n        await waitForConfirmation(algodclient,'WCYE4WE65FHIGXUOK3IXEYDGBM6D3IP5UJXV52XOMA3D4BEV6SSA');\r\n        // Get the new asset's information from the creator account\r\n        let ptx = await algodclient.pendingTransactionInformation('WCYE4WE65FHIGXUOK3IXEYDGBM6D3IP5UJXV52XOMA3D4BEV6SSA').do();\r\n        assetID = ptx[\"asset-index\"];\r\n      \r\n      await printCreatedAsset(algodclient, recoveredAccount1.addr, assetID);\r\n      await printAssetHolding(algodclient, recoveredAccount1.addr, assetID);\r\n    \r\n      console.log(\"working178\")\r\n      \r\n      //this below is transfer usefull function\r\n    \r\n      // Opting in to an Asset:\r\n      // Opting in to transact with the new asset\r\n      // Allow accounts that want recieve the new asset\r\n      // Have to opt in. To do this they send an asset transfer\r\n      // of the new asset to themseleves \r\n      // In this example we are setting up the 3rd recovered account to \r\n      // receive the new asset\r\n    \r\n      // First update changing transaction parameters\r\n      // We will account for changing transaction parameters\r\n      // before every transaction in this example\r\n      //cmd now\r\n    \r\n        params = await algodclient.getTransactionParams().do();\r\n        //comment out the next two lines to use suggested fee\r\n        params.fee = 1000;\r\n        params.flatFee = true;\r\n    \r\n        let sender = recoveredAccount3.addr;\r\n        let recipient = sender;\r\n        // We set revocationTarget to undefined as \r\n        // This is not a clawback operation\r\n        let revocationTarget = undefined;\r\n        // CloseReaminerTo is set to undefined as\r\n        // we are not closing out an asset\r\n        let closeRemainderTo = undefined;\r\n        // We are sending 0 assets\r\n        let amount = 0;\r\n    //let note=undefined;\r\n    //assetID='15940921';\r\n    \r\n    console.log(\"working211\")\r\n    \r\n        // signing and sending \"txn\" allows sender to begin accepting asset specified by creator and index\r\n        let opttxn = algosdk.makeAssetTransferTxnWithSuggestedParams(sender, recipient, closeRemainderTo, revocationTarget,\r\n             amount, note, assetID, params);\r\n    \r\n        // Must be signed by the account wishing to opt in to the asset    \r\n        let rawSignedTxn = opttxn.signTxn(recoveredAccount3.sk);\r\n        let opttx = (await algodclient.sendRawTransaction(rawSignedTxn).do());\r\n        console.log(\"Transaction : \" + opttx.txId);\r\n        // wait for transaction to be confirmed\r\n        await waitForConfirmation(algodclient, opttx.txId);\r\n    \r\n        //You should now see the new asset listed in the account information\r\n        console.log(\"Account3\" + recoveredAccount3.addr);\r\n        await printAssetHolding(algodclient, recoveredAccount3.addr, assetID);\r\n    \r\n        console.log(\"working 227\")\r\n      \r\n    //     // Transfer New Asset:\r\n    //     // Now that account3 can recieve the new tokens \r\n    //     // we can tranfer tokens in from the creator\r\n    //     // to account3\r\n    //     // First update changing transaction parameters\r\n    //     // We will account for changing transaction parameters\r\n    //     // before every transaction in this example\r\n    \r\n    //cmd now\r\n    \r\n        params = await algodclient.getTransactionParams().do();\r\n        //comment out the next two lines to use suggested fee\r\n        params.fee = 1000;\r\n        params.flatFee = true;\r\n    \r\n        sender = recoveredAccount1.addr;\r\n        recipient = recoveredAccount3.addr;\r\n        revocationTarget = undefined;\r\n        closeRemainderTo = undefined;\r\n        //Amount of the asset to transfer\r\n        amount = 1000;\r\n    \r\n        // signing and sending \"txn\" will send \"amount\" assets from \"sender\" to \"recipient\"\r\n        let xtxn = algosdk.makeAssetTransferTxnWithSuggestedParams(sender, recipient, closeRemainderTo, revocationTarget,\r\n             amount, note, assetID, params);\r\n        // Must be signed by the account sending the asset  \r\n        rawSignedTxn = xtxn.signTxn(recoveredAccount1.sk)\r\n        let xtx = (await algodclient.sendRawTransaction(rawSignedTxn).do());\r\n        console.log(\"Transaction : \" + xtx.txId);\r\n        // wait for transaction to be confirmed\r\n        await waitForConfirmation(algodclient, xtx.txId);\r\n    \r\n        // You should now see the 10 assets listed in the account information\r\n        console.log(\"Account 3 = \" + recoveredAccount3.addr);\r\n        await printAssetHolding(algodclient, recoveredAccount3.addr, assetID);\r\n    \r\n      })().catch(e => {\r\n        console.log(e);\r\n        console.trace();\r\n    });\r\n    }\r\n\r\n\r\n\r\n  //end transfer\r\n\r\n  // let arr=[];\r\n    \r\n  // const GetAccounts = () => {\r\n  //   const action = useCallback(async () => {    \r\n  //     await AlgoSigner.connect({\r\n  //       ledger: 'TestNet'\r\n  //     });\r\n  //     const accts = await AlgoSigner.accounts({\r\n  //       ledger: 'TestNet'\r\n  //     });\r\n  //     //const accts = await AlgoSigner.accounts({})\r\n  //     //alert(\"acc\"+accts);\r\n  //     arr.push(JSON.stringify(accts[0], null, 2))\r\n  \r\n  //     alert(JSON.stringify(accts[0], null, 2));\r\n  //     return JSON.stringify(accts[0], null, 2);\r\n  \r\n      \r\n  //   }, []);\r\n  \r\n  \r\n    //\r\n  \r\n    // return <ExampleAlgoSigner title=\"Get Accounts\" buttonText=\"Get Accounts\" buttonAction={action}/>\r\n//  };\r\n  \r\n\r\n  // const ExampleAlgoSigner = ({title, buttonText, buttonAction}) => {\r\n  //   const [res, setRes] = useState(\"\");\r\n    \r\n  //   const [result, setResult] = useState(\"\");\r\n  //   const onClick = useCallback(async () => {\r\n  //     const r = await buttonAction();\r\n  //     setResult(r);\r\n  //   }, [buttonAction]);\r\n  \r\n  //   return (\r\n  //     <>\r\n        \r\n  //       <Header as=\"h2\" dividing>{title}</Header>\r\n  //       <Button primary={true} onClick={onClick}>{buttonText}</Button>\r\n  //       <Message>\r\n  //         <code>\r\n  //           {result}\r\n  //         </code>\r\n  //       </Message>\r\n  //     </>\r\n  //   );\r\n  // };\r\n\r\n\r\n  window.name = \"John\";\r\n\r\n  // const [initialData,setinitialDate]=useState('Sellers');\r\n\r\n  //\r\n  const [searchTerm,setSearchTerm]=useState('');\r\n  console.log('returnsearch',searchTerm)\r\n  // const [input, setInput] = useState('');\r\n  // const [countryListDefault, setCountryListDefault] = useState();\r\n  // const [countryList, setCountryList] = useState();\r\n  // const fetchData = async () => {\r\n  //   return await fetch('https://restcountries.eu/rest/v2/all')\r\n  //     .then(response => response.json())\r\n  //     .then(data => {\r\n  //        setCountryList(data) \r\n  //        setCountryListDefault(data)\r\n  //      });}\r\n  // const updateInput = async (input) => {\r\n  //    const filtered = countryListDefault.filter(country => {\r\n  //     return country.name.toLowerCase().includes(input.toLowerCase())\r\n  //    })\r\n  //    setInput(input);\r\n  //    setCountryList(filtered);\r\n  // }\r\n  // useEffect( () => {fetchData()},[]);\r\n//\r\n  const [selected, setSelected] = React.useState(\"Sellers\");\r\n\r\n  const [selecteds, setSelecteds] = React.useState(\"1\");\r\n\r\n  const changeSelectOptionHandler = (event) => {\r\n    setSelected(event.target.value);\r\n  };\r\n\r\n  const changeSelectOptionHandlers = (event) => {\r\n    setSelecteds(event.target.value);\r\n  };\r\n\r\n  // const [currentSymbol, setCurrentSymbol] = useState('Sellers')\r\n  // const changeFruit = (newFruit) => {\r\n  //   setCurrentSymbol(newFruit)\r\n  // }\r\n  // const [currentSymbols, setCurrentSymbols] = useState('1 day')\r\n  // const changeFruits = (newFruit) => {\r\n  //   setCurrentSymbols(newFruit)\r\n  // }\r\n\r\n  const [isOpenFeed, setIsOpenFeed] = useState(false); \r\n  const togglePopupFeed = () => {\r\n    setIsOpenFeed(false);\r\n    //window.location.reload(false)    \r\n  }\r\n  const [Feedbackc,setFeedbackc]=useState('');\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const togglePopup = () => {\r\n    setIsOpen(false);\r\n  // window.location.reload(false)    \r\n  }\r\n    //fb   \r\n  //const [currentid, setCurrentid] = useState(\"\");\r\n //const [afternames,setAfternames] = useState([]);\r\n //const [name,setnames] = useState([]);\r\n //const [tid,setId] = useState(\"\"); \r\n//const [getAddressDb,setGetAddressDb]=useState([]);\r\n//const [getAddressDbs,setGetAddressDbs]=useState([]);\r\n//console.log(\"initialgetaddresss\",getAddressDbs)\r\n //console.log(\"initialgetaddress\",getAddressDb)\r\n //console.log(\"ipname\",name)\r\n\r\nconst[getImgbuyers,setgetImgbuyers]=useState([]);\r\nconst[getImbuyers,setgetImbuyers]=useState([]);//\r\nconsole.log(\"firb1\",getImgbuyers)\r\nconsole.log(\"firb2\",getImbuyers)\r\n\r\n\r\n//algo\r\n\r\nconst[getAlgos,setgetAlgos]=useState([]);\r\nconst[getAlgoss,setgetAlgoss]=useState([]);//\r\nconsole.log(\"firs1\",getAlgos)\r\nconsole.log(\"firs2\",getAlgoss)\r\n\r\n//algo\r\n\r\n\r\n\r\nconst[getImgsellers,setgetImgsellers]=useState([]);\r\nconst[getImsellers,setgetImsellers]=useState([]);//\r\nconsole.log(\"firs1\",getImgsellers)\r\nconsole.log(\"firs2\",getImsellers)\r\n\r\nconst[getImgreff,setgetImgreff]=useState([]);\r\nconst[getIm,setgetIm]=useState([]);\r\nconsole.log(\"fir1\",getImgreff)\r\nconsole.log(\"fir2\",getIm)\r\n//temp start\r\nconst[Loader,setLoader]=useState(false);\r\nlet btn;\r\nvar accounts;\r\n\r\n\r\n//start buyers print in algo\r\n\r\n\r\nconst getalgo = async() =>{\r\n  setLoader(true)\r\n  setLoading(true)\r\n  //window.location.reload(false)\r\n  let req = [];\r\n  let req2 = [];//imagerefexplore\r\n  firebase.database().ref(\"algorandData\").on(\"value\", (data) => {\r\n    if (data) {\r\n      data.forEach((d) => {\r\n        req.push(d.val())          \r\n      });        \r\n    }\r\n  });\r\n  setgetImgsellers(req)\r\n\r\n  getImgsellers.map((a)=>{\r\n    console.log(`abs`, a)\r\n  \r\n    Object.keys(a).map((b)=>{\r\n    //  console.log(`bb`, b)\r\n      req2.push({\r\n        //addAcc:\r\n        addKeyI:a[b].keyId,\r\n        addPrices:a[b].priceSet,\r\n        addcAdd:a[b].cAddress,\r\n        addIds:a[b].id,\r\n        addImgs:a[b].imageUrl,\r\n      addUname:a[b].userName,\r\n    addUsymbol:a[b].userSymbol,\r\n  addIpfs:a[b].ipfsUrl,\r\n  addOwnerAddress:a[b].ownerAddress,\r\n  addsold:a[b].soldd,\r\n  addextra1:a[b].extra1,\r\n  adddate:a[b].datesets\r\n})              \r\n    })\r\n  })    \r\n  setgetImsellers(req2)    \r\n  console.log(\"cfbs\",req) \r\n  setLoader(false)\r\n  setLoading(false)\r\n}\r\nuseEffect(()=>{getSellers()},[getImsellers])\r\n\r\n\r\n\r\n\r\n//end buyers print in algo\r\n\r\n//buyers start\r\n\r\nconst getbuyers = async() =>{\r\n  setLoader(true)\r\n  setLoading(true)\r\n  //window.location.reload(false)\r\n  let req = [];\r\n  let req2 = [];//imagerefexplore\r\n  firebase.database().ref(\"buyerssavedb\").on(\"value\", (data) => {\r\n    if (data) {\r\n      data.forEach((d) => {\r\n        req.push(d.val())          \r\n      });        \r\n    }\r\n  });\r\n  setgetImgbuyers(req)\r\n\r\n  getImgbuyers.map((a)=>{\r\n    console.log(`abb`, a)\r\n  \r\n    Object.keys(a).map((b)=>{\r\n    //  console.log(`bb`, b)\r\n      req2.push({\r\n        //addAcc:\r\n        addKeyI:a[b].keyId,\r\n        addPrices:a[b].priceSet,\r\n        addcAdd:a[b].cAddress,\r\n        addIds:a[b].id,\r\n        addImgs:a[b].imageUrl,\r\n      addUname:a[b].userName,\r\n    addUsymbol:a[b].userSymbol,\r\n  addIpfs:a[b].ipfsUrl,\r\n  addOwnerAddress:a[b].ownerAddress,\r\n  addsold:a[b].soldd,\r\n  addextra1:a[b].extra1,\r\n  adddate:a[b].datesets\r\n})              \r\n    })\r\n  })    \r\n  setgetImbuyers(req2)    \r\n  console.log(\"cfbb\",req) \r\n  setLoader(false)\r\n  setLoading(false)\r\n}\r\nuseEffect(()=>{getbuyers()},[getImbuyers])\r\n\r\n\r\n\r\n\r\n\r\n//end buyers\r\n\r\n//sellers start\r\n\r\nconst getSellers = async() =>{\r\n  setLoader(true)\r\n  setLoading(true)\r\n  //window.location.reload(false)\r\n  let req = [];\r\n  let req2 = [];//imagerefexplore\r\n  firebase.database().ref(\"sellerssavedb\").on(\"value\", (data) => {\r\n    if (data) {\r\n      data.forEach((d) => {\r\n        req.push(d.val())          \r\n      });        \r\n    }\r\n  });\r\n  setgetImgsellers(req)\r\n\r\n  getImgsellers.map((a)=>{\r\n    console.log(`abs`, a)\r\n  \r\n    Object.keys(a).map((b)=>{\r\n    //  console.log(`bb`, b)\r\n      req2.push({\r\n        //addAcc:\r\n        addKeyI:a[b].keyId,\r\n        addPrices:a[b].priceSet,\r\n        addcAdd:a[b].cAddress,\r\n        addIds:a[b].id,\r\n        addImgs:a[b].imageUrl,\r\n      addUname:a[b].userName,\r\n    addUsymbol:a[b].userSymbol,\r\n  addIpfs:a[b].ipfsUrl,\r\n  addOwnerAddress:a[b].ownerAddress,\r\n  addsold:a[b].soldd,\r\n  addextra1:a[b].extra1,\r\n  adddate:a[b].datesets\r\n})              \r\n    })\r\n  })    \r\n  setgetImsellers(req2)    \r\n  console.log(\"cfbs\",req) \r\n  setLoader(false)\r\n  setLoading(false)\r\n}\r\nuseEffect(()=>{getSellers()},[getImsellers])\r\n\r\n\r\n\r\n//sellers stop\r\n\r\nconst connectmm = async () => {\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n    //if(getaddress !== \"\"){\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n    //}\r\n    //else{\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n      //alert(\"acc\"+accounts[0])\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n      if(accounts[0] !== \"\"){\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        btn.innerHTML = \"CONNECTED\"\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n  const getImgpa = async() =>{\r\n    setLoader(true)\r\n    setLoading(true)\r\n    //window.location.reload(false)\r\n    let req = [];\r\n    let req2 = [];//imagerefexplore\r\n    firebase.database().ref(\"imagerefexplore\").on(\"value\", (data) => {\r\n      if (data) {\r\n        data.forEach((d) => {\r\n          req.push(d.val())          \r\n        });        \r\n      }\r\n    });\r\n    setgetImgreff(req)\r\n\r\n    getImgreff.map((a)=>{\r\n      console.log(`a`, a)\r\n    \r\n      Object.keys(a).map((b)=>{\r\n      //  console.log(`bb`, b)\r\n      //   console.log(`bbnext`, a[b].imageUrl)\r\n      //   console.log(`bbaddess`,a[b].cAddress)\r\n      //   console.log(`bbprice`,a[b].priceSet)\r\n      //   console.log(`bbname`,a[b].userName)\r\n      //   console.log(`bbsymbol`,a[b].userSymbol)\r\n      //   console.log(`bbipfs`,a[b].ipfsUrl)\r\n      //   console.log(`bboaddress`,a[b].ownerAddress)      \r\n//change here\r\n        req2.push({\r\n          //addAcc:\r\n          addKeyI:a[b].keyId,\r\n          addPrices:a[b].priceSet,\r\n          addcAdd:a[b].cAddress,\r\n          addIds:a[b].id,\r\n          addImgs:a[b].imageUrl,\r\n        addUname:a[b].userName,\r\n      addUsymbol:a[b].userSymbol,\r\n    addIpfs:a[b].ipfsUrl,\r\n    addOwnerAddress:a[b].ownerAddress,\r\n    addsold:a[b].soldd,\r\n    addextra1:a[b].extra1\r\n  })              \r\n      })\r\n    })    \r\n    setgetIm(req2)    \r\n    console.log(\"cfb\",req) \r\n    setLoader(false)\r\n    setLoading(false)\r\n  }\r\n  useEffect(()=>{getImgpa()},[getIm])\r\n\r\n  \r\nconst buynow= async(a) =>{\r\n\r\n  let mynetworks =  localStorage.getItem('mynetwork');\r\n\r\n  alert(\"network check  \"+mynetworks);\r\n\r\n  let gettrans=\"\";\r\n\r\n  if(mynetworks === \"BNB\"){\r\n//bnb 0x2cA1655cceB43D27027e6676E880D1Ce4e7d7d18\r\ngettrans=new web3.eth.Contract(tra,'0x2cA1655cceB43D27027e6676E880D1Ce4e7d7d18');\r\n\r\n  }\r\n  else if(mynetworks === \"ETH\"){\r\n    //eth 0xED3c6A02F152CaeA0f6F86EFADF55e638543DED3\r\n    gettrans=new web3.eth.Contract(tra,'0xED3c6A02F152CaeA0f6F86EFADF55e638543DED3');\r\n\r\n  }\r\n  else if(mynetworks === \"Maticmum\"){\r\n\r\n    //mactimum 0x2Faf13681f0b9dAD5074E52CcAC3d614dbf84c83\r\n    gettrans=new web3.eth.Contract(tra,'0x2Faf13681f0b9dAD5074E52CcAC3d614dbf84c83');\r\n\r\n  }\r\n  else if(mynetworks === \"\")\r\n  {\r\n\r\n  }\r\n  \r\n    //let gettrans=new web3.eth.Contract(tra,'0x2Faf13681f0b9dAD5074E52CcAC3d614dbf84c83');\r\n\r\n    //let gettrans=new web3.eth.Contract(tra,a.addOwnerAddress);\r\n\r\n    let getaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n\r\n    console.log(\"insidebutton\",a.addcAdd)\r\n    console.log(\"insidebuttonid\",a.addPrices)\r\n    console.log(\"insidebuttonids\",a.addOwnerAddress)\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n//tra start\r\n\r\n  //  await gettrans.methods.sendss(a.addOwnerAddress).send({\r\n  //    from:accounts[0], \r\n  //    value: web3.utils.toWei(a.addPrices, 'ether')\r\n  //  });\r\n\r\n  if(a.addOwnerAddress === accounts[0])\r\n  {\r\n\r\n    alert(\"you are owner so you does not purchase this token\")\r\n\r\n  }\r\n  else{\r\n\r\n\r\n    await gettrans.methods.sendss(a.addOwnerAddress).send({\r\n      from: accounts[0],\r\n      //value:web3.utils.toWei(a.addPrices,'BNB')\r\n      value: web3.utils.toWei(a.addPrices, 'ether')//ether\r\n     }); \r\n     //alert(\"amount has been sent\")\r\n //end trans\r\n \r\n     //let thing = a.addIds;\r\n \r\n     console.log(\"thingget\",a.addIds)\r\n \r\n     console.log(\"ownerget\",a.addOwnerAddress)\r\n \r\n     console.log(\"keyget\",a.addKeyI)\r\n \r\n     //let s = await getaaa.methods.items(thing).call();\r\n \r\n     //console.log(\"sget\",s)\r\n \r\n     //let state = a.addPrices;\r\n \r\n     console.log(\"stateget\",a.addPrices)\r\n  \r\n     await getaaa.methods.transferFrom(a.addOwnerAddress,accounts[0],a.addIds).send({\r\n       from:accounts[0]\r\n     });\r\n\r\n    //  let refbuyers=fireDb.database().ref(`buyersdb/${accounts[0]}`).child(a.addKeyI);//ref1\r\n     //const keybuyers = refbuyers.push().key;\r\n\r\n   \r\n    let ref1=fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI);//ref1\r\n    let ref12=fireDb.database().ref(`imagerefexplore/${a.addOwnerAddress}`).child(a.addKeyI);//ref12\r\n    //let ref12new=fireDb.database().ref(`imagerefexplore/${accounts[0]}`).child(a.addKeyI);//ref12new\r\n    let ref2=fireDb.database().ref(`imagerefbuy/${accounts[0]}`).child(a.addKeyI); \r\n     let ref23=fireDb.database().ref(`imagepurcre/${accounts[0]}`).child(a.addKeyI);\r\n     let ref233=fireDb.database().ref(`imagepurcre/${a.addOwnerAddress}`).child(a.addKeyI);\r\n     //const dbc = ref23.push().key;\r\n \r\n     console.log(\"ref2get\",ref2)\r\n     ref1.set({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n      ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",previousoaddress:a.addOwnerAddress,datesets:new Date().toDateString(),whois:'Buyers'}) \r\n       ref2.set({\r\n       id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n       ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n       ref23.set({\r\n         id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n         ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n         ref233.update({\r\n           id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n           ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n           ref12.update({\r\n            id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n            ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n       fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n       fireDb.database().ref(`imagerefbuy/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n\r\n       let refsellers=fireDb.database().ref(`buyerssavedb/${accounts[0]}`);//.child(a.addKeyI);//ref1\r\n      const keysellers = refsellers.push().key;\r\n  \r\n  \r\n    refsellers.child(keysellers).set({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n      ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'\r\n    })\r\n       //fireDb.database().ref(`imagerefexplore/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n       //fireDb.database().ref(`imagepurcre/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n       // let ref3=fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI);\r\n       // ref3.set({\r\n       //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n       //   ipfsUrl:a.addIpfs,ownerAddress:accounts[0]}) \r\n     // fireDb.database().ref(`imagerefbuy/${a.addOwnerAddress}`).child(a.addKeyI).set({\r\n     //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI     \r\n     // });\r\n //    fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();  \r\n //alert(\" Received successfully......\")\r\n setIsOpen(true);\r\n  } \r\n//window.location.reload(false)   \r\n}  \r\n  // const imgcall = (a) => {\r\n  //   alert(`Hello, ${a.keyId}`);\r\n  // };\r\n  //temp end\r\n  const feedbackset=()=>{\r\n    //alert(\"im here\"+Feedbackc)\r\n    //setFeedbackc\r\n  const mail = localStorage.getItem(\"mymailid\");\r\n  let reffeedback=fireDb.database().ref(`feedbacksave/`);\r\n  const db = reffeedback.push().key;\r\n  console.log(\"dbcheckappjs\",db)\r\n  reffeedback.child(db).set({id:db,profileimageUrl:\"\",name:\"\",emailid:mail,feedbacks:Feedbackc});\r\n  setFeedbackc('');\r\n  setIsOpenFeed(true);\r\n  }\r\n  \r\n  \r\n  // const filterSet=()=>{\r\n  //   alert(\"select   \"+selected+\"  \"+selecteds)\r\n\r\n  // }\r\n\r\n\r\n\r\n  const filterdata=()=>{\r\n    \r\n    if(selected === 'Sellers') {\r\n\r\n      if(selecteds === '1')\r\n      {\r\n        let data = getImsellers.filter((val)=>{\r\n          let date=moment()\r\n          let createddate=moment(val.adddate)\r\n          return date===createddate \r\n        })\r\n        return data;\r\n      }    \r\n        let data = getImsellers.filter((val)=>{\r\n\r\n          let date=moment().subtract(1,\"days\")\r\n          let weekdate=moment().subtract(parseInt(selecteds),\"days\")\r\n          let createddate=moment(val.adddate)\r\n\r\n          return moment(createddate).isBetween(weekdate,date)\r\n        })\r\n\r\n        return data;    \r\n    }\r\n\r\n\r\n    if(selecteds === '1')\r\n    {\r\n      let data = getImbuyers.filter((val)=>{\r\n        let date=moment()\r\n        let createddate=moment(val.adddate)\r\n        return date===createddate \r\n      })\r\n      return data;\r\n    }    \r\n      let data = getImbuyers.filter((val)=>{\r\n\r\n        let date=moment().subtract(1,\"days\")\r\n        let weekdate=moment().subtract(parseInt(selecteds),\"days\")\r\n        let createddate=moment(val.adddate)\r\n\r\n        return moment(createddate).isBetween(weekdate,date)\r\n      })\r\n\r\n      return data;    \r\n\r\n    //return getImbuyers;\r\n\r\n  }\r\n\r\n  const filterdatas=()=>{\r\n\r\n    if(searchTerm === '') return getIm\r\n    let data= getIm.filter((val)=>{\r\n      return val.addUname.toLowerCase().trim().includes(searchTerm.toLowerCase().trim())\r\n      \r\n    })\r\n    console.log('returndata',data)\r\n    return data;\r\n  }\r\n\r\n  const testingdata =()=>{\r\n\r\n    //alert(\"testing data\");\r\n\r\n  //  const crypto = require(\"crypto\");\r\n\r\n//const id = crypto.randomBytes(1).toString(\"hex\");\r\n\r\n//alert(\"idnumber     \"+id); // => f9b327e70bbcf42494ccb28b2d98e00e\r\n\r\n\r\n//const id1 = nextId(); // id: id-1\r\n//const id2 = nextId(\"test-id-\"); // id: test-id-2\r\n// const id3 = nextId(); // id: id-3\r\n\r\n// alert(id3)\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"display-4 mb-1\"></div>\r\n      <div style={{backgroundColor:'white',height:'100px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n<div style={{marginLeft:'0px',height:'40px',width:'100px',color:'white'}}>\r\n\r\n      <img src={Logo} alt=\"Logo\" />\r\n\r\n      <div style={{marginLeft:'10px',marginTop:'',height:'100px',width:'100px'}}>\r\n    \r\n      {/* onClick={event=>{setSearchTerm(event.target.value)}} */}\r\n      {/* onChange={event => {setSearchTerm(event.target.value)}} */}\r\n      {/* value={searchTerm} */}\r\n      <input type=\"text\"  placeholder=\"Search...\"  onChange={event => {setSearchTerm(event.target.value)}}/>\r\n      {\r\n        searchTerm !== '' &&\r\n      <>\r\n      {filterdata().map((val,key)=>{\r\n        \r\n        return (\r\n        <div className='user' key={key}>\r\n          <h5 onClick={()=>setSearchTerm(val.title)} style={{cursor:'pointer'}}>{val.title}</h5>\r\n        </div>\r\n        )\r\n      })}\r\n      </>\r\n}\r\n</div>\r\n</div>\r\n\r\n      {/* <img style={{width:\"100px\",height:\"100px\"}} src=\"/logo.svg\" alt=\"\"/> */}\r\n\r\n      <div style={{backgroundColor:'white',height:'43px',width:'1154px',marginLeft:'150px',marginBlock:'15px'}}>\r\n\r\n      <Link\r\n              to=\"/\">              \r\n              <button\r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"                \r\n              >\r\n                Home\r\n              </button>\r\n</Link>\r\n              {' '}\r\n            <Link\r\n              to=\"/explore\">             \r\n              <button              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"                \r\n              >\r\n                Explore\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/followingpage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n              >\r\n               How it works\r\n              </button>\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // \r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <button\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n              {\" \"}\r\n{/* <h2>Welcome</h2> */}\r\n<button onClick={handleLogout}>Logout</button>\r\n{/* </nav> */}\r\n\r\n\r\n\r\n\r\n<Link\r\n              to=\"/test\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Check\r\n              </button>\r\n              </Link>\r\n\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n              <br></br>     \r\n<br></br>\r\n\r\n<button onClick={TransferAsset}>TransferAsset</button>\r\n<br></br>\r\n<br></br>\r\n<div>\r\n<div>\r\n    <Online>\r\n    \r\n\r\n</Online>\r\n\r\n    </div>\r\n\r\n    <div>\r\n\r\n    <Offline>\r\n\r\n\r\n    {/* {<Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your are offline please check your internet connection......</p>\r\n        <center> */}\r\n        {/* <button type=\"button\" onClick={togglePopup}>close</button> */}\r\n        {/* </center> */}\r\n      {/* </>} */}\r\n    {/* //  handleClose={togglePopup} */}\r\n    {/* />} */}\r\n\r\n\r\n    </Offline>\r\n\r\n    </div>\r\n\r\n</div>\r\n<center>\r\n\r\n{/* {isLoading ? <div>\r\n              <img style={{width:\"300px\",height:\"300px\"}} src=\"/4V0b.gif\" alt=\"\"/></div>:' '} */}\r\n\r\n</center>\r\n<div  style={{backgroundColor:'white',marginBlock:'5px',display:'flex'}}>\r\n<h6 style={{color:'skyblue'}}>Top &nbsp;\r\n\r\n      <select onChange={changeSelectOptionHandler}>\r\n            <option value='Sellers'>Sellers</option>\r\n            <option value='Buyers'>Buyers</option>\r\n          </select>\r\n\r\n      &nbsp;in&nbsp;\r\n      \r\n{/* style={{color:'white'}} */}\r\n\r\n      <select onChange={changeSelectOptionHandlers}>\r\n            <option value='1'>1 day</option>\r\n            <option value='8'>7 days</option>\r\n            <option value='32'>30 days</option>\r\n          </select>\r\n\r\n&nbsp;\r\n\r\n      {/* onClick={()=>{feedbackset()}} */}\r\n\r\n      {/* <button type=\"button\" onClick={()=>{filterSet()}}  style={{height:'5px',backgroundColor:'white',border:'none',color:'skyblue',fontSize:'15px'}}>Filter</button> */}\r\n\r\n\r\n      </h6>\r\n\r\n{getImsellers.length === 0 ? null :( \r\n  <div style={{backgroundColor:'black',display:'flex',flexWrap:'wrap'}}>\r\n{filterdata().map((a)=>{  \r\n    return (\r\n      <div style={{backgroundColor:'black',height:'300px',width:'300px'}}>\r\n\r\n<div style={{border: '2px solid white',borderRadius:'5px'}}>\r\n\r\n<center>\r\n    <Link                  \r\n                  to={{   \r\n                    pathname: `/explore/${a.addKeyI}/${a.addOwnerAddress}`,\r\n                    //pathname: `/explore/${combine}`,\r\n                  }}\r\n                >\r\n    <img   src={a.addImgs}  style={{height:120,width:120,marginTop:'10px'}} alt=\"\"    />\r\n    </Link>\r\n    {/* <h5>hello{a[b].imageUrl}</h5> */}\r\n  \r\n    <h6 style={{color:'white'}}>Name : {a.addUname}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>Symbol : {a.addUsymbol}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>price : {a.addPrices}</h6>\r\n\r\n    {a.addsold === '' ? (\r\n<>\r\n{/* onClick={()=>buynow(a)} */}\r\n{ <button  >BuyNow</button> }\r\n  \r\n    {' '}\r\n</>\r\n    ):(\r\n\r\n      <h4 style={{color:'white'}}>Already solded</h4>\r\n    )}\r\n</center>\r\n</div>\r\n\r\n</div>\r\n)})}\r\n  </div>\r\n)}\r\n  </div>\r\n\r\n<div>\r\n\r\n{/* {Loader?\r\n<h1>Loading.....</h1>\r\n: */}\r\n<>\r\n{getIm.length === 0 ? null :( \r\n<div style={{backgroundColor:'black',display:'flex',flexWrap:'wrap'}}>\r\n{filterdatas().map((a)=>{\r\n  console.log(`a`, a)\r\n  // Object.keys(a).map((b)=>{\r\n  //   console.log(`b`, b)\r\n  //   console.log(`bnext`, a[b].imageUrl)        \r\n  // })\r\n  //if((a.addId !== ' ') && (a.addsrc !== ' '))\r\n//  if(a.addsold === '')\r\n//  {\r\n    return (\r\n      <div style={{backgroundColor:'black',height:'500px',width:'300px'}}>\r\n\r\n<div style={{border: '2px solid white',borderRadius:'5px'}}>\r\n\r\n<center>\r\n    <Link                  \r\n                  to={{   \r\n                    pathname: `/explore/${a.addKeyI}/${a.addOwnerAddress}`,\r\n                    //pathname: `/explore/${combine}`,\r\n                  }}\r\n                >\r\n    <img   src={a.addImgs}  style={{height:120,width:120,marginTop:'10px'}} alt=\"\"    />\r\n    </Link>\r\n    {/* <h5>hello{a[b].imageUrl}</h5> */}\r\n  \r\n    {/* <h6 style={{color:'white'}}>Name : {a.addUname}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>Symbol : {a.addUsymbol}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>price : {a.addPrices}</h6> */}\r\n    <h5 style={{color:'white'}}>Name : {a.addUname}\r\n\r\n<h5 style={{color:'white'}}>Token : {a.addIds}\r\n  \r\n  <h5 style={{color:'white'}}>Symbol : {a.addUsymbol}\r\n  \r\n  <h3 style={{color:'white'}}>price : {a.addPrices}</h3>\r\n\r\n  <h4 style={{color:'white'}}>address: {a.addOwnerAddress}</h4>\r\n  </h5>\r\n\r\n  </h5>\r\n  </h5>\r\n\r\n    {a.addsold === '' ? (\r\n<>\r\n{ <button onClick={()=>buynow(a)} >BuyNow</button> }\r\n  \r\n    {' '}\r\n</>\r\n    ):(\r\n\r\n      <h6 style={{color:'white'}}>Already solded</h6>\r\n    )}\r\n    \r\n    </center>\r\n\r\n</div>\r\n\r\n    {isOpen && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your token has been buyed successfully......</p>\r\n        <center>\r\n        <button type=\"button\" onClick={togglePopup}>close</button>\r\n        </center>\r\n      </>}\r\n       handleClose={togglePopup}\r\n    />}\r\n\r\n    {/* </div> */}\r\n\r\n    </div>\r\n    )\r\n  })}\r\n</div>\r\n)}\r\n</>\r\n</div>                    \r\n  \r\n  <div style={{backgroundColor:'white',height:'200px',width:'1500px',marginBlock:'5px',display:'flex',marginLeft:'2px'}} >\r\n  <Footer/>\r\n  <div>\r\n  <h6>Get the latest Rarible updates</h6>\r\n&nbsp;\r\n  <input\r\n  placeholder='Your e-mail'\r\n  type='text'\r\n  name=\"Feedbackc\"\r\n  required\r\n  onChange={event => setFeedbackc( event.target.value)}\r\n  \r\n/>\r\n\r\n{' '}\r\n    <button type=\"button\" onClick={()=>{feedbackset()}} style={{height:'40px'}}>Submit</button>\r\n\r\n</div>\r\n\r\n<div style={{marginLeft:'100px'}}>  \r\n\r\n<h4 style={{color:'black'}}>Rarible</h4>\r\n<h4 style={{color:'black'}}>Explore</h4>\r\n<h4 style={{color:'black'}}>How it works</h4>\r\n<h4 style={{color:'black'}}>Create</h4>\r\n<h4 style={{color:'black'}}>Support</h4>\r\n\r\n</div>  \r\n\r\n<div style={{marginLeft:'200px'}}>  \r\n\r\n<h4 style={{color:'black'}}>Community</h4>\r\n<h4 style={{color:'black'}}>RARI Token</h4>\r\n<h4 style={{color:'black'}}>Discussion</h4>\r\n<h4 style={{color:'black'}}>Voting</h4>\r\n<h4 style={{color:'black'}}>Suggest feature</h4>\r\n\r\n</div>\r\n\r\n\r\n<div style={{marginLeft:'250px'}}>  \r\n\r\n<div>\r\n\r\n{/* <Link to=\" https://publish.twitter.com/\"> */}\r\n\r\n{/* <h4 style={{color:'black'}}>twitter</h4> */}\r\n\r\n{/* <a style={{color:'black'}} class=\"btn-floating btn btn-tw\" type=\"button\" role=\"button\" title=\"Share on twitter\"\r\n   href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Fparse.com\"\r\n   rel=\"noopener\">\r\n  <i class=\"fab fa-2x fa-twitter\"></i>\r\n  twitter\r\n</a> */}\r\n\r\n{/* <a href=\"https://twitter.com/intent/tweet?url=link_to_be_shared\">Share To Twitter</a> */}\r\n\r\n\r\n<TwitterShareButton\r\n              title=\"Hello everyone \"\r\n             url=\"https://stackoverflow.com/\"\r\n            >\r\n             \r\n              <TwitterIcon size={35} round />\r\n            </TwitterShareButton>    \r\n\r\n{/* </Link> */}\r\n\r\n<br></br>\r\n\r\n{/* <TelegramLoginButton\r\n    botName=\"test\"\r\n    dataOnauth={(user: TelegramUser) => console.log(user)}\r\n  /> */}\r\n\r\n{/* <h4 style={{color:'black'}} onClick={testingdata}>Testing</h4> */}\r\n\r\n</div>\r\n\r\n{/* <DarkMode /> */}\r\n\r\n{/* <h4 style={{color:'black'}}>Language</h4> */}\r\n</div>\r\n    &nbsp;\r\n  </div>\r\n\r\n  {isOpenFeed && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your Email has been sent successfully......</p>\r\n        <button type=\"button\" onClick={togglePopupFeed}>close</button>\r\n      </>}\r\n      // handleClose={togglePopup}\r\n    />}\r\n\r\n\r\n    </>\r\n\r\n  );\r\n}\r\nexport default Explore;"]},"metadata":{},"sourceType":"module"}