import './App.css';
//import {useState} from 'react';
import React, { useState,useEffect } from "react";
import web3 from './web3';
import lottery from './nftcontract';//this line import lottery folder
import ipfs from './ipfs';
//import storehash from './storehash';
import { Router, Route, Switch } from "react-router-dom";
import history from "./utils/history";
//import First from "./First";
//import Second from "./Second";
import NewPage from './Newpage';
import Tokencreate from './Tokencreate';
import PrintallImage from './Printallimage';
import Sendpage from './Sendpage';
import firebase from "./firebase";
import fireDb from './firebase';
import Compress from "react-image-file-resizer";


function App() {


  //firebase 

  var studentlist = [];

  var stuset=[];


  const [currentid, setCurrentid] = useState("");

  const [toaddress,setToaddress] = useState("");
  const [tid,setId] = useState("");
  //const [turi,setUri] = useState("");
  const [tname,setName] = useState("");
  const [tsymbol] = useState("");
  //const [tokenuri,setTokenUri] = useState("");
  //var [getimageurl,setgetImage] = useState("");
  //const [tfile,setTfile] = useState("");
  const [ipfsHash,setIpfsHash] = useState(null);
  var [buffer,setBuffer] = useState("");
  //const [ethAddress,setEthAddress] = useState("");
  //const [blockNumber,setBlocknumber] = useState("");
  //const [transactionHash,setTransaction] = useState("");
  //const [gasUsed,setGasUsed] = useState("");
  //const [txReceipt,se] = useState("");

  let tf;

  let [Img,setImg] = useState("");

  //start


  const captureFile =(event) => {
    event.stopPropagation()
    event.preventDefault()
    const file = event.target.files[0]
    let reader = new window.FileReader()

    Compress.imageFileResizer(file, 300, 300, 'JPEG', 10, 0,
    uri => {
      console.log("iuri",uri)
setImg(uri)
    },
    'base128'
    );
    reader.readAsArrayBuffer(file)
    reader.onloadend = () => convertToBuffer(reader);    
  };
const convertToBuffer = async(reader) => {
  //file is converted to a buffer for upload to IPFS
    const buffer = await Buffer.from(reader.result);
  //set this buffer -using es6 syntax
    setBuffer(buffer);
};
const onSubmitImage = async (event) => {
  event.preventDefault();
 //bring in user's metamask account address
  const accounts = await web3.eth.getAccounts();
 
  console.log('Sending from Metamask account: ' + accounts[0]);

  await ipfs.add(buffer, (err, ipfsHash) => {
    console.log(err,ipfsHash);

    console.log("buff",buffer);

  
    setIpfsHash(ipfsHash[0].hash);
  }) 
}; 
//end

  

   const onSubmitNFT = async (event) => {


    //alert(localStorage.getItem('myimageuri'));
      

    event.preventDefault();
    
      //new write below

      const accounts = await web3.eth.getAccounts();
    
    
      //alert("waiting for pic url"); 
    
      var ta=tname;
      var tb=tsymbol;
      var tc='https://ipfs.io/ipfs/'+ipfsHash;
      var td=toaddress;
      var te=tid;
      tf='https://ipfs.io/ipfs/'+ipfsHash;
      
      
      
    
      //alert("im work ta tb tc  td te tf  "+ta+" "+tb+" "+tc+" "+td+" "+te+" "+tf);
    
      
    
      //const accounts = await  web3.eth.getAccounts();

      var getaddress=localStorage.getItem('myaddress')

    alert("getdata from firebase"+getaddress)
    
    
    
      await lottery.deploy({
    
        data:'',
        arguments: [ta,tb,Img,accounts[0],'0xD264b074c4a772E56536005Ae629518ee1bCc83a']        
        })
      .send({
      from: accounts[0],
      gas: 9088550,
      gasPrice: '1000000000'
    })
    .then(function(newContractInstance){
      console.log(newContractInstance.options.address) // instance with the new contract address
       //acc=newContractInstance.options.address
      alert(newContractInstance.options.address);
      localStorage.setItem('myData', newContractInstance.options.address);
    
      //alert("completed");
    
      //alert(this.state.tname+" and "+this.state.tsymbol +" and "+this.state.tokenuri);
    })
    
    
    
    alert(localStorage.getItem('myData'));
    
    var address =  localStorage.getItem('myData');

    //firebase get  value

    var getaddress=localStorage.getItem('myaddress')

    //alert("getdata from firebase"+getaddress)
    
    //fireDb.database().ref("contractaddress").child(getaddress).on("value",snapshot => {
      
      //snapshot.forEach(snap => {        
        //  studentlist.push(snap.val())                
          
      //})
    //})

    //stuset = studentlist.filter(function(item, pos, self) {
      //return self.indexOf(item) == pos;
  //})
   //var items = stuset.map((item) =>
    //item+','
  //);
    
  //alert("stud"+stuset)
  //alert("stud items"+items)
    
    //alert("length"+stuset.length)
    //for(var i=0;i<stuset.length;i++){

      //if(getaddress == stuset[i]) {

        //alert("print equal one "+stuset[i])
      //}
      //else{

        //alert("print Nothing ")
      //}
      
    //}




    
    const abi = [
      {
        "constant": true,
        "inputs": [
          {
            "name": "interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "getApproved",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "_tokenURIs",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "giver",
            "type": "address"
          },
          {
            "name": "recipients",
            "type": "address[]"
          },
          {
            "name": "values",
            "type": "uint256[]"
          }
        ],
        "name": "batchTransfer",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "from",
            "type": "address"
          },
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "owner",
            "type": "address"
          },
          {
            "name": "index",
            "type": "uint256"
          }
        ],
        "name": "tokenOfOwnerByIndex",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "from",
            "type": "address"
          },
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "burn",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "destroyAndSend",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "index",
            "type": "uint256"
          }
        ],
        "name": "tokenByIndex",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "maker",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "name": "tokenURI",
            "type": "string"
          }
        ],
        "name": "mintWithTokenURI",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "ownerOf",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "buyThing",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": true,
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "owner",
            "type": "address"
          }
        ],
        "name": "tokensOfOwner",
        "outputs": [
          {
            "name": "",
            "type": "uint256[]"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "isOwner",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "account",
            "type": "address"
          }
        ],
        "name": "addMinter",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "amountToMint",
            "type": "uint256"
          },
          {
            "name": "metaId",
            "type": "string"
          },
          {
            "name": "setPrice",
            "type": "uint256"
          },
          {
            "name": "isForSale",
            "type": "bool"
          }
        ],
        "name": "batchMint",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "renounceMinter",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "baseUri",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "approved",
            "type": "bool"
          }
        ],
        "name": "setApprovalForAll",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "account",
            "type": "address"
          }
        ],
        "name": "isMinter",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "",
            "type": "address"
          },
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "auri",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "id",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "Owner",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "getAllURI",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "from",
            "type": "address"
          },
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "items",
        "outputs": [
          {
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "name": "price",
            "type": "uint256"
          },
          {
            "name": "metaId",
            "type": "string"
          },
          {
            "name": "state",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "tokenURI",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "name": "isEnabled",
            "type": "bool"
          }
        ],
        "name": "setTokenState",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "printitems",
        "outputs": [
          {
            "name": "",
            "type": "uint256[]"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "printitem",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "tokenIds",
            "type": "uint256[]"
          }
        ],
        "name": "batchBurn",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "name": "setPrice",
            "type": "uint256"
          }
        ],
        "name": "setTokenPrice",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "owner",
            "type": "address"
          },
          {
            "name": "operator",
            "type": "address"
          }
        ],
        "name": "isApprovedForAll",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "ispushed",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "symbol",
            "type": "string"
          },
          {
            "name": "uri",
            "type": "string"
          },
          {
            "name": "fee",
            "type": "address"
          },
          {
            "name": "creator",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "error",
            "type": "string"
          },
          {
            "indexed": false,
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "ErrorOut",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "metaId",
            "type": "string"
          },
          {
            "indexed": false,
            "name": "recipients",
            "type": "address[]"
          },
          {
            "indexed": false,
            "name": "ids",
            "type": "uint256[]"
          }
        ],
        "name": "BatchTransfered",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "id",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "metaId",
            "type": "string"
          }
        ],
        "name": "Minted",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "metaId",
            "type": "string"
          },
          {
            "indexed": false,
            "name": "ids",
            "type": "uint256[]"
          }
        ],
        "name": "BatchBurned",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "indexed": false,
            "name": "metaId",
            "type": "string"
          }
        ],
        "name": "BatchForSale",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "metaId",
            "type": "string"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Bought",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [],
        "name": "Destroy",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "account",
            "type": "address"
          }
        ],
        "name": "MinterAdded",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "account",
            "type": "address"
          }
        ],
        "name": "MinterRemoved",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "approved",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "operator",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "approved",
            "type": "bool"
          }
        ],
        "name": "ApprovalForAll",
        "type": "event"
      }
    ];
    var geta=new web3.eth.Contract(abi,address);
    
    
    //let a=this.state.toaddress;
    //let b=this.state.tokenid;
    //let c=this.state.tokenuri;
    
    
    
    //alert("im work a +b"+td+" "+te+" "+tf);
    
    event.preventDefault();
    
    //const accounts = await web3.eth.getAccounts();
    
    await geta.methods.mintWithTokenURI(accounts[0],te,Img).send({
      from: accounts[0],

      //gas: 21000
      
     }).on('transactionHash',function(hash){

      console.log("hashget",hash)
                //start


                    //this line firebase code added below
                    //const accounts = await web3.eth.getAccounts();

                    let getaddress=localStorage.getItem('myaddress')
                    
                    let getData=localStorage.getItem('myData')
                    
                        fireDb.database().ref("contractaddress").child(accounts[0]).push(getData, (err) => {
                          //   console.log(obj, "obj");
                          if (err)
                              console.log(err);
                          else 
                        setCurrentid("");
                        });
                      
                    
                        fireDb.database().ref("imageref").child(accounts[0]).push(Img, (err) => {
                          //   console.log(obj, "obj");
                        });
                    
          //end          






     })

}

  const funcall=async()=>{

              //db store here





  }


     
     //alert('transaction success')}).catch(function(e){ 
      
     // })   
     //.then(function (error, result) {

    //   if (!error) {
    //       console.log("noerror",'ok')
    //       console.log("mintcheck",mint)
    //   } else {

    //     console.log("Error","errorelse")

    //   }
      
    // }
  
    
    
    //await geta.methods.tokenURI(te).send({
    //from: accounts[0]
    //value: this.setState({c:accounts[0]})
    
    //});
    
    //this.setState({ message: 'You have been entered!' });
    
    //var data =await lottery.methods.tokenURI(te).call();
    
    //this.setState({da: String(te)})
    
    //this.setState({ message: 'You have been entered!' });
    
    //alert(" and "+tid +" and "+te+"and   data   ");
    
    
    //alert(localStorage.getItem('myData'));
    
    
    //transfer
    
    //await geta.methods.tokenURI(te).send({
      //from: accounts[0]
      //value: this.setState({c:accounts[0]})
      
    //});
    
    
    //alert("NFT NAME    "+ta+"   NFT SYMBOL    "+tb+"    TOKEN URI    "+tc+"   TOKEN ADDRESS    "+td+"    TOKEN ID   "+te+"  TOKEN URI  "+tf);
    
    
    
    
    
      //end above
    
    
      //alert("waiting for data clear");
    
      //document.getElementById("nameid").innerHTML="";
      //document.getElementById("symbolid").innerHTML="";
      //document.getElementById("addressid").innerHTML="";
      //document.getElementById("idid").innerHTML="";
      //document.getElementById("fileid").innerHTML="";
    
    
      //this.tname.value = "";
      //this.tsymbol.value = "";
      //this.toaddress.value = "";
      //this.tid.value = "";
      //this.tfile.value = "";
    
    
  //}

  //useEffect(()=>{onSubmitNFT()},[])

    

  


  return (
    <div className="App">


<button
                class="btn btn-info btn-block"
                type="button"
                onClick={() => {
                  history.push("/Allcontractpage");
                }}>
                Explore
              </button>


<button
                class="btn btn-info btn-block"
                type="button"
                onClick={() => {
                  history.push("/Salepagecopy");
                }}>
                My items
              </button>
              
              <button
                class="btn btn-info btn-block"
                type="button"
                onClick={() => {
                  history.push("/Followingpage");
                }}
              >
                Following
              </button>

              <button
                class="btn btn-info btn-block"
                type="button"
                onClick={() => {
                  history.push("/Activitypage");
                }}>
                Activity
              </button>
              <button
                class="btn btn-info btn-block"
                type="button"
                onClick={() => {
                  history.push("/Howitworkpage");
                }}
              >
                How it work
              </button>

              <button
                class="btn btn-info btn-block"
                type="button"
                onClick={() => {
                  history.push("/Communitypage");
                }}
              >
                Community
              </button>
              <button
                class="btn btn-info btn-block"
                type="button"
                onClick={() => {
                     history.push("/Nft");
                }}
              >
              Create
              </button>





              <br></br>
<br></br>
      
<center>
<br></br>





<form onSubmit={onSubmitImage}>


		  <label for="images">Upload Your Image     </label>
            <input 
			name="tfile"
			id="fileid"
              type = "file"
              onChange = {captureFile}
			  required
            />
			
             <button 
             type="submit"> 
             Upload Image NFT
             </button>
			 <br></br>
			 <br></br>
			 <br></br>
	</form>





<form onSubmit={onSubmitNFT} id="create-course-form" >

<label for="name">Create Your NFT  Name    </label>
	  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<input
id="nameid"
  type='text'
  name="tname"
  required
  onChange={event => setName(event.target.value)}
  
/>
<br></br>
      <br></br>

	  <label for="symbol">Create Your NFT  Symbol    </label>
	  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<input
  id="symbolid"
  type='text'
  name="tsymbol"
  required
  onChange={event => setId( event.target.value)}
  
/>

<br></br>
<br></br>


	  <label for="id">Create Your Unique Token-Id {' '}   </label>

<input
id="idid"
  type='text'
  name="tid"
  required
  onChange={event => setId( event.target.value)}
  
/>

<br></br>
<br></br>


<button 
             type="submit"> 
             Upload and Create NFT
             </button>

</form>



      
<br></br>
<br></br>




</center>

<br></br>
<br></br>
  <table bordered responsive>
                
                <tbody>
                  <tr>
                    <td>Name</td>
                    <td>{tname}</td>
                  </tr>
				  <tr>
                    <td>Symbol</td>
                    <td>{tsymbol}</td>
                  </tr>
				  
				  <tr>
                    <td>Token-Id</td>
                    <td>{tid}</td>
                  </tr>
				  <tr>
                    <td>Image-URL</td>
                    <td>https://ipfs.io/ipfs/{ipfsHash}</td>
                  </tr>
				  <tr>
                    <td>Image-View</td>

                    <td><img src={localStorage.getItem('myimageuri')}  alt={'C - language'} /> 			
					</td>
                  </tr>         
                </tbody>

            </table>

			



            <Router history={history}>
          <Switch>
            <Route path="/" exact>
              <div class="display-4 mb-1">Choose a route to go to</div>
              
            
            </Route>
            <Route path="/newpage">
              <NewPage />
            </Route>
            <Route path="/tokenpage">
              <Tokencreate />
            </Route>
            <Route path="/sendpage">
              <Sendpage />
            </Route>
            <Route path="/printallimage">
              <PrintallImage />
            </Route>
          </Switch>
        </Router>

	  
      </div>      
  );
}

export default App;
